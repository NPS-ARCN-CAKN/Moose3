'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("MooseDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class MooseDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableGSPE As GSPEDataTable
    
    Private tableGSPE_DensityEstimates As GSPE_DensityEstimatesDataTable
    
    Private tableGSPE_PopulationEstimates As GSPE_PopulationEstimatesDataTable
    
    Private tableGSPE_Results As GSPE_ResultsDataTable
    
    Private tableGSPE_Surveys As GSPE_SurveysDataTable
    
    Private relationFK_GSPE_Ratios_GSPE_Surveys As Global.System.Data.DataRelation
    
    Private relationFK_GSPE_GSPE_Surveys As Global.System.Data.DataRelation
    
    Private relationFK_GSPE_DensityEstimates_GSPE_Surveys As Global.System.Data.DataRelation
    
    Private relationFK_GSPE_PopulationEstimates_GSPE_Surveys As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("GSPE")) Is Nothing) Then
                MyBase.Tables.Add(New GSPEDataTable(ds.Tables("GSPE")))
            End If
            If (Not (ds.Tables("GSPE_DensityEstimates")) Is Nothing) Then
                MyBase.Tables.Add(New GSPE_DensityEstimatesDataTable(ds.Tables("GSPE_DensityEstimates")))
            End If
            If (Not (ds.Tables("GSPE_PopulationEstimates")) Is Nothing) Then
                MyBase.Tables.Add(New GSPE_PopulationEstimatesDataTable(ds.Tables("GSPE_PopulationEstimates")))
            End If
            If (Not (ds.Tables("GSPE_Results")) Is Nothing) Then
                MyBase.Tables.Add(New GSPE_ResultsDataTable(ds.Tables("GSPE_Results")))
            End If
            If (Not (ds.Tables("GSPE_Surveys")) Is Nothing) Then
                MyBase.Tables.Add(New GSPE_SurveysDataTable(ds.Tables("GSPE_Surveys")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property GSPE() As GSPEDataTable
        Get
            Return Me.tableGSPE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property GSPE_DensityEstimates() As GSPE_DensityEstimatesDataTable
        Get
            Return Me.tableGSPE_DensityEstimates
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property GSPE_PopulationEstimates() As GSPE_PopulationEstimatesDataTable
        Get
            Return Me.tableGSPE_PopulationEstimates
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property GSPE_Results() As GSPE_ResultsDataTable
        Get
            Return Me.tableGSPE_Results
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property GSPE_Surveys() As GSPE_SurveysDataTable
        Get
            Return Me.tableGSPE_Surveys
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As MooseDataSet = CType(MyBase.Clone,MooseDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("GSPE")) Is Nothing) Then
                MyBase.Tables.Add(New GSPEDataTable(ds.Tables("GSPE")))
            End If
            If (Not (ds.Tables("GSPE_DensityEstimates")) Is Nothing) Then
                MyBase.Tables.Add(New GSPE_DensityEstimatesDataTable(ds.Tables("GSPE_DensityEstimates")))
            End If
            If (Not (ds.Tables("GSPE_PopulationEstimates")) Is Nothing) Then
                MyBase.Tables.Add(New GSPE_PopulationEstimatesDataTable(ds.Tables("GSPE_PopulationEstimates")))
            End If
            If (Not (ds.Tables("GSPE_Results")) Is Nothing) Then
                MyBase.Tables.Add(New GSPE_ResultsDataTable(ds.Tables("GSPE_Results")))
            End If
            If (Not (ds.Tables("GSPE_Surveys")) Is Nothing) Then
                MyBase.Tables.Add(New GSPE_SurveysDataTable(ds.Tables("GSPE_Surveys")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableGSPE = CType(MyBase.Tables("GSPE"),GSPEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableGSPE) Is Nothing) Then
                Me.tableGSPE.InitVars
            End If
        End If
        Me.tableGSPE_DensityEstimates = CType(MyBase.Tables("GSPE_DensityEstimates"),GSPE_DensityEstimatesDataTable)
        If (initTable = true) Then
            If (Not (Me.tableGSPE_DensityEstimates) Is Nothing) Then
                Me.tableGSPE_DensityEstimates.InitVars
            End If
        End If
        Me.tableGSPE_PopulationEstimates = CType(MyBase.Tables("GSPE_PopulationEstimates"),GSPE_PopulationEstimatesDataTable)
        If (initTable = true) Then
            If (Not (Me.tableGSPE_PopulationEstimates) Is Nothing) Then
                Me.tableGSPE_PopulationEstimates.InitVars
            End If
        End If
        Me.tableGSPE_Results = CType(MyBase.Tables("GSPE_Results"),GSPE_ResultsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableGSPE_Results) Is Nothing) Then
                Me.tableGSPE_Results.InitVars
            End If
        End If
        Me.tableGSPE_Surveys = CType(MyBase.Tables("GSPE_Surveys"),GSPE_SurveysDataTable)
        If (initTable = true) Then
            If (Not (Me.tableGSPE_Surveys) Is Nothing) Then
                Me.tableGSPE_Surveys.InitVars
            End If
        End If
        Me.relationFK_GSPE_Ratios_GSPE_Surveys = Me.Relations("FK_GSPE_Ratios_GSPE_Surveys")
        Me.relationFK_GSPE_GSPE_Surveys = Me.Relations("FK_GSPE_GSPE_Surveys")
        Me.relationFK_GSPE_DensityEstimates_GSPE_Surveys = Me.Relations("FK_GSPE_DensityEstimates_GSPE_Surveys")
        Me.relationFK_GSPE_PopulationEstimates_GSPE_Surveys = Me.Relations("FK_GSPE_PopulationEstimates_GSPE_Surveys")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "MooseDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/MooseDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableGSPE = New GSPEDataTable()
        MyBase.Tables.Add(Me.tableGSPE)
        Me.tableGSPE_DensityEstimates = New GSPE_DensityEstimatesDataTable()
        MyBase.Tables.Add(Me.tableGSPE_DensityEstimates)
        Me.tableGSPE_PopulationEstimates = New GSPE_PopulationEstimatesDataTable()
        MyBase.Tables.Add(Me.tableGSPE_PopulationEstimates)
        Me.tableGSPE_Results = New GSPE_ResultsDataTable()
        MyBase.Tables.Add(Me.tableGSPE_Results)
        Me.tableGSPE_Surveys = New GSPE_SurveysDataTable()
        MyBase.Tables.Add(Me.tableGSPE_Surveys)
        Me.relationFK_GSPE_Ratios_GSPE_Surveys = New Global.System.Data.DataRelation("FK_GSPE_Ratios_GSPE_Surveys", New Global.System.Data.DataColumn() {Me.tableGSPE_Surveys.SurveyNameColumn}, New Global.System.Data.DataColumn() {Me.tableGSPE_Results.SurveyNameColumn}, false)
        Me.Relations.Add(Me.relationFK_GSPE_Ratios_GSPE_Surveys)
        Me.relationFK_GSPE_GSPE_Surveys = New Global.System.Data.DataRelation("FK_GSPE_GSPE_Surveys", New Global.System.Data.DataColumn() {Me.tableGSPE_Surveys.SurveyNameColumn}, New Global.System.Data.DataColumn() {Me.tableGSPE.SurveyNameColumn}, false)
        Me.Relations.Add(Me.relationFK_GSPE_GSPE_Surveys)
        Me.relationFK_GSPE_DensityEstimates_GSPE_Surveys = New Global.System.Data.DataRelation("FK_GSPE_DensityEstimates_GSPE_Surveys", New Global.System.Data.DataColumn() {Me.tableGSPE_Surveys.SurveyNameColumn}, New Global.System.Data.DataColumn() {Me.tableGSPE_DensityEstimates.SurveyNameColumn}, false)
        Me.Relations.Add(Me.relationFK_GSPE_DensityEstimates_GSPE_Surveys)
        Me.relationFK_GSPE_PopulationEstimates_GSPE_Surveys = New Global.System.Data.DataRelation("FK_GSPE_PopulationEstimates_GSPE_Surveys", New Global.System.Data.DataColumn() {Me.tableGSPE_Surveys.SurveyNameColumn}, New Global.System.Data.DataColumn() {Me.tableGSPE_PopulationEstimates.SurveyNameColumn}, false)
        Me.Relations.Add(Me.relationFK_GSPE_PopulationEstimates_GSPE_Surveys)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeGSPE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeGSPE_DensityEstimates() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeGSPE_PopulationEstimates() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeGSPE_Results() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeGSPE_Surveys() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As MooseDataSet = New MooseDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub GSPERowChangeEventHandler(ByVal sender As Object, ByVal e As GSPERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub GSPE_DensityEstimatesRowChangeEventHandler(ByVal sender As Object, ByVal e As GSPE_DensityEstimatesRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub GSPE_PopulationEstimatesRowChangeEventHandler(ByVal sender As Object, ByVal e As GSPE_PopulationEstimatesRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub GSPE_ResultsRowChangeEventHandler(ByVal sender As Object, ByVal e As GSPE_ResultsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub GSPE_SurveysRowChangeEventHandler(ByVal sender As Object, ByVal e As GSPE_SurveysRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class GSPEDataTable
        Inherits Global.System.Data.TypedTableBase(Of GSPERow)
        
        Private columnPark As Global.System.Data.DataColumn
        
        Private columnSurveyName As Global.System.Data.DataColumn
        
        Private columnSurveyYear As Global.System.Data.DataColumn
        
        Private columnSeason As Global.System.Data.DataColumn
        
        Private columnSubArea As Global.System.Data.DataColumn
        
        Private columnGMU As Global.System.Data.DataColumn
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnStartDate As Global.System.Data.DataColumn
        
        Private columnStopDate As Global.System.Data.DataColumn
        
        Private columnIntID As Global.System.Data.DataColumn
        
        Private columnRand As Global.System.Data.DataColumn
        
        Private columnFiringOrder As Global.System.Data.DataColumn
        
        Private columnSelected As Global.System.Data.DataColumn
        
        Private columnCounted As Global.System.Data.DataColumn
        
        Private columnExclude As Global.System.Data.DataColumn
        
        Private columnStrat As Global.System.Data.DataColumn
        
        Private columnStratName As Global.System.Data.DataColumn
        
        Private columnStratMoose As Global.System.Data.DataColumn
        
        Private columnStratTracks As Global.System.Data.DataColumn
        
        Private columnStratHab As Global.System.Data.DataColumn
        
        Private columnSearchMin As Global.System.Data.DataColumn
        
        Private columnDateCounted As Global.System.Data.DataColumn
        
        Private columnPerc_Not_Flown As Global.System.Data.DataColumn
        
        Private columnX_COORD As Global.System.Data.DataColumn
        
        Private columnY_COORD As Global.System.Data.DataColumn
        
        Private columnArea_SqMi As Global.System.Data.DataColumn
        
        Private columnADULT As Global.System.Data.DataColumn
        
        Private columnBULL_30_40 As Global.System.Data.DataColumn
        
        Private columnBULL_30_50 As Global.System.Data.DataColumn
        
        Private columnBULL_30_60 As Global.System.Data.DataColumn
        
        Private columnBULL_41_50 As Global.System.Data.DataColumn
        
        Private columnBULL_ALL As Global.System.Data.DataColumn
        
        Private columnBULL_GT_50 As Global.System.Data.DataColumn
        
        Private columnBULL_GT_60 As Global.System.Data.DataColumn
        
        Private columnBULL_GTE_50 As Global.System.Data.DataColumn
        
        Private columnBULL_LT_30 As Global.System.Data.DataColumn
        
        Private columnBULL_LT_50 As Global.System.Data.DataColumn
        
        Private columnCALF As Global.System.Data.DataColumn
        
        Private columnCOW As Global.System.Data.DataColumn
        
        Private columnCOW_W_0 As Global.System.Data.DataColumn
        
        Private columnCOW_W_1 As Global.System.Data.DataColumn
        
        Private columnCOW_W_2 As Global.System.Data.DataColumn
        
        Private columnCOW_W_3 As Global.System.Data.DataColumn
        
        Private columnLG_BULL As Global.System.Data.DataColumn
        
        Private columnMED_BULL As Global.System.Data.DataColumn
        
        Private columnMED_L_BULL As Global.System.Data.DataColumn
        
        Private columnSM_BULL As Global.System.Data.DataColumn
        
        Private columnUNKNOWN As Global.System.Data.DataColumn
        
        Private columnYBULL_ALL As Global.System.Data.DataColumn
        
        Private columnYBULL_GTSF As Global.System.Data.DataColumn
        
        Private columnYBULL_SF As Global.System.Data.DataColumn
        
        Private columnMOOSE As Global.System.Data.DataColumn
        
        Private columnPilot As Global.System.Data.DataColumn
        
        Private columnObserver As Global.System.Data.DataColumn
        
        Private columnPersonnel As Global.System.Data.DataColumn
        
        Private columnDensity As Global.System.Data.DataColumn
        
        Private columnSCF_Plot As Global.System.Data.DataColumn
        
        Private columnStd As Global.System.Data.DataColumn
        
        Private columnInt As Global.System.Data.DataColumn
        
        Private columnComments As Global.System.Data.DataColumn
        
        Private columnSourceFilename As Global.System.Data.DataColumn
        
        Private columnRecordInsertedDate As Global.System.Data.DataColumn
        
        Private columnRecordInsertedBy As Global.System.Data.DataColumn
        
        Private columnCertificationDate As Global.System.Data.DataColumn
        
        Private columnCertifiedBy As Global.System.Data.DataColumn
        
        Private columnCertificationLevel As Global.System.Data.DataColumn
        
        Private columnSurveyUnitSet As Global.System.Data.DataColumn
        
        Private columnSearchMin1 As Global.System.Data.DataColumn
        
        Private columnBULL_ADULT As Global.System.Data.DataColumn
        
        Private columnCALF_LONE As Global.System.Data.DataColumn
        
        Private columnSCF As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "GSPE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ParkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SurveyNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSurveyName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SurveyYearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSurveyYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SeasonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeason
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SubAreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property GMUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGMU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property StartDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStartDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property StopDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStopDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IntIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIntID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RandColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRand
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FiringOrderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFiringOrder
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SelectedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSelected
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CountedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCounted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ExcludeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExclude
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property StratColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStrat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property StratNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStratName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property StratMooseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStratMoose
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property StratTracksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStratTracks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property StratHabColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStratHab
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SearchMinColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSearchMin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DateCountedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateCounted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Perc_Not_FlownColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPerc_Not_Flown
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property X_COORDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnX_COORD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Y_COORDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnY_COORD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Area_SqMiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea_SqMi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ADULTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADULT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BULL_30_40Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBULL_30_40
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BULL_30_50Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBULL_30_50
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BULL_30_60Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBULL_30_60
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BULL_41_50Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBULL_41_50
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BULL_ALLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBULL_ALL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BULL_GT_50Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBULL_GT_50
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BULL_GT_60Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBULL_GT_60
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BULL_GTE_50Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBULL_GTE_50
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BULL_LT_30Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBULL_LT_30
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BULL_LT_50Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBULL_LT_50
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CALFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCALF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property COWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property COW_W_0Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOW_W_0
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property COW_W_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOW_W_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property COW_W_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOW_W_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property COW_W_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOW_W_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LG_BULLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLG_BULL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MED_BULLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMED_BULL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MED_L_BULLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMED_L_BULL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SM_BULLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSM_BULL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property UNKNOWNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNKNOWN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property YBULL_ALLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYBULL_ALL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property YBULL_GTSFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYBULL_GTSF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property YBULL_SFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYBULL_SF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MOOSEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOOSE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PilotColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPilot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ObserverColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObserver
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PersonnelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPersonnel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DensityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SCF_PlotColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCF_Plot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property StdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IntColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CommentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComments
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SourceFilenameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSourceFilename
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RecordInsertedDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecordInsertedDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RecordInsertedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecordInsertedBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CertificationDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCertificationDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CertifiedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCertifiedBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CertificationLevelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCertificationLevel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SurveyUnitSetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSurveyUnitSet
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SearchMin1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSearchMin1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BULL_ADULTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBULL_ADULT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CALF_LONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCALF_LONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SCFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As GSPERow
            Get
                Return CType(Me.Rows(index),GSPERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event GSPERowChanging As GSPERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event GSPERowChanged As GSPERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event GSPERowDeleting As GSPERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event GSPERowDeleted As GSPERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddGSPERow(ByVal row As GSPERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddGSPERow( _
                    ByVal Park As String,  _
                    ByVal parentGSPE_SurveysRowByFK_GSPE_GSPE_Surveys As GSPE_SurveysRow,  _
                    ByVal SurveyYear As Integer,  _
                    ByVal Season As String,  _
                    ByVal SubArea As String,  _
                    ByVal GMU As String,  _
                    ByVal ID As String,  _
                    ByVal StartDate As Date,  _
                    ByVal StopDate As Date,  _
                    ByVal IntID As Integer,  _
                    ByVal Rand As Double,  _
                    ByVal FiringOrder As Integer,  _
                    ByVal Selected As Boolean,  _
                    ByVal Counted As Boolean,  _
                    ByVal Exclude As Boolean,  _
                    ByVal Strat As String,  _
                    ByVal StratName As String,  _
                    ByVal StratMoose As Integer,  _
                    ByVal StratTracks As Integer,  _
                    ByVal StratHab As String,  _
                    ByVal SearchMin As Integer,  _
                    ByVal DateCounted As Date,  _
                    ByVal Perc_Not_Flown As Integer,  _
                    ByVal X_COORD As Double,  _
                    ByVal Y_COORD As Double,  _
                    ByVal Area_SqMi As Double,  _
                    ByVal ADULT As Integer,  _
                    ByVal BULL_30_40 As Integer,  _
                    ByVal BULL_30_50 As Integer,  _
                    ByVal BULL_30_60 As Integer,  _
                    ByVal BULL_41_50 As Integer,  _
                    ByVal BULL_ALL As Integer,  _
                    ByVal BULL_GT_50 As Integer,  _
                    ByVal BULL_GT_60 As Integer,  _
                    ByVal BULL_GTE_50 As Integer,  _
                    ByVal BULL_LT_30 As Integer,  _
                    ByVal BULL_LT_50 As Integer,  _
                    ByVal CALF As Integer,  _
                    ByVal COW As Integer,  _
                    ByVal COW_W_0 As Integer,  _
                    ByVal COW_W_1 As Integer,  _
                    ByVal COW_W_2 As Integer,  _
                    ByVal COW_W_3 As Integer,  _
                    ByVal LG_BULL As Integer,  _
                    ByVal MED_BULL As Integer,  _
                    ByVal MED_L_BULL As Integer,  _
                    ByVal SM_BULL As Integer,  _
                    ByVal UNKNOWN As Integer,  _
                    ByVal YBULL_ALL As Integer,  _
                    ByVal YBULL_GTSF As Integer,  _
                    ByVal YBULL_SF As Integer,  _
                    ByVal MOOSE As Integer,  _
                    ByVal Pilot As String,  _
                    ByVal Observer As String,  _
                    ByVal Personnel As String,  _
                    ByVal Density As Double,  _
                    ByVal SCF_Plot As Boolean,  _
                    ByVal Std As Integer,  _
                    ByVal Int As Integer,  _
                    ByVal Comments As String,  _
                    ByVal SourceFilename As String,  _
                    ByVal RecordInsertedDate As Date,  _
                    ByVal RecordInsertedBy As String,  _
                    ByVal CertificationDate As Date,  _
                    ByVal CertifiedBy As String,  _
                    ByVal CertificationLevel As String,  _
                    ByVal SurveyUnitSet As String,  _
                    ByVal SearchMin1 As Double,  _
                    ByVal BULL_ADULT As Integer,  _
                    ByVal CALF_LONE As Integer,  _
                    ByVal SCF As Double) As GSPERow
            Dim rowGSPERow As GSPERow = CType(Me.NewRow,GSPERow)
            Dim columnValuesArray() As Object = New Object() {Park, Nothing, SurveyYear, Season, SubArea, GMU, ID, StartDate, StopDate, IntID, Rand, FiringOrder, Selected, Counted, Exclude, Strat, StratName, StratMoose, StratTracks, StratHab, SearchMin, DateCounted, Perc_Not_Flown, X_COORD, Y_COORD, Area_SqMi, ADULT, BULL_30_40, BULL_30_50, BULL_30_60, BULL_41_50, BULL_ALL, BULL_GT_50, BULL_GT_60, BULL_GTE_50, BULL_LT_30, BULL_LT_50, CALF, COW, COW_W_0, COW_W_1, COW_W_2, COW_W_3, LG_BULL, MED_BULL, MED_L_BULL, SM_BULL, UNKNOWN, YBULL_ALL, YBULL_GTSF, YBULL_SF, MOOSE, Pilot, Observer, Personnel, Density, SCF_Plot, Std, Int, Comments, SourceFilename, RecordInsertedDate, RecordInsertedBy, CertificationDate, CertifiedBy, CertificationLevel, SurveyUnitSet, SearchMin1, BULL_ADULT, CALF_LONE, SCF}
            If (Not (parentGSPE_SurveysRowByFK_GSPE_GSPE_Surveys) Is Nothing) Then
                columnValuesArray(1) = parentGSPE_SurveysRowByFK_GSPE_GSPE_Surveys(0)
            End If
            rowGSPERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowGSPERow)
            Return rowGSPERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindBySurveyNameSurveyYearID(ByVal SurveyName As String, ByVal SurveyYear As Integer, ByVal ID As String) As GSPERow
            Return CType(Me.Rows.Find(New Object() {SurveyName, SurveyYear, ID}),GSPERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As GSPEDataTable = CType(MyBase.Clone,GSPEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New GSPEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPark = MyBase.Columns("Park")
            Me.columnSurveyName = MyBase.Columns("SurveyName")
            Me.columnSurveyYear = MyBase.Columns("SurveyYear")
            Me.columnSeason = MyBase.Columns("Season")
            Me.columnSubArea = MyBase.Columns("SubArea")
            Me.columnGMU = MyBase.Columns("GMU")
            Me.columnID = MyBase.Columns("ID")
            Me.columnStartDate = MyBase.Columns("StartDate")
            Me.columnStopDate = MyBase.Columns("StopDate")
            Me.columnIntID = MyBase.Columns("IntID")
            Me.columnRand = MyBase.Columns("Rand")
            Me.columnFiringOrder = MyBase.Columns("FiringOrder")
            Me.columnSelected = MyBase.Columns("Selected")
            Me.columnCounted = MyBase.Columns("Counted")
            Me.columnExclude = MyBase.Columns("Exclude")
            Me.columnStrat = MyBase.Columns("Strat")
            Me.columnStratName = MyBase.Columns("StratName")
            Me.columnStratMoose = MyBase.Columns("StratMoose")
            Me.columnStratTracks = MyBase.Columns("StratTracks")
            Me.columnStratHab = MyBase.Columns("StratHab")
            Me.columnSearchMin = MyBase.Columns("SearchMin")
            Me.columnDateCounted = MyBase.Columns("DateCounted")
            Me.columnPerc_Not_Flown = MyBase.Columns("Perc_Not_Flown")
            Me.columnX_COORD = MyBase.Columns("X_COORD")
            Me.columnY_COORD = MyBase.Columns("Y_COORD")
            Me.columnArea_SqMi = MyBase.Columns("Area_SqMi")
            Me.columnADULT = MyBase.Columns("ADULT")
            Me.columnBULL_30_40 = MyBase.Columns("BULL_30_40")
            Me.columnBULL_30_50 = MyBase.Columns("BULL_30_50")
            Me.columnBULL_30_60 = MyBase.Columns("BULL_30_60")
            Me.columnBULL_41_50 = MyBase.Columns("BULL_41_50")
            Me.columnBULL_ALL = MyBase.Columns("BULL_ALL")
            Me.columnBULL_GT_50 = MyBase.Columns("BULL_GT_50")
            Me.columnBULL_GT_60 = MyBase.Columns("BULL_GT_60")
            Me.columnBULL_GTE_50 = MyBase.Columns("BULL_GTE_50")
            Me.columnBULL_LT_30 = MyBase.Columns("BULL_LT_30")
            Me.columnBULL_LT_50 = MyBase.Columns("BULL_LT_50")
            Me.columnCALF = MyBase.Columns("CALF")
            Me.columnCOW = MyBase.Columns("COW")
            Me.columnCOW_W_0 = MyBase.Columns("COW_W_0")
            Me.columnCOW_W_1 = MyBase.Columns("COW_W_1")
            Me.columnCOW_W_2 = MyBase.Columns("COW_W_2")
            Me.columnCOW_W_3 = MyBase.Columns("COW_W_3")
            Me.columnLG_BULL = MyBase.Columns("LG_BULL")
            Me.columnMED_BULL = MyBase.Columns("MED_BULL")
            Me.columnMED_L_BULL = MyBase.Columns("MED_L_BULL")
            Me.columnSM_BULL = MyBase.Columns("SM_BULL")
            Me.columnUNKNOWN = MyBase.Columns("UNKNOWN")
            Me.columnYBULL_ALL = MyBase.Columns("YBULL_ALL")
            Me.columnYBULL_GTSF = MyBase.Columns("YBULL_GTSF")
            Me.columnYBULL_SF = MyBase.Columns("YBULL_SF")
            Me.columnMOOSE = MyBase.Columns("MOOSE")
            Me.columnPilot = MyBase.Columns("Pilot")
            Me.columnObserver = MyBase.Columns("Observer")
            Me.columnPersonnel = MyBase.Columns("Personnel")
            Me.columnDensity = MyBase.Columns("Density")
            Me.columnSCF_Plot = MyBase.Columns("SCF_Plot")
            Me.columnStd = MyBase.Columns("Std")
            Me.columnInt = MyBase.Columns("Int")
            Me.columnComments = MyBase.Columns("Comments")
            Me.columnSourceFilename = MyBase.Columns("SourceFilename")
            Me.columnRecordInsertedDate = MyBase.Columns("RecordInsertedDate")
            Me.columnRecordInsertedBy = MyBase.Columns("RecordInsertedBy")
            Me.columnCertificationDate = MyBase.Columns("CertificationDate")
            Me.columnCertifiedBy = MyBase.Columns("CertifiedBy")
            Me.columnCertificationLevel = MyBase.Columns("CertificationLevel")
            Me.columnSurveyUnitSet = MyBase.Columns("SurveyUnitSet")
            Me.columnSearchMin1 = MyBase.Columns("SearchMin1")
            Me.columnBULL_ADULT = MyBase.Columns("BULL_ADULT")
            Me.columnCALF_LONE = MyBase.Columns("CALF_LONE")
            Me.columnSCF = MyBase.Columns("SCF")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPark = New Global.System.Data.DataColumn("Park", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPark)
            Me.columnSurveyName = New Global.System.Data.DataColumn("SurveyName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSurveyName)
            Me.columnSurveyYear = New Global.System.Data.DataColumn("SurveyYear", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSurveyYear)
            Me.columnSeason = New Global.System.Data.DataColumn("Season", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeason)
            Me.columnSubArea = New Global.System.Data.DataColumn("SubArea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubArea)
            Me.columnGMU = New Global.System.Data.DataColumn("GMU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGMU)
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnStartDate = New Global.System.Data.DataColumn("StartDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStartDate)
            Me.columnStopDate = New Global.System.Data.DataColumn("StopDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStopDate)
            Me.columnIntID = New Global.System.Data.DataColumn("IntID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIntID)
            Me.columnRand = New Global.System.Data.DataColumn("Rand", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRand)
            Me.columnFiringOrder = New Global.System.Data.DataColumn("FiringOrder", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFiringOrder)
            Me.columnSelected = New Global.System.Data.DataColumn("Selected", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSelected)
            Me.columnCounted = New Global.System.Data.DataColumn("Counted", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCounted)
            Me.columnExclude = New Global.System.Data.DataColumn("Exclude", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExclude)
            Me.columnStrat = New Global.System.Data.DataColumn("Strat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStrat)
            Me.columnStratName = New Global.System.Data.DataColumn("StratName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStratName)
            Me.columnStratMoose = New Global.System.Data.DataColumn("StratMoose", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStratMoose)
            Me.columnStratTracks = New Global.System.Data.DataColumn("StratTracks", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStratTracks)
            Me.columnStratHab = New Global.System.Data.DataColumn("StratHab", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStratHab)
            Me.columnSearchMin = New Global.System.Data.DataColumn("SearchMin", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSearchMin)
            Me.columnDateCounted = New Global.System.Data.DataColumn("DateCounted", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateCounted)
            Me.columnPerc_Not_Flown = New Global.System.Data.DataColumn("Perc_Not_Flown", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPerc_Not_Flown)
            Me.columnX_COORD = New Global.System.Data.DataColumn("X_COORD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnX_COORD)
            Me.columnY_COORD = New Global.System.Data.DataColumn("Y_COORD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnY_COORD)
            Me.columnArea_SqMi = New Global.System.Data.DataColumn("Area_SqMi", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea_SqMi)
            Me.columnADULT = New Global.System.Data.DataColumn("ADULT", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADULT)
            Me.columnBULL_30_40 = New Global.System.Data.DataColumn("BULL_30_40", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBULL_30_40)
            Me.columnBULL_30_50 = New Global.System.Data.DataColumn("BULL_30_50", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBULL_30_50)
            Me.columnBULL_30_60 = New Global.System.Data.DataColumn("BULL_30_60", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBULL_30_60)
            Me.columnBULL_41_50 = New Global.System.Data.DataColumn("BULL_41_50", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBULL_41_50)
            Me.columnBULL_ALL = New Global.System.Data.DataColumn("BULL_ALL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBULL_ALL)
            Me.columnBULL_GT_50 = New Global.System.Data.DataColumn("BULL_GT_50", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBULL_GT_50)
            Me.columnBULL_GT_60 = New Global.System.Data.DataColumn("BULL_GT_60", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBULL_GT_60)
            Me.columnBULL_GTE_50 = New Global.System.Data.DataColumn("BULL_GTE_50", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBULL_GTE_50)
            Me.columnBULL_LT_30 = New Global.System.Data.DataColumn("BULL_LT_30", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBULL_LT_30)
            Me.columnBULL_LT_50 = New Global.System.Data.DataColumn("BULL_LT_50", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBULL_LT_50)
            Me.columnCALF = New Global.System.Data.DataColumn("CALF", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCALF)
            Me.columnCOW = New Global.System.Data.DataColumn("COW", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOW)
            Me.columnCOW_W_0 = New Global.System.Data.DataColumn("COW_W_0", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOW_W_0)
            Me.columnCOW_W_1 = New Global.System.Data.DataColumn("COW_W_1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOW_W_1)
            Me.columnCOW_W_2 = New Global.System.Data.DataColumn("COW_W_2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOW_W_2)
            Me.columnCOW_W_3 = New Global.System.Data.DataColumn("COW_W_3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOW_W_3)
            Me.columnLG_BULL = New Global.System.Data.DataColumn("LG_BULL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLG_BULL)
            Me.columnMED_BULL = New Global.System.Data.DataColumn("MED_BULL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMED_BULL)
            Me.columnMED_L_BULL = New Global.System.Data.DataColumn("MED_L_BULL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMED_L_BULL)
            Me.columnSM_BULL = New Global.System.Data.DataColumn("SM_BULL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSM_BULL)
            Me.columnUNKNOWN = New Global.System.Data.DataColumn("UNKNOWN", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNKNOWN)
            Me.columnYBULL_ALL = New Global.System.Data.DataColumn("YBULL_ALL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYBULL_ALL)
            Me.columnYBULL_GTSF = New Global.System.Data.DataColumn("YBULL_GTSF", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYBULL_GTSF)
            Me.columnYBULL_SF = New Global.System.Data.DataColumn("YBULL_SF", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYBULL_SF)
            Me.columnMOOSE = New Global.System.Data.DataColumn("MOOSE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOOSE)
            Me.columnPilot = New Global.System.Data.DataColumn("Pilot", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPilot)
            Me.columnObserver = New Global.System.Data.DataColumn("Observer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObserver)
            Me.columnPersonnel = New Global.System.Data.DataColumn("Personnel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPersonnel)
            Me.columnDensity = New Global.System.Data.DataColumn("Density", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensity)
            Me.columnSCF_Plot = New Global.System.Data.DataColumn("SCF_Plot", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCF_Plot)
            Me.columnStd = New Global.System.Data.DataColumn("Std", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStd)
            Me.columnInt = New Global.System.Data.DataColumn("Int", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInt)
            Me.columnComments = New Global.System.Data.DataColumn("Comments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComments)
            Me.columnSourceFilename = New Global.System.Data.DataColumn("SourceFilename", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSourceFilename)
            Me.columnRecordInsertedDate = New Global.System.Data.DataColumn("RecordInsertedDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecordInsertedDate)
            Me.columnRecordInsertedBy = New Global.System.Data.DataColumn("RecordInsertedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecordInsertedBy)
            Me.columnCertificationDate = New Global.System.Data.DataColumn("CertificationDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCertificationDate)
            Me.columnCertifiedBy = New Global.System.Data.DataColumn("CertifiedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCertifiedBy)
            Me.columnCertificationLevel = New Global.System.Data.DataColumn("CertificationLevel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCertificationLevel)
            Me.columnSurveyUnitSet = New Global.System.Data.DataColumn("SurveyUnitSet", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSurveyUnitSet)
            Me.columnSearchMin1 = New Global.System.Data.DataColumn("SearchMin1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSearchMin1)
            Me.columnBULL_ADULT = New Global.System.Data.DataColumn("BULL_ADULT", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBULL_ADULT)
            Me.columnCALF_LONE = New Global.System.Data.DataColumn("CALF_LONE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCALF_LONE)
            Me.columnSCF = New Global.System.Data.DataColumn("SCF", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCF)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSurveyName, Me.columnSurveyYear, Me.columnID}, true))
            Me.columnPark.AllowDBNull = false
            Me.columnPark.MaxLength = 4
            Me.columnSurveyName.AllowDBNull = false
            Me.columnSurveyName.MaxLength = 100
            Me.columnSurveyYear.AllowDBNull = false
            Me.columnSeason.MaxLength = 20
            Me.columnSubArea.MaxLength = 50
            Me.columnGMU.MaxLength = 20
            Me.columnID.AllowDBNull = false
            Me.columnID.MaxLength = 10
            Me.columnStrat.MaxLength = 1
            Me.columnStratName.MaxLength = 10
            Me.columnStratHab.MaxLength = 100
            Me.columnPilot.MaxLength = 50
            Me.columnObserver.MaxLength = 50
            Me.columnPersonnel.MaxLength = 100
            Me.columnComments.MaxLength = 255
            Me.columnSourceFilename.MaxLength = 255
            Me.columnRecordInsertedDate.AllowDBNull = false
            Me.columnRecordInsertedBy.AllowDBNull = false
            Me.columnRecordInsertedBy.MaxLength = 50
            Me.columnCertifiedBy.MaxLength = 50
            Me.columnCertificationLevel.AllowDBNull = false
            Me.columnCertificationLevel.MaxLength = 15
            Me.columnSearchMin1.Caption = "SearchMin"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewGSPERow() As GSPERow
            Return CType(Me.NewRow,GSPERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New GSPERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(GSPERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GSPERowChangedEvent) Is Nothing) Then
                RaiseEvent GSPERowChanged(Me, New GSPERowChangeEvent(CType(e.Row,GSPERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GSPERowChangingEvent) Is Nothing) Then
                RaiseEvent GSPERowChanging(Me, New GSPERowChangeEvent(CType(e.Row,GSPERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GSPERowDeletedEvent) Is Nothing) Then
                RaiseEvent GSPERowDeleted(Me, New GSPERowChangeEvent(CType(e.Row,GSPERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GSPERowDeletingEvent) Is Nothing) Then
                RaiseEvent GSPERowDeleting(Me, New GSPERowChangeEvent(CType(e.Row,GSPERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveGSPERow(ByVal row As GSPERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As MooseDataSet = New MooseDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GSPEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class GSPE_DensityEstimatesDataTable
        Inherits Global.System.Data.TypedTableBase(Of GSPE_DensityEstimatesRow)
        
        Private columnSurveyName As Global.System.Data.DataColumn
        
        Private columnParkSubArea As Global.System.Data.DataColumn
        
        Private columnStratum As Global.System.Data.DataColumn
        
        Private columnDensity_Estimate As Global.System.Data.DataColumn
        
        Private columnDensity_AreaSurveyed_SqMi As Global.System.Data.DataColumn
        
        Private columnDensity_AverageSearchEffort As Global.System.Data.DataColumn
        
        Private columnDensityEstimateMethodology As Global.System.Data.DataColumn
        
        Private columnDensityEstimateSource As Global.System.Data.DataColumn
        
        Private columnReportDate As Global.System.Data.DataColumn
        
        Private columnComments As Global.System.Data.DataColumn
        
        Private columnRecordInsertedDate As Global.System.Data.DataColumn
        
        Private columnRecordInsertedBy As Global.System.Data.DataColumn
        
        Private columnValidatedDate As Global.System.Data.DataColumn
        
        Private columnValidatedBy As Global.System.Data.DataColumn
        
        Private columnAnalysis_Column As Global.System.Data.DataColumn
        
        Private columnDensityEstimateSourceLink As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "GSPE_DensityEstimates"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SurveyNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSurveyName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ParkSubAreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnParkSubArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property StratumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStratum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Density_EstimateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensity_Estimate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Density_AreaSurveyed_SqMiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensity_AreaSurveyed_SqMi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Density_AverageSearchEffortColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensity_AverageSearchEffort
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DensityEstimateMethodologyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensityEstimateMethodology
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DensityEstimateSourceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensityEstimateSource
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ReportDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReportDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CommentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComments
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RecordInsertedDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecordInsertedDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RecordInsertedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecordInsertedBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ValidatedDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValidatedDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ValidatedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValidatedBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Analysis_ColumnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnalysis_Column
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DensityEstimateSourceLinkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensityEstimateSourceLink
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As GSPE_DensityEstimatesRow
            Get
                Return CType(Me.Rows(index),GSPE_DensityEstimatesRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event GSPE_DensityEstimatesRowChanging As GSPE_DensityEstimatesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event GSPE_DensityEstimatesRowChanged As GSPE_DensityEstimatesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event GSPE_DensityEstimatesRowDeleting As GSPE_DensityEstimatesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event GSPE_DensityEstimatesRowDeleted As GSPE_DensityEstimatesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddGSPE_DensityEstimatesRow(ByVal row As GSPE_DensityEstimatesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddGSPE_DensityEstimatesRow( _
                    ByVal parentGSPE_SurveysRowByFK_GSPE_DensityEstimates_GSPE_Surveys As GSPE_SurveysRow,  _
                    ByVal ParkSubArea As String,  _
                    ByVal Stratum As String,  _
                    ByVal Density_Estimate As Double,  _
                    ByVal Density_AreaSurveyed_SqMi As Double,  _
                    ByVal Density_AverageSearchEffort As Double,  _
                    ByVal DensityEstimateMethodology As String,  _
                    ByVal DensityEstimateSource As String,  _
                    ByVal ReportDate As Date,  _
                    ByVal Comments As String,  _
                    ByVal RecordInsertedDate As Date,  _
                    ByVal RecordInsertedBy As String,  _
                    ByVal ValidatedDate As Date,  _
                    ByVal ValidatedBy As String,  _
                    ByVal Analysis_Column As String,  _
                    ByVal DensityEstimateSourceLink As String) As GSPE_DensityEstimatesRow
            Dim rowGSPE_DensityEstimatesRow As GSPE_DensityEstimatesRow = CType(Me.NewRow,GSPE_DensityEstimatesRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ParkSubArea, Stratum, Density_Estimate, Density_AreaSurveyed_SqMi, Density_AverageSearchEffort, DensityEstimateMethodology, DensityEstimateSource, ReportDate, Comments, RecordInsertedDate, RecordInsertedBy, ValidatedDate, ValidatedBy, Analysis_Column, DensityEstimateSourceLink}
            If (Not (parentGSPE_SurveysRowByFK_GSPE_DensityEstimates_GSPE_Surveys) Is Nothing) Then
                columnValuesArray(0) = parentGSPE_SurveysRowByFK_GSPE_DensityEstimates_GSPE_Surveys(0)
            End If
            rowGSPE_DensityEstimatesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowGSPE_DensityEstimatesRow)
            Return rowGSPE_DensityEstimatesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByAnalysis_ColumnStratumParkSubAreaSurveyName(ByVal Analysis_Column As String, ByVal Stratum As String, ByVal ParkSubArea As String, ByVal SurveyName As String) As GSPE_DensityEstimatesRow
            Return CType(Me.Rows.Find(New Object() {Analysis_Column, Stratum, ParkSubArea, SurveyName}),GSPE_DensityEstimatesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As GSPE_DensityEstimatesDataTable = CType(MyBase.Clone,GSPE_DensityEstimatesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New GSPE_DensityEstimatesDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSurveyName = MyBase.Columns("SurveyName")
            Me.columnParkSubArea = MyBase.Columns("ParkSubArea")
            Me.columnStratum = MyBase.Columns("Stratum")
            Me.columnDensity_Estimate = MyBase.Columns("Density_Estimate")
            Me.columnDensity_AreaSurveyed_SqMi = MyBase.Columns("Density_AreaSurveyed_SqMi")
            Me.columnDensity_AverageSearchEffort = MyBase.Columns("Density_AverageSearchEffort")
            Me.columnDensityEstimateMethodology = MyBase.Columns("DensityEstimateMethodology")
            Me.columnDensityEstimateSource = MyBase.Columns("DensityEstimateSource")
            Me.columnReportDate = MyBase.Columns("ReportDate")
            Me.columnComments = MyBase.Columns("Comments")
            Me.columnRecordInsertedDate = MyBase.Columns("RecordInsertedDate")
            Me.columnRecordInsertedBy = MyBase.Columns("RecordInsertedBy")
            Me.columnValidatedDate = MyBase.Columns("ValidatedDate")
            Me.columnValidatedBy = MyBase.Columns("ValidatedBy")
            Me.columnAnalysis_Column = MyBase.Columns("Analysis_Column")
            Me.columnDensityEstimateSourceLink = MyBase.Columns("DensityEstimateSourceLink")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSurveyName = New Global.System.Data.DataColumn("SurveyName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSurveyName)
            Me.columnParkSubArea = New Global.System.Data.DataColumn("ParkSubArea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnParkSubArea)
            Me.columnStratum = New Global.System.Data.DataColumn("Stratum", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStratum)
            Me.columnDensity_Estimate = New Global.System.Data.DataColumn("Density_Estimate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensity_Estimate)
            Me.columnDensity_AreaSurveyed_SqMi = New Global.System.Data.DataColumn("Density_AreaSurveyed_SqMi", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensity_AreaSurveyed_SqMi)
            Me.columnDensity_AverageSearchEffort = New Global.System.Data.DataColumn("Density_AverageSearchEffort", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensity_AverageSearchEffort)
            Me.columnDensityEstimateMethodology = New Global.System.Data.DataColumn("DensityEstimateMethodology", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensityEstimateMethodology)
            Me.columnDensityEstimateSource = New Global.System.Data.DataColumn("DensityEstimateSource", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensityEstimateSource)
            Me.columnReportDate = New Global.System.Data.DataColumn("ReportDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReportDate)
            Me.columnComments = New Global.System.Data.DataColumn("Comments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComments)
            Me.columnRecordInsertedDate = New Global.System.Data.DataColumn("RecordInsertedDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecordInsertedDate)
            Me.columnRecordInsertedBy = New Global.System.Data.DataColumn("RecordInsertedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecordInsertedBy)
            Me.columnValidatedDate = New Global.System.Data.DataColumn("ValidatedDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValidatedDate)
            Me.columnValidatedBy = New Global.System.Data.DataColumn("ValidatedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValidatedBy)
            Me.columnAnalysis_Column = New Global.System.Data.DataColumn("Analysis_Column", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnalysis_Column)
            Me.columnDensityEstimateSourceLink = New Global.System.Data.DataColumn("DensityEstimateSourceLink", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensityEstimateSourceLink)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnAnalysis_Column, Me.columnStratum, Me.columnParkSubArea, Me.columnSurveyName}, true))
            Me.columnSurveyName.AllowDBNull = false
            Me.columnSurveyName.MaxLength = 100
            Me.columnParkSubArea.AllowDBNull = false
            Me.columnParkSubArea.MaxLength = 50
            Me.columnStratum.AllowDBNull = false
            Me.columnStratum.MaxLength = 50
            Me.columnDensity_Estimate.AllowDBNull = false
            Me.columnDensityEstimateMethodology.MaxLength = 50
            Me.columnDensityEstimateSource.AllowDBNull = false
            Me.columnDensityEstimateSource.MaxLength = 1000
            Me.columnComments.MaxLength = 2147483647
            Me.columnRecordInsertedDate.AllowDBNull = false
            Me.columnRecordInsertedBy.AllowDBNull = false
            Me.columnRecordInsertedBy.MaxLength = 50
            Me.columnValidatedBy.MaxLength = 50
            Me.columnAnalysis_Column.AllowDBNull = false
            Me.columnDensityEstimateSourceLink.MaxLength = 4000
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewGSPE_DensityEstimatesRow() As GSPE_DensityEstimatesRow
            Return CType(Me.NewRow,GSPE_DensityEstimatesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New GSPE_DensityEstimatesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(GSPE_DensityEstimatesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GSPE_DensityEstimatesRowChangedEvent) Is Nothing) Then
                RaiseEvent GSPE_DensityEstimatesRowChanged(Me, New GSPE_DensityEstimatesRowChangeEvent(CType(e.Row,GSPE_DensityEstimatesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GSPE_DensityEstimatesRowChangingEvent) Is Nothing) Then
                RaiseEvent GSPE_DensityEstimatesRowChanging(Me, New GSPE_DensityEstimatesRowChangeEvent(CType(e.Row,GSPE_DensityEstimatesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GSPE_DensityEstimatesRowDeletedEvent) Is Nothing) Then
                RaiseEvent GSPE_DensityEstimatesRowDeleted(Me, New GSPE_DensityEstimatesRowChangeEvent(CType(e.Row,GSPE_DensityEstimatesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GSPE_DensityEstimatesRowDeletingEvent) Is Nothing) Then
                RaiseEvent GSPE_DensityEstimatesRowDeleting(Me, New GSPE_DensityEstimatesRowChangeEvent(CType(e.Row,GSPE_DensityEstimatesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveGSPE_DensityEstimatesRow(ByVal row As GSPE_DensityEstimatesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As MooseDataSet = New MooseDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GSPE_DensityEstimatesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class GSPE_PopulationEstimatesDataTable
        Inherits Global.System.Data.TypedTableBase(Of GSPE_PopulationEstimatesRow)
        
        Private columnSurveyName As Global.System.Data.DataColumn
        
        Private columnParkSubArea As Global.System.Data.DataColumn
        
        Private columnAnalysis_Column As Global.System.Data.DataColumn
        
        Private columnStrata As Global.System.Data.DataColumn
        
        Private columnConfidence As Global.System.Data.DataColumn
        
        Private columnPopulation_Estimate As Global.System.Data.DataColumn
        
        Private columnStandard_Error As Global.System.Data.DataColumn
        
        Private columnLower_Limit As Global.System.Data.DataColumn
        
        Private columnUpper_Limit As Global.System.Data.DataColumn
        
        Private columnProportion_of_Mean As Global.System.Data.DataColumn
        
        Private columnStrata_Column As Global.System.Data.DataColumn
        
        Private columnAnalysis_Area As Global.System.Data.DataColumn
        
        Private columnCounted_Column As Global.System.Data.DataColumn
        
        Private columnUnit_Area_Column As Global.System.Data.DataColumn
        
        Private columnSurveyArea As Global.System.Data.DataColumn
        
        Private columnSampledArea As Global.System.Data.DataColumn
        
        Private columnIntensity As Global.System.Data.DataColumn
        
        Private columnRelativePrecision As Global.System.Data.DataColumn
        
        Private columnSightabilityCorrectionFactor As Global.System.Data.DataColumn
        
        Private columnDensity As Global.System.Data.DataColumn
        
        Private columnComments As Global.System.Data.DataColumn
        
        Private columnReportDate As Global.System.Data.DataColumn
        
        Private columnAnalysisPerformedBy As Global.System.Data.DataColumn
        
        Private columnPopulationEstimateSource As Global.System.Data.DataColumn
        
        Private columnRecordInsertedDate As Global.System.Data.DataColumn
        
        Private columnRecordInsertedBy As Global.System.Data.DataColumn
        
        Private columnValidatedDate As Global.System.Data.DataColumn
        
        Private columnValidatedBy As Global.System.Data.DataColumn
        
        Private columnPopulationSourceLink As Global.System.Data.DataColumn
        
        Private columnPopulationEstimateSourceReferenceCode As Global.System.Data.DataColumn
        
        Private columnPopulationEstimateID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "GSPE_PopulationEstimates"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SurveyNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSurveyName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ParkSubAreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnParkSubArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Analysis_ColumnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnalysis_Column
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property StrataColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStrata
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ConfidenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConfidence
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Population_EstimateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPopulation_Estimate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Standard_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStandard_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Lower_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLower_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Upper_LimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUpper_Limit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Proportion_of_MeanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProportion_of_Mean
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Strata_ColumnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStrata_Column
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Analysis_AreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnalysis_Area
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Counted_ColumnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCounted_Column
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Unit_Area_ColumnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnit_Area_Column
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SurveyAreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSurveyArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SampledAreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampledArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IntensityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIntensity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RelativePrecisionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRelativePrecision
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SightabilityCorrectionFactorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSightabilityCorrectionFactor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DensityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDensity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CommentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComments
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ReportDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReportDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AnalysisPerformedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnalysisPerformedBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PopulationEstimateSourceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPopulationEstimateSource
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RecordInsertedDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecordInsertedDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RecordInsertedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecordInsertedBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ValidatedDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValidatedDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ValidatedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValidatedBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PopulationSourceLinkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPopulationSourceLink
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PopulationEstimateSourceReferenceCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPopulationEstimateSourceReferenceCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PopulationEstimateIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPopulationEstimateID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As GSPE_PopulationEstimatesRow
            Get
                Return CType(Me.Rows(index),GSPE_PopulationEstimatesRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event GSPE_PopulationEstimatesRowChanging As GSPE_PopulationEstimatesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event GSPE_PopulationEstimatesRowChanged As GSPE_PopulationEstimatesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event GSPE_PopulationEstimatesRowDeleting As GSPE_PopulationEstimatesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event GSPE_PopulationEstimatesRowDeleted As GSPE_PopulationEstimatesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddGSPE_PopulationEstimatesRow(ByVal row As GSPE_PopulationEstimatesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddGSPE_PopulationEstimatesRow( _
                    ByVal parentGSPE_SurveysRowByFK_GSPE_PopulationEstimates_GSPE_Surveys As GSPE_SurveysRow,  _
                    ByVal ParkSubArea As String,  _
                    ByVal Analysis_Column As String,  _
                    ByVal Strata As String,  _
                    ByVal Confidence As Integer,  _
                    ByVal Population_Estimate As Double,  _
                    ByVal Standard_Error As Double,  _
                    ByVal Lower_Limit As Double,  _
                    ByVal Upper_Limit As Double,  _
                    ByVal Proportion_of_Mean As Double,  _
                    ByVal Strata_Column As String,  _
                    ByVal Analysis_Area As String,  _
                    ByVal Counted_Column As String,  _
                    ByVal Unit_Area_Column As String,  _
                    ByVal SurveyArea As Double,  _
                    ByVal SampledArea As Double,  _
                    ByVal Intensity As Double,  _
                    ByVal RelativePrecision As Double,  _
                    ByVal SightabilityCorrectionFactor As Double,  _
                    ByVal Density As Double,  _
                    ByVal Comments As String,  _
                    ByVal ReportDate As Date,  _
                    ByVal AnalysisPerformedBy As String,  _
                    ByVal PopulationEstimateSource As String,  _
                    ByVal RecordInsertedDate As Date,  _
                    ByVal RecordInsertedBy As String,  _
                    ByVal ValidatedDate As Date,  _
                    ByVal ValidatedBy As String,  _
                    ByVal PopulationSourceLink As String,  _
                    ByVal PopulationEstimateSourceReferenceCode As Integer) As GSPE_PopulationEstimatesRow
            Dim rowGSPE_PopulationEstimatesRow As GSPE_PopulationEstimatesRow = CType(Me.NewRow,GSPE_PopulationEstimatesRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ParkSubArea, Analysis_Column, Strata, Confidence, Population_Estimate, Standard_Error, Lower_Limit, Upper_Limit, Proportion_of_Mean, Strata_Column, Analysis_Area, Counted_Column, Unit_Area_Column, SurveyArea, SampledArea, Intensity, RelativePrecision, SightabilityCorrectionFactor, Density, Comments, ReportDate, AnalysisPerformedBy, PopulationEstimateSource, RecordInsertedDate, RecordInsertedBy, ValidatedDate, ValidatedBy, PopulationSourceLink, PopulationEstimateSourceReferenceCode, Nothing}
            If (Not (parentGSPE_SurveysRowByFK_GSPE_PopulationEstimates_GSPE_Surveys) Is Nothing) Then
                columnValuesArray(0) = parentGSPE_SurveysRowByFK_GSPE_PopulationEstimates_GSPE_Surveys(0)
            End If
            rowGSPE_PopulationEstimatesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowGSPE_PopulationEstimatesRow)
            Return rowGSPE_PopulationEstimatesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByPopulationEstimateID(ByVal PopulationEstimateID As Integer) As GSPE_PopulationEstimatesRow
            Return CType(Me.Rows.Find(New Object() {PopulationEstimateID}),GSPE_PopulationEstimatesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As GSPE_PopulationEstimatesDataTable = CType(MyBase.Clone,GSPE_PopulationEstimatesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New GSPE_PopulationEstimatesDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSurveyName = MyBase.Columns("SurveyName")
            Me.columnParkSubArea = MyBase.Columns("ParkSubArea")
            Me.columnAnalysis_Column = MyBase.Columns("Analysis_Column")
            Me.columnStrata = MyBase.Columns("Strata")
            Me.columnConfidence = MyBase.Columns("Confidence")
            Me.columnPopulation_Estimate = MyBase.Columns("Population_Estimate")
            Me.columnStandard_Error = MyBase.Columns("Standard_Error")
            Me.columnLower_Limit = MyBase.Columns("Lower_Limit")
            Me.columnUpper_Limit = MyBase.Columns("Upper_Limit")
            Me.columnProportion_of_Mean = MyBase.Columns("Proportion_of_Mean")
            Me.columnStrata_Column = MyBase.Columns("Strata_Column")
            Me.columnAnalysis_Area = MyBase.Columns("Analysis_Area")
            Me.columnCounted_Column = MyBase.Columns("Counted_Column")
            Me.columnUnit_Area_Column = MyBase.Columns("Unit_Area_Column")
            Me.columnSurveyArea = MyBase.Columns("SurveyArea")
            Me.columnSampledArea = MyBase.Columns("SampledArea")
            Me.columnIntensity = MyBase.Columns("Intensity")
            Me.columnRelativePrecision = MyBase.Columns("RelativePrecision")
            Me.columnSightabilityCorrectionFactor = MyBase.Columns("SightabilityCorrectionFactor")
            Me.columnDensity = MyBase.Columns("Density")
            Me.columnComments = MyBase.Columns("Comments")
            Me.columnReportDate = MyBase.Columns("ReportDate")
            Me.columnAnalysisPerformedBy = MyBase.Columns("AnalysisPerformedBy")
            Me.columnPopulationEstimateSource = MyBase.Columns("PopulationEstimateSource")
            Me.columnRecordInsertedDate = MyBase.Columns("RecordInsertedDate")
            Me.columnRecordInsertedBy = MyBase.Columns("RecordInsertedBy")
            Me.columnValidatedDate = MyBase.Columns("ValidatedDate")
            Me.columnValidatedBy = MyBase.Columns("ValidatedBy")
            Me.columnPopulationSourceLink = MyBase.Columns("PopulationSourceLink")
            Me.columnPopulationEstimateSourceReferenceCode = MyBase.Columns("PopulationEstimateSourceReferenceCode")
            Me.columnPopulationEstimateID = MyBase.Columns("PopulationEstimateID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSurveyName = New Global.System.Data.DataColumn("SurveyName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSurveyName)
            Me.columnParkSubArea = New Global.System.Data.DataColumn("ParkSubArea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnParkSubArea)
            Me.columnAnalysis_Column = New Global.System.Data.DataColumn("Analysis_Column", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnalysis_Column)
            Me.columnStrata = New Global.System.Data.DataColumn("Strata", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStrata)
            Me.columnConfidence = New Global.System.Data.DataColumn("Confidence", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConfidence)
            Me.columnPopulation_Estimate = New Global.System.Data.DataColumn("Population_Estimate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPopulation_Estimate)
            Me.columnStandard_Error = New Global.System.Data.DataColumn("Standard_Error", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStandard_Error)
            Me.columnLower_Limit = New Global.System.Data.DataColumn("Lower_Limit", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLower_Limit)
            Me.columnUpper_Limit = New Global.System.Data.DataColumn("Upper_Limit", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUpper_Limit)
            Me.columnProportion_of_Mean = New Global.System.Data.DataColumn("Proportion_of_Mean", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProportion_of_Mean)
            Me.columnStrata_Column = New Global.System.Data.DataColumn("Strata_Column", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStrata_Column)
            Me.columnAnalysis_Area = New Global.System.Data.DataColumn("Analysis_Area", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnalysis_Area)
            Me.columnCounted_Column = New Global.System.Data.DataColumn("Counted_Column", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCounted_Column)
            Me.columnUnit_Area_Column = New Global.System.Data.DataColumn("Unit_Area_Column", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnit_Area_Column)
            Me.columnSurveyArea = New Global.System.Data.DataColumn("SurveyArea", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSurveyArea)
            Me.columnSampledArea = New Global.System.Data.DataColumn("SampledArea", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampledArea)
            Me.columnIntensity = New Global.System.Data.DataColumn("Intensity", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIntensity)
            Me.columnRelativePrecision = New Global.System.Data.DataColumn("RelativePrecision", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRelativePrecision)
            Me.columnSightabilityCorrectionFactor = New Global.System.Data.DataColumn("SightabilityCorrectionFactor", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSightabilityCorrectionFactor)
            Me.columnDensity = New Global.System.Data.DataColumn("Density", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDensity)
            Me.columnComments = New Global.System.Data.DataColumn("Comments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComments)
            Me.columnReportDate = New Global.System.Data.DataColumn("ReportDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReportDate)
            Me.columnAnalysisPerformedBy = New Global.System.Data.DataColumn("AnalysisPerformedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnalysisPerformedBy)
            Me.columnPopulationEstimateSource = New Global.System.Data.DataColumn("PopulationEstimateSource", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPopulationEstimateSource)
            Me.columnRecordInsertedDate = New Global.System.Data.DataColumn("RecordInsertedDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecordInsertedDate)
            Me.columnRecordInsertedBy = New Global.System.Data.DataColumn("RecordInsertedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecordInsertedBy)
            Me.columnValidatedDate = New Global.System.Data.DataColumn("ValidatedDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValidatedDate)
            Me.columnValidatedBy = New Global.System.Data.DataColumn("ValidatedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValidatedBy)
            Me.columnPopulationSourceLink = New Global.System.Data.DataColumn("PopulationSourceLink", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPopulationSourceLink)
            Me.columnPopulationEstimateSourceReferenceCode = New Global.System.Data.DataColumn("PopulationEstimateSourceReferenceCode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPopulationEstimateSourceReferenceCode)
            Me.columnPopulationEstimateID = New Global.System.Data.DataColumn("PopulationEstimateID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPopulationEstimateID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPopulationEstimateID}, true))
            Me.columnSurveyName.AllowDBNull = false
            Me.columnSurveyName.MaxLength = 100
            Me.columnParkSubArea.AllowDBNull = false
            Me.columnParkSubArea.MaxLength = 50
            Me.columnAnalysis_Column.AllowDBNull = false
            Me.columnAnalysis_Column.MaxLength = 30
            Me.columnStrata.AllowDBNull = false
            Me.columnStrata.MaxLength = 50
            Me.columnPopulation_Estimate.AllowDBNull = false
            Me.columnStrata_Column.MaxLength = 30
            Me.columnAnalysis_Area.MaxLength = 30
            Me.columnCounted_Column.MaxLength = 30
            Me.columnUnit_Area_Column.MaxLength = 30
            Me.columnComments.MaxLength = 2147483647
            Me.columnAnalysisPerformedBy.MaxLength = 50
            Me.columnPopulationEstimateSource.AllowDBNull = false
            Me.columnPopulationEstimateSource.MaxLength = 1000
            Me.columnRecordInsertedDate.AllowDBNull = false
            Me.columnRecordInsertedBy.AllowDBNull = false
            Me.columnRecordInsertedBy.MaxLength = 50
            Me.columnValidatedBy.MaxLength = 50
            Me.columnPopulationSourceLink.Caption = "Population Source Link"
            Me.columnPopulationSourceLink.MaxLength = 4000
            Me.columnPopulationEstimateSourceReferenceCode.AllowDBNull = false
            Me.columnPopulationEstimateID.AutoIncrement = true
            Me.columnPopulationEstimateID.AutoIncrementSeed = -1
            Me.columnPopulationEstimateID.AutoIncrementStep = -1
            Me.columnPopulationEstimateID.AllowDBNull = false
            Me.columnPopulationEstimateID.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewGSPE_PopulationEstimatesRow() As GSPE_PopulationEstimatesRow
            Return CType(Me.NewRow,GSPE_PopulationEstimatesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New GSPE_PopulationEstimatesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(GSPE_PopulationEstimatesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GSPE_PopulationEstimatesRowChangedEvent) Is Nothing) Then
                RaiseEvent GSPE_PopulationEstimatesRowChanged(Me, New GSPE_PopulationEstimatesRowChangeEvent(CType(e.Row,GSPE_PopulationEstimatesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GSPE_PopulationEstimatesRowChangingEvent) Is Nothing) Then
                RaiseEvent GSPE_PopulationEstimatesRowChanging(Me, New GSPE_PopulationEstimatesRowChangeEvent(CType(e.Row,GSPE_PopulationEstimatesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GSPE_PopulationEstimatesRowDeletedEvent) Is Nothing) Then
                RaiseEvent GSPE_PopulationEstimatesRowDeleted(Me, New GSPE_PopulationEstimatesRowChangeEvent(CType(e.Row,GSPE_PopulationEstimatesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GSPE_PopulationEstimatesRowDeletingEvent) Is Nothing) Then
                RaiseEvent GSPE_PopulationEstimatesRowDeleting(Me, New GSPE_PopulationEstimatesRowChangeEvent(CType(e.Row,GSPE_PopulationEstimatesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveGSPE_PopulationEstimatesRow(ByVal row As GSPE_PopulationEstimatesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As MooseDataSet = New MooseDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GSPE_PopulationEstimatesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class GSPE_ResultsDataTable
        Inherits Global.System.Data.TypedTableBase(Of GSPE_ResultsRow)
        
        Private columnSurveyName As Global.System.Data.DataColumn
        
        Private columnParkSubArea As Global.System.Data.DataColumn
        
        Private columnBullCowRatio As Global.System.Data.DataColumn
        
        Private columnCalfCowRatio As Global.System.Data.DataColumn
        
        Private columnCalfAdultRatio As Global.System.Data.DataColumn
        
        Private columnADULT As Global.System.Data.DataColumn
        
        Private columnBULL_30_40 As Global.System.Data.DataColumn
        
        Private columnBULL_30_50 As Global.System.Data.DataColumn
        
        Private columnBULL_30_60 As Global.System.Data.DataColumn
        
        Private columnBULL_41_50 As Global.System.Data.DataColumn
        
        Private columnBULL_ALL As Global.System.Data.DataColumn
        
        Private columnBULL_GT_50 As Global.System.Data.DataColumn
        
        Private columnBULL_GT_60 As Global.System.Data.DataColumn
        
        Private columnBULL_GTE_50 As Global.System.Data.DataColumn
        
        Private columnBULL_LT_30 As Global.System.Data.DataColumn
        
        Private columnBULL_LT_50 As Global.System.Data.DataColumn
        
        Private columnCALF As Global.System.Data.DataColumn
        
        Private columnCOW As Global.System.Data.DataColumn
        
        Private columnCOW_W_0 As Global.System.Data.DataColumn
        
        Private columnCOW_W_1 As Global.System.Data.DataColumn
        
        Private columnCOW_W_2 As Global.System.Data.DataColumn
        
        Private columnCOW_W_3 As Global.System.Data.DataColumn
        
        Private columnLG_BULL As Global.System.Data.DataColumn
        
        Private columnMED_BULL As Global.System.Data.DataColumn
        
        Private columnMED_L_BULL As Global.System.Data.DataColumn
        
        Private columnSM_BULL As Global.System.Data.DataColumn
        
        Private columnUNKNOWN As Global.System.Data.DataColumn
        
        Private columnYBULL_ALL As Global.System.Data.DataColumn
        
        Private columnYBULL_GTSF As Global.System.Data.DataColumn
        
        Private columnYBULL_SF As Global.System.Data.DataColumn
        
        Private columnMOOSE As Global.System.Data.DataColumn
        
        Private columnSubAreaSurveyed_SqMi As Global.System.Data.DataColumn
        
        Private columnSubAreaAverageSearchEffort As Global.System.Data.DataColumn
        
        Private columnMethodologyUsed As Global.System.Data.DataColumn
        
        Private columnResultsSource As Global.System.Data.DataColumn
        
        Private columnComments As Global.System.Data.DataColumn
        
        Private columnRecordInsertedDate As Global.System.Data.DataColumn
        
        Private columnRecordInsertedBy As Global.System.Data.DataColumn
        
        Private columnValidatedDate As Global.System.Data.DataColumn
        
        Private columnValidatedBy As Global.System.Data.DataColumn
        
        Private columnResultsSourceLink As Global.System.Data.DataColumn
        
        Private columnResultID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "GSPE_Results"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SurveyNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSurveyName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ParkSubAreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnParkSubArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BullCowRatioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBullCowRatio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CalfCowRatioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalfCowRatio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CalfAdultRatioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalfAdultRatio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ADULTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADULT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BULL_30_40Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBULL_30_40
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BULL_30_50Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBULL_30_50
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BULL_30_60Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBULL_30_60
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BULL_41_50Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBULL_41_50
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BULL_ALLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBULL_ALL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BULL_GT_50Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBULL_GT_50
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BULL_GT_60Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBULL_GT_60
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BULL_GTE_50Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBULL_GTE_50
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BULL_LT_30Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBULL_LT_30
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BULL_LT_50Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBULL_LT_50
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CALFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCALF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property COWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property COW_W_0Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOW_W_0
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property COW_W_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOW_W_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property COW_W_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOW_W_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property COW_W_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOW_W_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LG_BULLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLG_BULL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MED_BULLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMED_BULL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MED_L_BULLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMED_L_BULL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SM_BULLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSM_BULL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property UNKNOWNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNKNOWN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property YBULL_ALLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYBULL_ALL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property YBULL_GTSFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYBULL_GTSF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property YBULL_SFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYBULL_SF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MOOSEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOOSE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SubAreaSurveyed_SqMiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubAreaSurveyed_SqMi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SubAreaAverageSearchEffortColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubAreaAverageSearchEffort
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MethodologyUsedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMethodologyUsed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ResultsSourceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultsSource
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CommentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComments
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RecordInsertedDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecordInsertedDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RecordInsertedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecordInsertedBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ValidatedDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValidatedDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ValidatedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValidatedBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ResultsSourceLinkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultsSourceLink
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ResultIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As GSPE_ResultsRow
            Get
                Return CType(Me.Rows(index),GSPE_ResultsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event GSPE_ResultsRowChanging As GSPE_ResultsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event GSPE_ResultsRowChanged As GSPE_ResultsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event GSPE_ResultsRowDeleting As GSPE_ResultsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event GSPE_ResultsRowDeleted As GSPE_ResultsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddGSPE_ResultsRow(ByVal row As GSPE_ResultsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddGSPE_ResultsRow( _
                    ByVal parentGSPE_SurveysRowByFK_GSPE_Ratios_GSPE_Surveys As GSPE_SurveysRow,  _
                    ByVal ParkSubArea As String,  _
                    ByVal BullCowRatio As Double,  _
                    ByVal CalfCowRatio As Double,  _
                    ByVal CalfAdultRatio As Double,  _
                    ByVal ADULT As Integer,  _
                    ByVal BULL_30_40 As Integer,  _
                    ByVal BULL_30_50 As Integer,  _
                    ByVal BULL_30_60 As Integer,  _
                    ByVal BULL_41_50 As Integer,  _
                    ByVal BULL_ALL As Integer,  _
                    ByVal BULL_GT_50 As Integer,  _
                    ByVal BULL_GT_60 As Integer,  _
                    ByVal BULL_GTE_50 As Integer,  _
                    ByVal BULL_LT_30 As Integer,  _
                    ByVal BULL_LT_50 As Integer,  _
                    ByVal CALF As Integer,  _
                    ByVal COW As Integer,  _
                    ByVal COW_W_0 As Integer,  _
                    ByVal COW_W_1 As Integer,  _
                    ByVal COW_W_2 As Integer,  _
                    ByVal COW_W_3 As Integer,  _
                    ByVal LG_BULL As Integer,  _
                    ByVal MED_BULL As Integer,  _
                    ByVal MED_L_BULL As Integer,  _
                    ByVal SM_BULL As Integer,  _
                    ByVal UNKNOWN As Integer,  _
                    ByVal YBULL_ALL As Integer,  _
                    ByVal YBULL_GTSF As Integer,  _
                    ByVal YBULL_SF As Integer,  _
                    ByVal MOOSE As Integer,  _
                    ByVal SubAreaSurveyed_SqMi As Double,  _
                    ByVal SubAreaAverageSearchEffort As Double,  _
                    ByVal MethodologyUsed As String,  _
                    ByVal ResultsSource As String,  _
                    ByVal Comments As String,  _
                    ByVal RecordInsertedDate As Date,  _
                    ByVal RecordInsertedBy As String,  _
                    ByVal ValidatedDate As Date,  _
                    ByVal ValidatedBy As String,  _
                    ByVal ResultsSourceLink As String,  _
                    ByVal ResultID As String) As GSPE_ResultsRow
            Dim rowGSPE_ResultsRow As GSPE_ResultsRow = CType(Me.NewRow,GSPE_ResultsRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ParkSubArea, BullCowRatio, CalfCowRatio, CalfAdultRatio, ADULT, BULL_30_40, BULL_30_50, BULL_30_60, BULL_41_50, BULL_ALL, BULL_GT_50, BULL_GT_60, BULL_GTE_50, BULL_LT_30, BULL_LT_50, CALF, COW, COW_W_0, COW_W_1, COW_W_2, COW_W_3, LG_BULL, MED_BULL, MED_L_BULL, SM_BULL, UNKNOWN, YBULL_ALL, YBULL_GTSF, YBULL_SF, MOOSE, SubAreaSurveyed_SqMi, SubAreaAverageSearchEffort, MethodologyUsed, ResultsSource, Comments, RecordInsertedDate, RecordInsertedBy, ValidatedDate, ValidatedBy, ResultsSourceLink, ResultID}
            If (Not (parentGSPE_SurveysRowByFK_GSPE_Ratios_GSPE_Surveys) Is Nothing) Then
                columnValuesArray(0) = parentGSPE_SurveysRowByFK_GSPE_Ratios_GSPE_Surveys(0)
            End If
            rowGSPE_ResultsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowGSPE_ResultsRow)
            Return rowGSPE_ResultsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByResultIDSurveyNameParkSubArea(ByVal ResultID As String, ByVal SurveyName As String, ByVal ParkSubArea As String) As GSPE_ResultsRow
            Return CType(Me.Rows.Find(New Object() {ResultID, SurveyName, ParkSubArea}),GSPE_ResultsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As GSPE_ResultsDataTable = CType(MyBase.Clone,GSPE_ResultsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New GSPE_ResultsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSurveyName = MyBase.Columns("SurveyName")
            Me.columnParkSubArea = MyBase.Columns("ParkSubArea")
            Me.columnBullCowRatio = MyBase.Columns("BullCowRatio")
            Me.columnCalfCowRatio = MyBase.Columns("CalfCowRatio")
            Me.columnCalfAdultRatio = MyBase.Columns("CalfAdultRatio")
            Me.columnADULT = MyBase.Columns("ADULT")
            Me.columnBULL_30_40 = MyBase.Columns("BULL_30_40")
            Me.columnBULL_30_50 = MyBase.Columns("BULL_30_50")
            Me.columnBULL_30_60 = MyBase.Columns("BULL_30_60")
            Me.columnBULL_41_50 = MyBase.Columns("BULL_41_50")
            Me.columnBULL_ALL = MyBase.Columns("BULL_ALL")
            Me.columnBULL_GT_50 = MyBase.Columns("BULL_GT_50")
            Me.columnBULL_GT_60 = MyBase.Columns("BULL_GT_60")
            Me.columnBULL_GTE_50 = MyBase.Columns("BULL_GTE_50")
            Me.columnBULL_LT_30 = MyBase.Columns("BULL_LT_30")
            Me.columnBULL_LT_50 = MyBase.Columns("BULL_LT_50")
            Me.columnCALF = MyBase.Columns("CALF")
            Me.columnCOW = MyBase.Columns("COW")
            Me.columnCOW_W_0 = MyBase.Columns("COW_W_0")
            Me.columnCOW_W_1 = MyBase.Columns("COW_W_1")
            Me.columnCOW_W_2 = MyBase.Columns("COW_W_2")
            Me.columnCOW_W_3 = MyBase.Columns("COW_W_3")
            Me.columnLG_BULL = MyBase.Columns("LG_BULL")
            Me.columnMED_BULL = MyBase.Columns("MED_BULL")
            Me.columnMED_L_BULL = MyBase.Columns("MED_L_BULL")
            Me.columnSM_BULL = MyBase.Columns("SM_BULL")
            Me.columnUNKNOWN = MyBase.Columns("UNKNOWN")
            Me.columnYBULL_ALL = MyBase.Columns("YBULL_ALL")
            Me.columnYBULL_GTSF = MyBase.Columns("YBULL_GTSF")
            Me.columnYBULL_SF = MyBase.Columns("YBULL_SF")
            Me.columnMOOSE = MyBase.Columns("MOOSE")
            Me.columnSubAreaSurveyed_SqMi = MyBase.Columns("SubAreaSurveyed_SqMi")
            Me.columnSubAreaAverageSearchEffort = MyBase.Columns("SubAreaAverageSearchEffort")
            Me.columnMethodologyUsed = MyBase.Columns("MethodologyUsed")
            Me.columnResultsSource = MyBase.Columns("ResultsSource")
            Me.columnComments = MyBase.Columns("Comments")
            Me.columnRecordInsertedDate = MyBase.Columns("RecordInsertedDate")
            Me.columnRecordInsertedBy = MyBase.Columns("RecordInsertedBy")
            Me.columnValidatedDate = MyBase.Columns("ValidatedDate")
            Me.columnValidatedBy = MyBase.Columns("ValidatedBy")
            Me.columnResultsSourceLink = MyBase.Columns("ResultsSourceLink")
            Me.columnResultID = MyBase.Columns("ResultID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSurveyName = New Global.System.Data.DataColumn("SurveyName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSurveyName)
            Me.columnParkSubArea = New Global.System.Data.DataColumn("ParkSubArea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnParkSubArea)
            Me.columnBullCowRatio = New Global.System.Data.DataColumn("BullCowRatio", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBullCowRatio)
            Me.columnCalfCowRatio = New Global.System.Data.DataColumn("CalfCowRatio", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalfCowRatio)
            Me.columnCalfAdultRatio = New Global.System.Data.DataColumn("CalfAdultRatio", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalfAdultRatio)
            Me.columnADULT = New Global.System.Data.DataColumn("ADULT", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADULT)
            Me.columnBULL_30_40 = New Global.System.Data.DataColumn("BULL_30_40", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBULL_30_40)
            Me.columnBULL_30_50 = New Global.System.Data.DataColumn("BULL_30_50", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBULL_30_50)
            Me.columnBULL_30_60 = New Global.System.Data.DataColumn("BULL_30_60", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBULL_30_60)
            Me.columnBULL_41_50 = New Global.System.Data.DataColumn("BULL_41_50", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBULL_41_50)
            Me.columnBULL_ALL = New Global.System.Data.DataColumn("BULL_ALL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBULL_ALL)
            Me.columnBULL_GT_50 = New Global.System.Data.DataColumn("BULL_GT_50", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBULL_GT_50)
            Me.columnBULL_GT_60 = New Global.System.Data.DataColumn("BULL_GT_60", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBULL_GT_60)
            Me.columnBULL_GTE_50 = New Global.System.Data.DataColumn("BULL_GTE_50", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBULL_GTE_50)
            Me.columnBULL_LT_30 = New Global.System.Data.DataColumn("BULL_LT_30", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBULL_LT_30)
            Me.columnBULL_LT_50 = New Global.System.Data.DataColumn("BULL_LT_50", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBULL_LT_50)
            Me.columnCALF = New Global.System.Data.DataColumn("CALF", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCALF)
            Me.columnCOW = New Global.System.Data.DataColumn("COW", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOW)
            Me.columnCOW_W_0 = New Global.System.Data.DataColumn("COW_W_0", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOW_W_0)
            Me.columnCOW_W_1 = New Global.System.Data.DataColumn("COW_W_1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOW_W_1)
            Me.columnCOW_W_2 = New Global.System.Data.DataColumn("COW_W_2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOW_W_2)
            Me.columnCOW_W_3 = New Global.System.Data.DataColumn("COW_W_3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOW_W_3)
            Me.columnLG_BULL = New Global.System.Data.DataColumn("LG_BULL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLG_BULL)
            Me.columnMED_BULL = New Global.System.Data.DataColumn("MED_BULL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMED_BULL)
            Me.columnMED_L_BULL = New Global.System.Data.DataColumn("MED_L_BULL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMED_L_BULL)
            Me.columnSM_BULL = New Global.System.Data.DataColumn("SM_BULL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSM_BULL)
            Me.columnUNKNOWN = New Global.System.Data.DataColumn("UNKNOWN", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNKNOWN)
            Me.columnYBULL_ALL = New Global.System.Data.DataColumn("YBULL_ALL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYBULL_ALL)
            Me.columnYBULL_GTSF = New Global.System.Data.DataColumn("YBULL_GTSF", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYBULL_GTSF)
            Me.columnYBULL_SF = New Global.System.Data.DataColumn("YBULL_SF", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYBULL_SF)
            Me.columnMOOSE = New Global.System.Data.DataColumn("MOOSE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOOSE)
            Me.columnSubAreaSurveyed_SqMi = New Global.System.Data.DataColumn("SubAreaSurveyed_SqMi", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubAreaSurveyed_SqMi)
            Me.columnSubAreaAverageSearchEffort = New Global.System.Data.DataColumn("SubAreaAverageSearchEffort", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubAreaAverageSearchEffort)
            Me.columnMethodologyUsed = New Global.System.Data.DataColumn("MethodologyUsed", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMethodologyUsed)
            Me.columnResultsSource = New Global.System.Data.DataColumn("ResultsSource", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultsSource)
            Me.columnComments = New Global.System.Data.DataColumn("Comments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComments)
            Me.columnRecordInsertedDate = New Global.System.Data.DataColumn("RecordInsertedDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecordInsertedDate)
            Me.columnRecordInsertedBy = New Global.System.Data.DataColumn("RecordInsertedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecordInsertedBy)
            Me.columnValidatedDate = New Global.System.Data.DataColumn("ValidatedDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValidatedDate)
            Me.columnValidatedBy = New Global.System.Data.DataColumn("ValidatedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValidatedBy)
            Me.columnResultsSourceLink = New Global.System.Data.DataColumn("ResultsSourceLink", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultsSourceLink)
            Me.columnResultID = New Global.System.Data.DataColumn("ResultID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint2", New Global.System.Data.DataColumn() {Me.columnResultID}, false))
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint3", New Global.System.Data.DataColumn() {Me.columnResultID, Me.columnSurveyName, Me.columnParkSubArea}, true))
            Me.columnSurveyName.AllowDBNull = false
            Me.columnSurveyName.MaxLength = 100
            Me.columnParkSubArea.AllowDBNull = false
            Me.columnParkSubArea.MaxLength = 50
            Me.columnMethodologyUsed.MaxLength = 50
            Me.columnResultsSource.AllowDBNull = false
            Me.columnResultsSource.MaxLength = 2000
            Me.columnComments.MaxLength = 2147483647
            Me.columnRecordInsertedDate.AllowDBNull = false
            Me.columnRecordInsertedBy.AllowDBNull = false
            Me.columnRecordInsertedBy.MaxLength = 50
            Me.columnValidatedBy.MaxLength = 50
            Me.columnResultsSourceLink.MaxLength = 4000
            Me.columnResultID.AllowDBNull = false
            Me.columnResultID.Unique = true
            Me.columnResultID.MaxLength = 40
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewGSPE_ResultsRow() As GSPE_ResultsRow
            Return CType(Me.NewRow,GSPE_ResultsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New GSPE_ResultsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(GSPE_ResultsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GSPE_ResultsRowChangedEvent) Is Nothing) Then
                RaiseEvent GSPE_ResultsRowChanged(Me, New GSPE_ResultsRowChangeEvent(CType(e.Row,GSPE_ResultsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GSPE_ResultsRowChangingEvent) Is Nothing) Then
                RaiseEvent GSPE_ResultsRowChanging(Me, New GSPE_ResultsRowChangeEvent(CType(e.Row,GSPE_ResultsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GSPE_ResultsRowDeletedEvent) Is Nothing) Then
                RaiseEvent GSPE_ResultsRowDeleted(Me, New GSPE_ResultsRowChangeEvent(CType(e.Row,GSPE_ResultsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GSPE_ResultsRowDeletingEvent) Is Nothing) Then
                RaiseEvent GSPE_ResultsRowDeleting(Me, New GSPE_ResultsRowChangeEvent(CType(e.Row,GSPE_ResultsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveGSPE_ResultsRow(ByVal row As GSPE_ResultsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As MooseDataSet = New MooseDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GSPE_ResultsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class GSPE_SurveysDataTable
        Inherits Global.System.Data.TypedTableBase(Of GSPE_SurveysRow)
        
        Private columnSurveyName As Global.System.Data.DataColumn
        
        Private columnYear As Global.System.Data.DataColumn
        
        Private columnNetwork As Global.System.Data.DataColumn
        
        Private columnPark As Global.System.Data.DataColumn
        
        Private columnSeason As Global.System.Data.DataColumn
        
        Private columnStartDate As Global.System.Data.DataColumn
        
        Private columnEndDate As Global.System.Data.DataColumn
        
        Private columnAreaSurveyed_mi As Global.System.Data.DataColumn
        
        Private columnAverageSearchEffort As Global.System.Data.DataColumn
        
        Private columnMethodology As Global.System.Data.DataColumn
        
        Private columnProtocolVersion As Global.System.Data.DataColumn
        
        Private columnProtocolReferenceCode As Global.System.Data.DataColumn
        
        Private columnPersonnel As Global.System.Data.DataColumn
        
        Private columnReportReferenceCode As Global.System.Data.DataColumn
        
        Private columnReportLink As Global.System.Data.DataColumn
        
        Private columnDeliverablesDatasetReferenceCode As Global.System.Data.DataColumn
        
        Private columnDataSource As Global.System.Data.DataColumn
        
        Private columnDataResourcesDirectory As Global.System.Data.DataColumn
        
        Private columnAbstract As Global.System.Data.DataColumn
        
        Private columnSummary As Global.System.Data.DataColumn
        
        Private columnDatasetProcessingSteps As Global.System.Data.DataColumn
        
        Private columnComments As Global.System.Data.DataColumn
        
        Private columnRecordInsertedDate As Global.System.Data.DataColumn
        
        Private columnRecordInsertedBy As Global.System.Data.DataColumn
        
        Private columnValidatedDate As Global.System.Data.DataColumn
        
        Private columnValidatedBy As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "GSPE_Surveys"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SurveyNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSurveyName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property YearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NetworkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNetwork
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ParkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SeasonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeason
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property StartDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStartDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EndDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEndDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AreaSurveyed_miColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAreaSurveyed_mi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AverageSearchEffortColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAverageSearchEffort
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MethodologyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMethodology
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ProtocolVersionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProtocolVersion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ProtocolReferenceCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProtocolReferenceCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PersonnelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPersonnel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ReportReferenceCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReportReferenceCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ReportLinkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReportLink
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DeliverablesDatasetReferenceCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeliverablesDatasetReferenceCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DataSourceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataSource
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DataResourcesDirectoryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataResourcesDirectory
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AbstractColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbstract
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SummaryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSummary
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DatasetProcessingStepsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDatasetProcessingSteps
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CommentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComments
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RecordInsertedDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecordInsertedDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RecordInsertedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecordInsertedBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ValidatedDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValidatedDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ValidatedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValidatedBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As GSPE_SurveysRow
            Get
                Return CType(Me.Rows(index),GSPE_SurveysRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event GSPE_SurveysRowChanging As GSPE_SurveysRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event GSPE_SurveysRowChanged As GSPE_SurveysRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event GSPE_SurveysRowDeleting As GSPE_SurveysRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event GSPE_SurveysRowDeleted As GSPE_SurveysRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddGSPE_SurveysRow(ByVal row As GSPE_SurveysRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddGSPE_SurveysRow( _
                    ByVal SurveyName As String,  _
                    ByVal Year As Integer,  _
                    ByVal Network As String,  _
                    ByVal Park As String,  _
                    ByVal Season As String,  _
                    ByVal StartDate As Date,  _
                    ByVal EndDate As Date,  _
                    ByVal AreaSurveyed_mi As Double,  _
                    ByVal AverageSearchEffort As Double,  _
                    ByVal Methodology As String,  _
                    ByVal ProtocolVersion As Double,  _
                    ByVal ProtocolReferenceCode As Integer,  _
                    ByVal Personnel As String,  _
                    ByVal ReportReferenceCode As Integer,  _
                    ByVal ReportLink As String,  _
                    ByVal DeliverablesDatasetReferenceCode As Integer,  _
                    ByVal DataSource As String,  _
                    ByVal DataResourcesDirectory As String,  _
                    ByVal Abstract As String,  _
                    ByVal Summary As String,  _
                    ByVal DatasetProcessingSteps As String,  _
                    ByVal Comments As String,  _
                    ByVal RecordInsertedDate As Date,  _
                    ByVal RecordInsertedBy As String,  _
                    ByVal ValidatedDate As Date,  _
                    ByVal ValidatedBy As String) As GSPE_SurveysRow
            Dim rowGSPE_SurveysRow As GSPE_SurveysRow = CType(Me.NewRow,GSPE_SurveysRow)
            Dim columnValuesArray() As Object = New Object() {SurveyName, Year, Network, Park, Season, StartDate, EndDate, AreaSurveyed_mi, AverageSearchEffort, Methodology, ProtocolVersion, ProtocolReferenceCode, Personnel, ReportReferenceCode, ReportLink, DeliverablesDatasetReferenceCode, DataSource, DataResourcesDirectory, Abstract, Summary, DatasetProcessingSteps, Comments, RecordInsertedDate, RecordInsertedBy, ValidatedDate, ValidatedBy}
            rowGSPE_SurveysRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowGSPE_SurveysRow)
            Return rowGSPE_SurveysRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindBySurveyName(ByVal SurveyName As String) As GSPE_SurveysRow
            Return CType(Me.Rows.Find(New Object() {SurveyName}),GSPE_SurveysRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As GSPE_SurveysDataTable = CType(MyBase.Clone,GSPE_SurveysDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New GSPE_SurveysDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSurveyName = MyBase.Columns("SurveyName")
            Me.columnYear = MyBase.Columns("Year")
            Me.columnNetwork = MyBase.Columns("Network")
            Me.columnPark = MyBase.Columns("Park")
            Me.columnSeason = MyBase.Columns("Season")
            Me.columnStartDate = MyBase.Columns("StartDate")
            Me.columnEndDate = MyBase.Columns("EndDate")
            Me.columnAreaSurveyed_mi = MyBase.Columns("AreaSurveyed_mi")
            Me.columnAverageSearchEffort = MyBase.Columns("AverageSearchEffort")
            Me.columnMethodology = MyBase.Columns("Methodology")
            Me.columnProtocolVersion = MyBase.Columns("ProtocolVersion")
            Me.columnProtocolReferenceCode = MyBase.Columns("ProtocolReferenceCode")
            Me.columnPersonnel = MyBase.Columns("Personnel")
            Me.columnReportReferenceCode = MyBase.Columns("ReportReferenceCode")
            Me.columnReportLink = MyBase.Columns("ReportLink")
            Me.columnDeliverablesDatasetReferenceCode = MyBase.Columns("DeliverablesDatasetReferenceCode")
            Me.columnDataSource = MyBase.Columns("DataSource")
            Me.columnDataResourcesDirectory = MyBase.Columns("DataResourcesDirectory")
            Me.columnAbstract = MyBase.Columns("Abstract")
            Me.columnSummary = MyBase.Columns("Summary")
            Me.columnDatasetProcessingSteps = MyBase.Columns("DatasetProcessingSteps")
            Me.columnComments = MyBase.Columns("Comments")
            Me.columnRecordInsertedDate = MyBase.Columns("RecordInsertedDate")
            Me.columnRecordInsertedBy = MyBase.Columns("RecordInsertedBy")
            Me.columnValidatedDate = MyBase.Columns("ValidatedDate")
            Me.columnValidatedBy = MyBase.Columns("ValidatedBy")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSurveyName = New Global.System.Data.DataColumn("SurveyName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSurveyName)
            Me.columnYear = New Global.System.Data.DataColumn("Year", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYear)
            Me.columnNetwork = New Global.System.Data.DataColumn("Network", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNetwork)
            Me.columnPark = New Global.System.Data.DataColumn("Park", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPark)
            Me.columnSeason = New Global.System.Data.DataColumn("Season", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeason)
            Me.columnStartDate = New Global.System.Data.DataColumn("StartDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStartDate)
            Me.columnEndDate = New Global.System.Data.DataColumn("EndDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEndDate)
            Me.columnAreaSurveyed_mi = New Global.System.Data.DataColumn("AreaSurveyed_mi", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAreaSurveyed_mi)
            Me.columnAverageSearchEffort = New Global.System.Data.DataColumn("AverageSearchEffort", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAverageSearchEffort)
            Me.columnMethodology = New Global.System.Data.DataColumn("Methodology", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMethodology)
            Me.columnProtocolVersion = New Global.System.Data.DataColumn("ProtocolVersion", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProtocolVersion)
            Me.columnProtocolReferenceCode = New Global.System.Data.DataColumn("ProtocolReferenceCode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProtocolReferenceCode)
            Me.columnPersonnel = New Global.System.Data.DataColumn("Personnel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPersonnel)
            Me.columnReportReferenceCode = New Global.System.Data.DataColumn("ReportReferenceCode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReportReferenceCode)
            Me.columnReportLink = New Global.System.Data.DataColumn("ReportLink", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReportLink)
            Me.columnDeliverablesDatasetReferenceCode = New Global.System.Data.DataColumn("DeliverablesDatasetReferenceCode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeliverablesDatasetReferenceCode)
            Me.columnDataSource = New Global.System.Data.DataColumn("DataSource", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataSource)
            Me.columnDataResourcesDirectory = New Global.System.Data.DataColumn("DataResourcesDirectory", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataResourcesDirectory)
            Me.columnAbstract = New Global.System.Data.DataColumn("Abstract", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbstract)
            Me.columnSummary = New Global.System.Data.DataColumn("Summary", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSummary)
            Me.columnDatasetProcessingSteps = New Global.System.Data.DataColumn("DatasetProcessingSteps", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDatasetProcessingSteps)
            Me.columnComments = New Global.System.Data.DataColumn("Comments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComments)
            Me.columnRecordInsertedDate = New Global.System.Data.DataColumn("RecordInsertedDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecordInsertedDate)
            Me.columnRecordInsertedBy = New Global.System.Data.DataColumn("RecordInsertedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecordInsertedBy)
            Me.columnValidatedDate = New Global.System.Data.DataColumn("ValidatedDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValidatedDate)
            Me.columnValidatedBy = New Global.System.Data.DataColumn("ValidatedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValidatedBy)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSurveyName}, true))
            Me.columnSurveyName.AllowDBNull = false
            Me.columnSurveyName.Unique = true
            Me.columnSurveyName.MaxLength = 100
            Me.columnYear.AllowDBNull = false
            Me.columnNetwork.MaxLength = 4
            Me.columnPark.MaxLength = 4
            Me.columnSeason.MaxLength = 10
            Me.columnMethodology.MaxLength = 50
            Me.columnPersonnel.MaxLength = 200
            Me.columnReportLink.MaxLength = 2000
            Me.columnDataSource.MaxLength = 2000
            Me.columnDataResourcesDirectory.MaxLength = 1000
            Me.columnAbstract.MaxLength = 2147483647
            Me.columnSummary.MaxLength = 2147483647
            Me.columnDatasetProcessingSteps.MaxLength = 2147483647
            Me.columnComments.MaxLength = 2147483647
            Me.columnRecordInsertedDate.AllowDBNull = false
            Me.columnRecordInsertedBy.AllowDBNull = false
            Me.columnRecordInsertedBy.MaxLength = 50
            Me.columnValidatedBy.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewGSPE_SurveysRow() As GSPE_SurveysRow
            Return CType(Me.NewRow,GSPE_SurveysRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New GSPE_SurveysRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(GSPE_SurveysRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GSPE_SurveysRowChangedEvent) Is Nothing) Then
                RaiseEvent GSPE_SurveysRowChanged(Me, New GSPE_SurveysRowChangeEvent(CType(e.Row,GSPE_SurveysRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GSPE_SurveysRowChangingEvent) Is Nothing) Then
                RaiseEvent GSPE_SurveysRowChanging(Me, New GSPE_SurveysRowChangeEvent(CType(e.Row,GSPE_SurveysRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GSPE_SurveysRowDeletedEvent) Is Nothing) Then
                RaiseEvent GSPE_SurveysRowDeleted(Me, New GSPE_SurveysRowChangeEvent(CType(e.Row,GSPE_SurveysRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GSPE_SurveysRowDeletingEvent) Is Nothing) Then
                RaiseEvent GSPE_SurveysRowDeleting(Me, New GSPE_SurveysRowChangeEvent(CType(e.Row,GSPE_SurveysRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveGSPE_SurveysRow(ByVal row As GSPE_SurveysRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As MooseDataSet = New MooseDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GSPE_SurveysDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class GSPERow
        Inherits Global.System.Data.DataRow
        
        Private tableGSPE As GSPEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGSPE = CType(Me.Table,GSPEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Park() As String
            Get
                Return CType(Me(Me.tableGSPE.ParkColumn),String)
            End Get
            Set
                Me(Me.tableGSPE.ParkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SurveyName() As String
            Get
                Return CType(Me(Me.tableGSPE.SurveyNameColumn),String)
            End Get
            Set
                Me(Me.tableGSPE.SurveyNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SurveyYear() As Integer
            Get
                Return CType(Me(Me.tableGSPE.SurveyYearColumn),Integer)
            End Get
            Set
                Me(Me.tableGSPE.SurveyYearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Season() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.SeasonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Season' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.SeasonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SubArea() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.SubAreaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubArea' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.SubAreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property GMU() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.GMUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GMU' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.GMUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID() As String
            Get
                Return CType(Me(Me.tableGSPE.IDColumn),String)
            End Get
            Set
                Me(Me.tableGSPE.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property StartDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.StartDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StartDate' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.StartDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property StopDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.StopDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StopDate' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.StopDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IntID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.IntIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IntID' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.IntIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Rand() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.RandColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Rand' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.RandColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FiringOrder() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.FiringOrderColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FiringOrder' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.FiringOrderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Selected() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.SelectedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Selected' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.SelectedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Counted() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.CountedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Counted' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.CountedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Exclude() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.ExcludeColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Exclude' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.ExcludeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Strat() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.StratColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Strat' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.StratColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property StratName() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.StratNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StratName' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.StratNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property StratMoose() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.StratMooseColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StratMoose' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.StratMooseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property StratTracks() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.StratTracksColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StratTracks' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.StratTracksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property StratHab() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.StratHabColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StratHab' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.StratHabColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SearchMin() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.SearchMinColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SearchMin' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.SearchMinColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DateCounted() As Date
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.DateCountedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateCounted' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.DateCountedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Perc_Not_Flown() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.Perc_Not_FlownColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Perc_Not_Flown' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.Perc_Not_FlownColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property X_COORD() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.X_COORDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'X_COORD' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.X_COORDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Y_COORD() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.Y_COORDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Y_COORD' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.Y_COORDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Area_SqMi() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.Area_SqMiColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area_SqMi' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.Area_SqMiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ADULT() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.ADULTColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADULT' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.ADULTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BULL_30_40() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.BULL_30_40Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BULL_30_40' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.BULL_30_40Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BULL_30_50() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.BULL_30_50Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BULL_30_50' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.BULL_30_50Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BULL_30_60() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.BULL_30_60Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BULL_30_60' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.BULL_30_60Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BULL_41_50() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.BULL_41_50Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BULL_41_50' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.BULL_41_50Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BULL_ALL() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.BULL_ALLColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BULL_ALL' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.BULL_ALLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BULL_GT_50() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.BULL_GT_50Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BULL_GT_50' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.BULL_GT_50Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BULL_GT_60() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.BULL_GT_60Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BULL_GT_60' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.BULL_GT_60Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BULL_GTE_50() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.BULL_GTE_50Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BULL_GTE_50' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.BULL_GTE_50Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BULL_LT_30() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.BULL_LT_30Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BULL_LT_30' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.BULL_LT_30Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BULL_LT_50() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.BULL_LT_50Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BULL_LT_50' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.BULL_LT_50Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CALF() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.CALFColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CALF' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.CALFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property COW() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.COWColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COW' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.COWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property COW_W_0() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.COW_W_0Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COW_W_0' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.COW_W_0Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property COW_W_1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.COW_W_1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COW_W_1' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.COW_W_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property COW_W_2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.COW_W_2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COW_W_2' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.COW_W_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property COW_W_3() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.COW_W_3Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COW_W_3' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.COW_W_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LG_BULL() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.LG_BULLColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LG_BULL' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.LG_BULLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MED_BULL() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.MED_BULLColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MED_BULL' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.MED_BULLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MED_L_BULL() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.MED_L_BULLColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MED_L_BULL' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.MED_L_BULLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SM_BULL() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.SM_BULLColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SM_BULL' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.SM_BULLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UNKNOWN() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.UNKNOWNColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UNKNOWN' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.UNKNOWNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property YBULL_ALL() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.YBULL_ALLColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YBULL_ALL' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.YBULL_ALLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property YBULL_GTSF() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.YBULL_GTSFColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YBULL_GTSF' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.YBULL_GTSFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property YBULL_SF() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.YBULL_SFColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YBULL_SF' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.YBULL_SFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MOOSE() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.MOOSEColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MOOSE' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.MOOSEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Pilot() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.PilotColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pilot' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.PilotColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Observer() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.ObserverColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Observer' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.ObserverColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Personnel() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.PersonnelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Personnel' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.PersonnelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Density() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.DensityColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Density' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.DensityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SCF_Plot() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.SCF_PlotColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCF_Plot' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.SCF_PlotColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Std() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.StdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Std' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.StdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Int() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.IntColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Int' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.IntColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Comments() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.CommentsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Comments' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.CommentsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SourceFilename() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.SourceFilenameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SourceFilename' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.SourceFilenameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RecordInsertedDate() As Date
            Get
                Return CType(Me(Me.tableGSPE.RecordInsertedDateColumn),Date)
            End Get
            Set
                Me(Me.tableGSPE.RecordInsertedDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RecordInsertedBy() As String
            Get
                Return CType(Me(Me.tableGSPE.RecordInsertedByColumn),String)
            End Get
            Set
                Me(Me.tableGSPE.RecordInsertedByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CertificationDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.CertificationDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CertificationDate' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.CertificationDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CertifiedBy() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.CertifiedByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CertifiedBy' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.CertifiedByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CertificationLevel() As String
            Get
                Return CType(Me(Me.tableGSPE.CertificationLevelColumn),String)
            End Get
            Set
                Me(Me.tableGSPE.CertificationLevelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SurveyUnitSet() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.SurveyUnitSetColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SurveyUnitSet' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.SurveyUnitSetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SearchMin1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.SearchMin1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SearchMin1' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.SearchMin1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BULL_ADULT() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.BULL_ADULTColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BULL_ADULT' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.BULL_ADULTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CALF_LONE() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.CALF_LONEColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CALF_LONE' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.CALF_LONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SCF() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE.SCFColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCF' in table 'GSPE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE.SCFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property GSPE_SurveysRow() As GSPE_SurveysRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_GSPE_GSPE_Surveys")),GSPE_SurveysRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_GSPE_GSPE_Surveys"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSeasonNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.SeasonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSeasonNull()
            Me(Me.tableGSPE.SeasonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSubAreaNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.SubAreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSubAreaNull()
            Me(Me.tableGSPE.SubAreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsGMUNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.GMUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetGMUNull()
            Me(Me.tableGSPE.GMUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsStartDateNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.StartDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetStartDateNull()
            Me(Me.tableGSPE.StartDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsStopDateNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.StopDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetStopDateNull()
            Me(Me.tableGSPE.StopDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIntIDNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.IntIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIntIDNull()
            Me(Me.tableGSPE.IntIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRandNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.RandColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRandNull()
            Me(Me.tableGSPE.RandColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFiringOrderNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.FiringOrderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFiringOrderNull()
            Me(Me.tableGSPE.FiringOrderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSelectedNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.SelectedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSelectedNull()
            Me(Me.tableGSPE.SelectedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCountedNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.CountedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCountedNull()
            Me(Me.tableGSPE.CountedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsExcludeNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.ExcludeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetExcludeNull()
            Me(Me.tableGSPE.ExcludeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsStratNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.StratColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetStratNull()
            Me(Me.tableGSPE.StratColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsStratNameNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.StratNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetStratNameNull()
            Me(Me.tableGSPE.StratNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsStratMooseNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.StratMooseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetStratMooseNull()
            Me(Me.tableGSPE.StratMooseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsStratTracksNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.StratTracksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetStratTracksNull()
            Me(Me.tableGSPE.StratTracksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsStratHabNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.StratHabColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetStratHabNull()
            Me(Me.tableGSPE.StratHabColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSearchMinNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.SearchMinColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSearchMinNull()
            Me(Me.tableGSPE.SearchMinColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDateCountedNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.DateCountedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDateCountedNull()
            Me(Me.tableGSPE.DateCountedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPerc_Not_FlownNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.Perc_Not_FlownColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPerc_Not_FlownNull()
            Me(Me.tableGSPE.Perc_Not_FlownColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsX_COORDNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.X_COORDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetX_COORDNull()
            Me(Me.tableGSPE.X_COORDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsY_COORDNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.Y_COORDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetY_COORDNull()
            Me(Me.tableGSPE.Y_COORDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsArea_SqMiNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.Area_SqMiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetArea_SqMiNull()
            Me(Me.tableGSPE.Area_SqMiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsADULTNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.ADULTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetADULTNull()
            Me(Me.tableGSPE.ADULTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBULL_30_40Null() As Boolean
            Return Me.IsNull(Me.tableGSPE.BULL_30_40Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBULL_30_40Null()
            Me(Me.tableGSPE.BULL_30_40Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBULL_30_50Null() As Boolean
            Return Me.IsNull(Me.tableGSPE.BULL_30_50Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBULL_30_50Null()
            Me(Me.tableGSPE.BULL_30_50Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBULL_30_60Null() As Boolean
            Return Me.IsNull(Me.tableGSPE.BULL_30_60Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBULL_30_60Null()
            Me(Me.tableGSPE.BULL_30_60Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBULL_41_50Null() As Boolean
            Return Me.IsNull(Me.tableGSPE.BULL_41_50Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBULL_41_50Null()
            Me(Me.tableGSPE.BULL_41_50Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBULL_ALLNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.BULL_ALLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBULL_ALLNull()
            Me(Me.tableGSPE.BULL_ALLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBULL_GT_50Null() As Boolean
            Return Me.IsNull(Me.tableGSPE.BULL_GT_50Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBULL_GT_50Null()
            Me(Me.tableGSPE.BULL_GT_50Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBULL_GT_60Null() As Boolean
            Return Me.IsNull(Me.tableGSPE.BULL_GT_60Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBULL_GT_60Null()
            Me(Me.tableGSPE.BULL_GT_60Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBULL_GTE_50Null() As Boolean
            Return Me.IsNull(Me.tableGSPE.BULL_GTE_50Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBULL_GTE_50Null()
            Me(Me.tableGSPE.BULL_GTE_50Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBULL_LT_30Null() As Boolean
            Return Me.IsNull(Me.tableGSPE.BULL_LT_30Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBULL_LT_30Null()
            Me(Me.tableGSPE.BULL_LT_30Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBULL_LT_50Null() As Boolean
            Return Me.IsNull(Me.tableGSPE.BULL_LT_50Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBULL_LT_50Null()
            Me(Me.tableGSPE.BULL_LT_50Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCALFNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.CALFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCALFNull()
            Me(Me.tableGSPE.CALFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCOWNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.COWColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCOWNull()
            Me(Me.tableGSPE.COWColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCOW_W_0Null() As Boolean
            Return Me.IsNull(Me.tableGSPE.COW_W_0Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCOW_W_0Null()
            Me(Me.tableGSPE.COW_W_0Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCOW_W_1Null() As Boolean
            Return Me.IsNull(Me.tableGSPE.COW_W_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCOW_W_1Null()
            Me(Me.tableGSPE.COW_W_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCOW_W_2Null() As Boolean
            Return Me.IsNull(Me.tableGSPE.COW_W_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCOW_W_2Null()
            Me(Me.tableGSPE.COW_W_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCOW_W_3Null() As Boolean
            Return Me.IsNull(Me.tableGSPE.COW_W_3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCOW_W_3Null()
            Me(Me.tableGSPE.COW_W_3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLG_BULLNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.LG_BULLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLG_BULLNull()
            Me(Me.tableGSPE.LG_BULLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMED_BULLNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.MED_BULLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMED_BULLNull()
            Me(Me.tableGSPE.MED_BULLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMED_L_BULLNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.MED_L_BULLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMED_L_BULLNull()
            Me(Me.tableGSPE.MED_L_BULLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSM_BULLNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.SM_BULLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSM_BULLNull()
            Me(Me.tableGSPE.SM_BULLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsUNKNOWNNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.UNKNOWNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetUNKNOWNNull()
            Me(Me.tableGSPE.UNKNOWNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsYBULL_ALLNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.YBULL_ALLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetYBULL_ALLNull()
            Me(Me.tableGSPE.YBULL_ALLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsYBULL_GTSFNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.YBULL_GTSFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetYBULL_GTSFNull()
            Me(Me.tableGSPE.YBULL_GTSFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsYBULL_SFNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.YBULL_SFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetYBULL_SFNull()
            Me(Me.tableGSPE.YBULL_SFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMOOSENull() As Boolean
            Return Me.IsNull(Me.tableGSPE.MOOSEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMOOSENull()
            Me(Me.tableGSPE.MOOSEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPilotNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.PilotColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPilotNull()
            Me(Me.tableGSPE.PilotColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsObserverNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.ObserverColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetObserverNull()
            Me(Me.tableGSPE.ObserverColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPersonnelNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.PersonnelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPersonnelNull()
            Me(Me.tableGSPE.PersonnelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDensityNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.DensityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDensityNull()
            Me(Me.tableGSPE.DensityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSCF_PlotNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.SCF_PlotColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSCF_PlotNull()
            Me(Me.tableGSPE.SCF_PlotColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsStdNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.StdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetStdNull()
            Me(Me.tableGSPE.StdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIntNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.IntColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIntNull()
            Me(Me.tableGSPE.IntColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCommentsNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.CommentsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCommentsNull()
            Me(Me.tableGSPE.CommentsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSourceFilenameNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.SourceFilenameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSourceFilenameNull()
            Me(Me.tableGSPE.SourceFilenameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCertificationDateNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.CertificationDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCertificationDateNull()
            Me(Me.tableGSPE.CertificationDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCertifiedByNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.CertifiedByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCertifiedByNull()
            Me(Me.tableGSPE.CertifiedByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSurveyUnitSetNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.SurveyUnitSetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSurveyUnitSetNull()
            Me(Me.tableGSPE.SurveyUnitSetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSearchMin1Null() As Boolean
            Return Me.IsNull(Me.tableGSPE.SearchMin1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSearchMin1Null()
            Me(Me.tableGSPE.SearchMin1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBULL_ADULTNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.BULL_ADULTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBULL_ADULTNull()
            Me(Me.tableGSPE.BULL_ADULTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCALF_LONENull() As Boolean
            Return Me.IsNull(Me.tableGSPE.CALF_LONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCALF_LONENull()
            Me(Me.tableGSPE.CALF_LONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSCFNull() As Boolean
            Return Me.IsNull(Me.tableGSPE.SCFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSCFNull()
            Me(Me.tableGSPE.SCFColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class GSPE_DensityEstimatesRow
        Inherits Global.System.Data.DataRow
        
        Private tableGSPE_DensityEstimates As GSPE_DensityEstimatesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGSPE_DensityEstimates = CType(Me.Table,GSPE_DensityEstimatesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SurveyName() As String
            Get
                Return CType(Me(Me.tableGSPE_DensityEstimates.SurveyNameColumn),String)
            End Get
            Set
                Me(Me.tableGSPE_DensityEstimates.SurveyNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ParkSubArea() As String
            Get
                Return CType(Me(Me.tableGSPE_DensityEstimates.ParkSubAreaColumn),String)
            End Get
            Set
                Me(Me.tableGSPE_DensityEstimates.ParkSubAreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Stratum() As String
            Get
                Return CType(Me(Me.tableGSPE_DensityEstimates.StratumColumn),String)
            End Get
            Set
                Me(Me.tableGSPE_DensityEstimates.StratumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Density_Estimate() As Double
            Get
                Return CType(Me(Me.tableGSPE_DensityEstimates.Density_EstimateColumn),Double)
            End Get
            Set
                Me(Me.tableGSPE_DensityEstimates.Density_EstimateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Density_AreaSurveyed_SqMi() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_DensityEstimates.Density_AreaSurveyed_SqMiColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Density_AreaSurveyed_SqMi' in table 'GSPE_DensityEstimates'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_DensityEstimates.Density_AreaSurveyed_SqMiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Density_AverageSearchEffort() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_DensityEstimates.Density_AverageSearchEffortColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Density_AverageSearchEffort' in table 'GSPE_DensityEstimate"& _ 
                            "s' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_DensityEstimates.Density_AverageSearchEffortColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DensityEstimateMethodology() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_DensityEstimates.DensityEstimateMethodologyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DensityEstimateMethodology' in table 'GSPE_DensityEstimates"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_DensityEstimates.DensityEstimateMethodologyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DensityEstimateSource() As String
            Get
                Return CType(Me(Me.tableGSPE_DensityEstimates.DensityEstimateSourceColumn),String)
            End Get
            Set
                Me(Me.tableGSPE_DensityEstimates.DensityEstimateSourceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ReportDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_DensityEstimates.ReportDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReportDate' in table 'GSPE_DensityEstimates' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_DensityEstimates.ReportDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Comments() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_DensityEstimates.CommentsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Comments' in table 'GSPE_DensityEstimates' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_DensityEstimates.CommentsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RecordInsertedDate() As Date
            Get
                Return CType(Me(Me.tableGSPE_DensityEstimates.RecordInsertedDateColumn),Date)
            End Get
            Set
                Me(Me.tableGSPE_DensityEstimates.RecordInsertedDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RecordInsertedBy() As String
            Get
                Return CType(Me(Me.tableGSPE_DensityEstimates.RecordInsertedByColumn),String)
            End Get
            Set
                Me(Me.tableGSPE_DensityEstimates.RecordInsertedByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ValidatedDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_DensityEstimates.ValidatedDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ValidatedDate' in table 'GSPE_DensityEstimates' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_DensityEstimates.ValidatedDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ValidatedBy() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_DensityEstimates.ValidatedByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ValidatedBy' in table 'GSPE_DensityEstimates' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_DensityEstimates.ValidatedByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Analysis_Column() As String
            Get
                Return CType(Me(Me.tableGSPE_DensityEstimates.Analysis_ColumnColumn),String)
            End Get
            Set
                Me(Me.tableGSPE_DensityEstimates.Analysis_ColumnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DensityEstimateSourceLink() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_DensityEstimates.DensityEstimateSourceLinkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DensityEstimateSourceLink' in table 'GSPE_DensityEstimates'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_DensityEstimates.DensityEstimateSourceLinkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property GSPE_SurveysRow() As GSPE_SurveysRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_GSPE_DensityEstimates_GSPE_Surveys")),GSPE_SurveysRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_GSPE_DensityEstimates_GSPE_Surveys"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDensity_AreaSurveyed_SqMiNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_DensityEstimates.Density_AreaSurveyed_SqMiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDensity_AreaSurveyed_SqMiNull()
            Me(Me.tableGSPE_DensityEstimates.Density_AreaSurveyed_SqMiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDensity_AverageSearchEffortNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_DensityEstimates.Density_AverageSearchEffortColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDensity_AverageSearchEffortNull()
            Me(Me.tableGSPE_DensityEstimates.Density_AverageSearchEffortColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDensityEstimateMethodologyNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_DensityEstimates.DensityEstimateMethodologyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDensityEstimateMethodologyNull()
            Me(Me.tableGSPE_DensityEstimates.DensityEstimateMethodologyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsReportDateNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_DensityEstimates.ReportDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetReportDateNull()
            Me(Me.tableGSPE_DensityEstimates.ReportDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCommentsNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_DensityEstimates.CommentsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCommentsNull()
            Me(Me.tableGSPE_DensityEstimates.CommentsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsValidatedDateNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_DensityEstimates.ValidatedDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetValidatedDateNull()
            Me(Me.tableGSPE_DensityEstimates.ValidatedDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsValidatedByNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_DensityEstimates.ValidatedByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetValidatedByNull()
            Me(Me.tableGSPE_DensityEstimates.ValidatedByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDensityEstimateSourceLinkNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_DensityEstimates.DensityEstimateSourceLinkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDensityEstimateSourceLinkNull()
            Me(Me.tableGSPE_DensityEstimates.DensityEstimateSourceLinkColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class GSPE_PopulationEstimatesRow
        Inherits Global.System.Data.DataRow
        
        Private tableGSPE_PopulationEstimates As GSPE_PopulationEstimatesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGSPE_PopulationEstimates = CType(Me.Table,GSPE_PopulationEstimatesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SurveyName() As String
            Get
                Return CType(Me(Me.tableGSPE_PopulationEstimates.SurveyNameColumn),String)
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.SurveyNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ParkSubArea() As String
            Get
                Return CType(Me(Me.tableGSPE_PopulationEstimates.ParkSubAreaColumn),String)
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.ParkSubAreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Analysis_Column() As String
            Get
                Return CType(Me(Me.tableGSPE_PopulationEstimates.Analysis_ColumnColumn),String)
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.Analysis_ColumnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Strata() As String
            Get
                Return CType(Me(Me.tableGSPE_PopulationEstimates.StrataColumn),String)
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.StrataColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Confidence() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_PopulationEstimates.ConfidenceColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Confidence' in table 'GSPE_PopulationEstimates' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.ConfidenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Population_Estimate() As Double
            Get
                Return CType(Me(Me.tableGSPE_PopulationEstimates.Population_EstimateColumn),Double)
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.Population_EstimateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Standard_Error() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_PopulationEstimates.Standard_ErrorColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Standard_Error' in table 'GSPE_PopulationEstimates' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.Standard_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Lower_Limit() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_PopulationEstimates.Lower_LimitColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Lower_Limit' in table 'GSPE_PopulationEstimates' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.Lower_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Upper_Limit() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_PopulationEstimates.Upper_LimitColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Upper_Limit' in table 'GSPE_PopulationEstimates' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.Upper_LimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Proportion_of_Mean() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_PopulationEstimates.Proportion_of_MeanColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Proportion_of_Mean' in table 'GSPE_PopulationEstimates' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.Proportion_of_MeanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Strata_Column() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_PopulationEstimates.Strata_ColumnColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Strata_Column' in table 'GSPE_PopulationEstimates' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.Strata_ColumnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Analysis_Area() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_PopulationEstimates.Analysis_AreaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Analysis_Area' in table 'GSPE_PopulationEstimates' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.Analysis_AreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Counted_Column() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_PopulationEstimates.Counted_ColumnColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Counted_Column' in table 'GSPE_PopulationEstimates' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.Counted_ColumnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Unit_Area_Column() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_PopulationEstimates.Unit_Area_ColumnColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Unit_Area_Column' in table 'GSPE_PopulationEstimates' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.Unit_Area_ColumnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SurveyArea() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_PopulationEstimates.SurveyAreaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SurveyArea' in table 'GSPE_PopulationEstimates' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.SurveyAreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SampledArea() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_PopulationEstimates.SampledAreaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SampledArea' in table 'GSPE_PopulationEstimates' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.SampledAreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Intensity() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_PopulationEstimates.IntensityColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Intensity' in table 'GSPE_PopulationEstimates' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.IntensityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RelativePrecision() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_PopulationEstimates.RelativePrecisionColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RelativePrecision' in table 'GSPE_PopulationEstimates' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.RelativePrecisionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SightabilityCorrectionFactor() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_PopulationEstimates.SightabilityCorrectionFactorColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SightabilityCorrectionFactor' in table 'GSPE_PopulationEsti"& _ 
                            "mates' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.SightabilityCorrectionFactorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Density() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_PopulationEstimates.DensityColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Density' in table 'GSPE_PopulationEstimates' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.DensityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Comments() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_PopulationEstimates.CommentsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Comments' in table 'GSPE_PopulationEstimates' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.CommentsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ReportDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_PopulationEstimates.ReportDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReportDate' in table 'GSPE_PopulationEstimates' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.ReportDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AnalysisPerformedBy() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_PopulationEstimates.AnalysisPerformedByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnalysisPerformedBy' in table 'GSPE_PopulationEstimates' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.AnalysisPerformedByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PopulationEstimateSource() As String
            Get
                Return CType(Me(Me.tableGSPE_PopulationEstimates.PopulationEstimateSourceColumn),String)
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.PopulationEstimateSourceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RecordInsertedDate() As Date
            Get
                Return CType(Me(Me.tableGSPE_PopulationEstimates.RecordInsertedDateColumn),Date)
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.RecordInsertedDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RecordInsertedBy() As String
            Get
                Return CType(Me(Me.tableGSPE_PopulationEstimates.RecordInsertedByColumn),String)
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.RecordInsertedByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ValidatedDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_PopulationEstimates.ValidatedDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ValidatedDate' in table 'GSPE_PopulationEstimates' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.ValidatedDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ValidatedBy() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_PopulationEstimates.ValidatedByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ValidatedBy' in table 'GSPE_PopulationEstimates' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.ValidatedByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PopulationSourceLink() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_PopulationEstimates.PopulationSourceLinkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PopulationSourceLink' in table 'GSPE_PopulationEstimates' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.PopulationSourceLinkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PopulationEstimateSourceReferenceCode() As Integer
            Get
                Return CType(Me(Me.tableGSPE_PopulationEstimates.PopulationEstimateSourceReferenceCodeColumn),Integer)
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.PopulationEstimateSourceReferenceCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PopulationEstimateID() As Integer
            Get
                Return CType(Me(Me.tableGSPE_PopulationEstimates.PopulationEstimateIDColumn),Integer)
            End Get
            Set
                Me(Me.tableGSPE_PopulationEstimates.PopulationEstimateIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property GSPE_SurveysRow() As GSPE_SurveysRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_GSPE_PopulationEstimates_GSPE_Surveys")),GSPE_SurveysRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_GSPE_PopulationEstimates_GSPE_Surveys"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsConfidenceNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_PopulationEstimates.ConfidenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetConfidenceNull()
            Me(Me.tableGSPE_PopulationEstimates.ConfidenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsStandard_ErrorNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_PopulationEstimates.Standard_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetStandard_ErrorNull()
            Me(Me.tableGSPE_PopulationEstimates.Standard_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLower_LimitNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_PopulationEstimates.Lower_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLower_LimitNull()
            Me(Me.tableGSPE_PopulationEstimates.Lower_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsUpper_LimitNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_PopulationEstimates.Upper_LimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetUpper_LimitNull()
            Me(Me.tableGSPE_PopulationEstimates.Upper_LimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsProportion_of_MeanNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_PopulationEstimates.Proportion_of_MeanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetProportion_of_MeanNull()
            Me(Me.tableGSPE_PopulationEstimates.Proportion_of_MeanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsStrata_ColumnNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_PopulationEstimates.Strata_ColumnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetStrata_ColumnNull()
            Me(Me.tableGSPE_PopulationEstimates.Strata_ColumnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAnalysis_AreaNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_PopulationEstimates.Analysis_AreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAnalysis_AreaNull()
            Me(Me.tableGSPE_PopulationEstimates.Analysis_AreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCounted_ColumnNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_PopulationEstimates.Counted_ColumnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCounted_ColumnNull()
            Me(Me.tableGSPE_PopulationEstimates.Counted_ColumnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsUnit_Area_ColumnNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_PopulationEstimates.Unit_Area_ColumnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetUnit_Area_ColumnNull()
            Me(Me.tableGSPE_PopulationEstimates.Unit_Area_ColumnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSurveyAreaNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_PopulationEstimates.SurveyAreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSurveyAreaNull()
            Me(Me.tableGSPE_PopulationEstimates.SurveyAreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSampledAreaNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_PopulationEstimates.SampledAreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSampledAreaNull()
            Me(Me.tableGSPE_PopulationEstimates.SampledAreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIntensityNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_PopulationEstimates.IntensityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIntensityNull()
            Me(Me.tableGSPE_PopulationEstimates.IntensityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRelativePrecisionNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_PopulationEstimates.RelativePrecisionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRelativePrecisionNull()
            Me(Me.tableGSPE_PopulationEstimates.RelativePrecisionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSightabilityCorrectionFactorNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_PopulationEstimates.SightabilityCorrectionFactorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSightabilityCorrectionFactorNull()
            Me(Me.tableGSPE_PopulationEstimates.SightabilityCorrectionFactorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDensityNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_PopulationEstimates.DensityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDensityNull()
            Me(Me.tableGSPE_PopulationEstimates.DensityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCommentsNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_PopulationEstimates.CommentsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCommentsNull()
            Me(Me.tableGSPE_PopulationEstimates.CommentsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsReportDateNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_PopulationEstimates.ReportDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetReportDateNull()
            Me(Me.tableGSPE_PopulationEstimates.ReportDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAnalysisPerformedByNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_PopulationEstimates.AnalysisPerformedByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAnalysisPerformedByNull()
            Me(Me.tableGSPE_PopulationEstimates.AnalysisPerformedByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsValidatedDateNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_PopulationEstimates.ValidatedDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetValidatedDateNull()
            Me(Me.tableGSPE_PopulationEstimates.ValidatedDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsValidatedByNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_PopulationEstimates.ValidatedByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetValidatedByNull()
            Me(Me.tableGSPE_PopulationEstimates.ValidatedByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPopulationSourceLinkNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_PopulationEstimates.PopulationSourceLinkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPopulationSourceLinkNull()
            Me(Me.tableGSPE_PopulationEstimates.PopulationSourceLinkColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class GSPE_ResultsRow
        Inherits Global.System.Data.DataRow
        
        Private tableGSPE_Results As GSPE_ResultsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGSPE_Results = CType(Me.Table,GSPE_ResultsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SurveyName() As String
            Get
                Return CType(Me(Me.tableGSPE_Results.SurveyNameColumn),String)
            End Get
            Set
                Me(Me.tableGSPE_Results.SurveyNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ParkSubArea() As String
            Get
                Return CType(Me(Me.tableGSPE_Results.ParkSubAreaColumn),String)
            End Get
            Set
                Me(Me.tableGSPE_Results.ParkSubAreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BullCowRatio() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.BullCowRatioColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BullCowRatio' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.BullCowRatioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CalfCowRatio() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.CalfCowRatioColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalfCowRatio' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.CalfCowRatioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CalfAdultRatio() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.CalfAdultRatioColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalfAdultRatio' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.CalfAdultRatioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ADULT() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.ADULTColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADULT' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.ADULTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BULL_30_40() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.BULL_30_40Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BULL_30_40' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.BULL_30_40Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BULL_30_50() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.BULL_30_50Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BULL_30_50' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.BULL_30_50Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BULL_30_60() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.BULL_30_60Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BULL_30_60' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.BULL_30_60Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BULL_41_50() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.BULL_41_50Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BULL_41_50' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.BULL_41_50Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BULL_ALL() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.BULL_ALLColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BULL_ALL' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.BULL_ALLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BULL_GT_50() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.BULL_GT_50Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BULL_GT_50' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.BULL_GT_50Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BULL_GT_60() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.BULL_GT_60Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BULL_GT_60' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.BULL_GT_60Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BULL_GTE_50() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.BULL_GTE_50Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BULL_GTE_50' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.BULL_GTE_50Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BULL_LT_30() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.BULL_LT_30Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BULL_LT_30' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.BULL_LT_30Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BULL_LT_50() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.BULL_LT_50Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BULL_LT_50' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.BULL_LT_50Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CALF() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.CALFColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CALF' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.CALFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property COW() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.COWColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COW' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.COWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property COW_W_0() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.COW_W_0Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COW_W_0' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.COW_W_0Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property COW_W_1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.COW_W_1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COW_W_1' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.COW_W_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property COW_W_2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.COW_W_2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COW_W_2' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.COW_W_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property COW_W_3() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.COW_W_3Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COW_W_3' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.COW_W_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LG_BULL() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.LG_BULLColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LG_BULL' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.LG_BULLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MED_BULL() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.MED_BULLColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MED_BULL' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.MED_BULLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MED_L_BULL() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.MED_L_BULLColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MED_L_BULL' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.MED_L_BULLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SM_BULL() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.SM_BULLColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SM_BULL' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.SM_BULLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UNKNOWN() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.UNKNOWNColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UNKNOWN' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.UNKNOWNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property YBULL_ALL() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.YBULL_ALLColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YBULL_ALL' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.YBULL_ALLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property YBULL_GTSF() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.YBULL_GTSFColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YBULL_GTSF' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.YBULL_GTSFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property YBULL_SF() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.YBULL_SFColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YBULL_SF' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.YBULL_SFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MOOSE() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.MOOSEColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MOOSE' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.MOOSEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SubAreaSurveyed_SqMi() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.SubAreaSurveyed_SqMiColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubAreaSurveyed_SqMi' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.SubAreaSurveyed_SqMiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SubAreaAverageSearchEffort() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.SubAreaAverageSearchEffortColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubAreaAverageSearchEffort' in table 'GSPE_Results' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.SubAreaAverageSearchEffortColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MethodologyUsed() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.MethodologyUsedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MethodologyUsed' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.MethodologyUsedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ResultsSource() As String
            Get
                Return CType(Me(Me.tableGSPE_Results.ResultsSourceColumn),String)
            End Get
            Set
                Me(Me.tableGSPE_Results.ResultsSourceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Comments() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.CommentsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Comments' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.CommentsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RecordInsertedDate() As Date
            Get
                Return CType(Me(Me.tableGSPE_Results.RecordInsertedDateColumn),Date)
            End Get
            Set
                Me(Me.tableGSPE_Results.RecordInsertedDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RecordInsertedBy() As String
            Get
                Return CType(Me(Me.tableGSPE_Results.RecordInsertedByColumn),String)
            End Get
            Set
                Me(Me.tableGSPE_Results.RecordInsertedByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ValidatedDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.ValidatedDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ValidatedDate' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.ValidatedDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ValidatedBy() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.ValidatedByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ValidatedBy' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.ValidatedByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ResultsSourceLink() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Results.ResultsSourceLinkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResultsSourceLink' in table 'GSPE_Results' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Results.ResultsSourceLinkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ResultID() As String
            Get
                Return CType(Me(Me.tableGSPE_Results.ResultIDColumn),String)
            End Get
            Set
                Me(Me.tableGSPE_Results.ResultIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property GSPE_SurveysRow() As GSPE_SurveysRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_GSPE_Ratios_GSPE_Surveys")),GSPE_SurveysRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_GSPE_Ratios_GSPE_Surveys"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBullCowRatioNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.BullCowRatioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBullCowRatioNull()
            Me(Me.tableGSPE_Results.BullCowRatioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCalfCowRatioNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.CalfCowRatioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCalfCowRatioNull()
            Me(Me.tableGSPE_Results.CalfCowRatioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCalfAdultRatioNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.CalfAdultRatioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCalfAdultRatioNull()
            Me(Me.tableGSPE_Results.CalfAdultRatioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsADULTNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.ADULTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetADULTNull()
            Me(Me.tableGSPE_Results.ADULTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBULL_30_40Null() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.BULL_30_40Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBULL_30_40Null()
            Me(Me.tableGSPE_Results.BULL_30_40Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBULL_30_50Null() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.BULL_30_50Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBULL_30_50Null()
            Me(Me.tableGSPE_Results.BULL_30_50Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBULL_30_60Null() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.BULL_30_60Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBULL_30_60Null()
            Me(Me.tableGSPE_Results.BULL_30_60Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBULL_41_50Null() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.BULL_41_50Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBULL_41_50Null()
            Me(Me.tableGSPE_Results.BULL_41_50Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBULL_ALLNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.BULL_ALLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBULL_ALLNull()
            Me(Me.tableGSPE_Results.BULL_ALLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBULL_GT_50Null() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.BULL_GT_50Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBULL_GT_50Null()
            Me(Me.tableGSPE_Results.BULL_GT_50Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBULL_GT_60Null() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.BULL_GT_60Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBULL_GT_60Null()
            Me(Me.tableGSPE_Results.BULL_GT_60Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBULL_GTE_50Null() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.BULL_GTE_50Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBULL_GTE_50Null()
            Me(Me.tableGSPE_Results.BULL_GTE_50Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBULL_LT_30Null() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.BULL_LT_30Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBULL_LT_30Null()
            Me(Me.tableGSPE_Results.BULL_LT_30Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBULL_LT_50Null() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.BULL_LT_50Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBULL_LT_50Null()
            Me(Me.tableGSPE_Results.BULL_LT_50Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCALFNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.CALFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCALFNull()
            Me(Me.tableGSPE_Results.CALFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCOWNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.COWColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCOWNull()
            Me(Me.tableGSPE_Results.COWColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCOW_W_0Null() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.COW_W_0Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCOW_W_0Null()
            Me(Me.tableGSPE_Results.COW_W_0Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCOW_W_1Null() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.COW_W_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCOW_W_1Null()
            Me(Me.tableGSPE_Results.COW_W_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCOW_W_2Null() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.COW_W_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCOW_W_2Null()
            Me(Me.tableGSPE_Results.COW_W_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCOW_W_3Null() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.COW_W_3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCOW_W_3Null()
            Me(Me.tableGSPE_Results.COW_W_3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLG_BULLNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.LG_BULLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLG_BULLNull()
            Me(Me.tableGSPE_Results.LG_BULLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMED_BULLNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.MED_BULLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMED_BULLNull()
            Me(Me.tableGSPE_Results.MED_BULLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMED_L_BULLNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.MED_L_BULLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMED_L_BULLNull()
            Me(Me.tableGSPE_Results.MED_L_BULLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSM_BULLNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.SM_BULLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSM_BULLNull()
            Me(Me.tableGSPE_Results.SM_BULLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsUNKNOWNNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.UNKNOWNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetUNKNOWNNull()
            Me(Me.tableGSPE_Results.UNKNOWNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsYBULL_ALLNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.YBULL_ALLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetYBULL_ALLNull()
            Me(Me.tableGSPE_Results.YBULL_ALLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsYBULL_GTSFNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.YBULL_GTSFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetYBULL_GTSFNull()
            Me(Me.tableGSPE_Results.YBULL_GTSFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsYBULL_SFNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.YBULL_SFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetYBULL_SFNull()
            Me(Me.tableGSPE_Results.YBULL_SFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMOOSENull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.MOOSEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMOOSENull()
            Me(Me.tableGSPE_Results.MOOSEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSubAreaSurveyed_SqMiNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.SubAreaSurveyed_SqMiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSubAreaSurveyed_SqMiNull()
            Me(Me.tableGSPE_Results.SubAreaSurveyed_SqMiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSubAreaAverageSearchEffortNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.SubAreaAverageSearchEffortColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSubAreaAverageSearchEffortNull()
            Me(Me.tableGSPE_Results.SubAreaAverageSearchEffortColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMethodologyUsedNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.MethodologyUsedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMethodologyUsedNull()
            Me(Me.tableGSPE_Results.MethodologyUsedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCommentsNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.CommentsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCommentsNull()
            Me(Me.tableGSPE_Results.CommentsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsValidatedDateNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.ValidatedDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetValidatedDateNull()
            Me(Me.tableGSPE_Results.ValidatedDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsValidatedByNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.ValidatedByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetValidatedByNull()
            Me(Me.tableGSPE_Results.ValidatedByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsResultsSourceLinkNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Results.ResultsSourceLinkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetResultsSourceLinkNull()
            Me(Me.tableGSPE_Results.ResultsSourceLinkColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class GSPE_SurveysRow
        Inherits Global.System.Data.DataRow
        
        Private tableGSPE_Surveys As GSPE_SurveysDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGSPE_Surveys = CType(Me.Table,GSPE_SurveysDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SurveyName() As String
            Get
                Return CType(Me(Me.tableGSPE_Surveys.SurveyNameColumn),String)
            End Get
            Set
                Me(Me.tableGSPE_Surveys.SurveyNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Year() As Integer
            Get
                Return CType(Me(Me.tableGSPE_Surveys.YearColumn),Integer)
            End Get
            Set
                Me(Me.tableGSPE_Surveys.YearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Network() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Surveys.NetworkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Network' in table 'GSPE_Surveys' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Surveys.NetworkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Park() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Surveys.ParkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Park' in table 'GSPE_Surveys' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Surveys.ParkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Season() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Surveys.SeasonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Season' in table 'GSPE_Surveys' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Surveys.SeasonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property StartDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Surveys.StartDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StartDate' in table 'GSPE_Surveys' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Surveys.StartDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EndDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Surveys.EndDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EndDate' in table 'GSPE_Surveys' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Surveys.EndDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AreaSurveyed_mi() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Surveys.AreaSurveyed_miColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AreaSurveyed_mi' in table 'GSPE_Surveys' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Surveys.AreaSurveyed_miColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AverageSearchEffort() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Surveys.AverageSearchEffortColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AverageSearchEffort' in table 'GSPE_Surveys' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Surveys.AverageSearchEffortColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Methodology() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Surveys.MethodologyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Methodology' in table 'GSPE_Surveys' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Surveys.MethodologyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ProtocolVersion() As Double
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Surveys.ProtocolVersionColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProtocolVersion' in table 'GSPE_Surveys' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Surveys.ProtocolVersionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ProtocolReferenceCode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Surveys.ProtocolReferenceCodeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProtocolReferenceCode' in table 'GSPE_Surveys' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Surveys.ProtocolReferenceCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Personnel() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Surveys.PersonnelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Personnel' in table 'GSPE_Surveys' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Surveys.PersonnelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ReportReferenceCode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Surveys.ReportReferenceCodeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReportReferenceCode' in table 'GSPE_Surveys' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Surveys.ReportReferenceCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ReportLink() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Surveys.ReportLinkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReportLink' in table 'GSPE_Surveys' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Surveys.ReportLinkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DeliverablesDatasetReferenceCode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Surveys.DeliverablesDatasetReferenceCodeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DeliverablesDatasetReferenceCode' in table 'GSPE_Surveys' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Surveys.DeliverablesDatasetReferenceCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DataSource() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Surveys.DataSourceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DataSource' in table 'GSPE_Surveys' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Surveys.DataSourceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DataResourcesDirectory() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Surveys.DataResourcesDirectoryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DataResourcesDirectory' in table 'GSPE_Surveys' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Surveys.DataResourcesDirectoryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Abstract() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Surveys.AbstractColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Abstract' in table 'GSPE_Surveys' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Surveys.AbstractColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Summary() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Surveys.SummaryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Summary' in table 'GSPE_Surveys' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Surveys.SummaryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DatasetProcessingSteps() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Surveys.DatasetProcessingStepsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DatasetProcessingSteps' in table 'GSPE_Surveys' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Surveys.DatasetProcessingStepsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Comments() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Surveys.CommentsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Comments' in table 'GSPE_Surveys' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Surveys.CommentsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RecordInsertedDate() As Date
            Get
                Return CType(Me(Me.tableGSPE_Surveys.RecordInsertedDateColumn),Date)
            End Get
            Set
                Me(Me.tableGSPE_Surveys.RecordInsertedDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RecordInsertedBy() As String
            Get
                Return CType(Me(Me.tableGSPE_Surveys.RecordInsertedByColumn),String)
            End Get
            Set
                Me(Me.tableGSPE_Surveys.RecordInsertedByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ValidatedDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Surveys.ValidatedDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ValidatedDate' in table 'GSPE_Surveys' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Surveys.ValidatedDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ValidatedBy() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSPE_Surveys.ValidatedByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ValidatedBy' in table 'GSPE_Surveys' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSPE_Surveys.ValidatedByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNetworkNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Surveys.NetworkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNetworkNull()
            Me(Me.tableGSPE_Surveys.NetworkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsParkNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Surveys.ParkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetParkNull()
            Me(Me.tableGSPE_Surveys.ParkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSeasonNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Surveys.SeasonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSeasonNull()
            Me(Me.tableGSPE_Surveys.SeasonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsStartDateNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Surveys.StartDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetStartDateNull()
            Me(Me.tableGSPE_Surveys.StartDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEndDateNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Surveys.EndDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEndDateNull()
            Me(Me.tableGSPE_Surveys.EndDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAreaSurveyed_miNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Surveys.AreaSurveyed_miColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAreaSurveyed_miNull()
            Me(Me.tableGSPE_Surveys.AreaSurveyed_miColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAverageSearchEffortNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Surveys.AverageSearchEffortColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAverageSearchEffortNull()
            Me(Me.tableGSPE_Surveys.AverageSearchEffortColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMethodologyNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Surveys.MethodologyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMethodologyNull()
            Me(Me.tableGSPE_Surveys.MethodologyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsProtocolVersionNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Surveys.ProtocolVersionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetProtocolVersionNull()
            Me(Me.tableGSPE_Surveys.ProtocolVersionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsProtocolReferenceCodeNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Surveys.ProtocolReferenceCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetProtocolReferenceCodeNull()
            Me(Me.tableGSPE_Surveys.ProtocolReferenceCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPersonnelNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Surveys.PersonnelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPersonnelNull()
            Me(Me.tableGSPE_Surveys.PersonnelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsReportReferenceCodeNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Surveys.ReportReferenceCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetReportReferenceCodeNull()
            Me(Me.tableGSPE_Surveys.ReportReferenceCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsReportLinkNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Surveys.ReportLinkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetReportLinkNull()
            Me(Me.tableGSPE_Surveys.ReportLinkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDeliverablesDatasetReferenceCodeNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Surveys.DeliverablesDatasetReferenceCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDeliverablesDatasetReferenceCodeNull()
            Me(Me.tableGSPE_Surveys.DeliverablesDatasetReferenceCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDataSourceNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Surveys.DataSourceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDataSourceNull()
            Me(Me.tableGSPE_Surveys.DataSourceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDataResourcesDirectoryNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Surveys.DataResourcesDirectoryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDataResourcesDirectoryNull()
            Me(Me.tableGSPE_Surveys.DataResourcesDirectoryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAbstractNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Surveys.AbstractColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAbstractNull()
            Me(Me.tableGSPE_Surveys.AbstractColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSummaryNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Surveys.SummaryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSummaryNull()
            Me(Me.tableGSPE_Surveys.SummaryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDatasetProcessingStepsNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Surveys.DatasetProcessingStepsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDatasetProcessingStepsNull()
            Me(Me.tableGSPE_Surveys.DatasetProcessingStepsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCommentsNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Surveys.CommentsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCommentsNull()
            Me(Me.tableGSPE_Surveys.CommentsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsValidatedDateNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Surveys.ValidatedDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetValidatedDateNull()
            Me(Me.tableGSPE_Surveys.ValidatedDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsValidatedByNull() As Boolean
            Return Me.IsNull(Me.tableGSPE_Surveys.ValidatedByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetValidatedByNull()
            Me(Me.tableGSPE_Surveys.ValidatedByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function GetGSPE_ResultsRows() As GSPE_ResultsRow()
            If (Me.Table.ChildRelations("FK_GSPE_Ratios_GSPE_Surveys") Is Nothing) Then
                Return New GSPE_ResultsRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_GSPE_Ratios_GSPE_Surveys")),GSPE_ResultsRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function GetGSPERows() As GSPERow()
            If (Me.Table.ChildRelations("FK_GSPE_GSPE_Surveys") Is Nothing) Then
                Return New GSPERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_GSPE_GSPE_Surveys")),GSPERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function GetGSPE_DensityEstimatesRows() As GSPE_DensityEstimatesRow()
            If (Me.Table.ChildRelations("FK_GSPE_DensityEstimates_GSPE_Surveys") Is Nothing) Then
                Return New GSPE_DensityEstimatesRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_GSPE_DensityEstimates_GSPE_Surveys")),GSPE_DensityEstimatesRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function GetGSPE_PopulationEstimatesRows() As GSPE_PopulationEstimatesRow()
            If (Me.Table.ChildRelations("FK_GSPE_PopulationEstimates_GSPE_Surveys") Is Nothing) Then
                Return New GSPE_PopulationEstimatesRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_GSPE_PopulationEstimates_GSPE_Surveys")),GSPE_PopulationEstimatesRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class GSPERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As GSPERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As GSPERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As GSPERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class GSPE_DensityEstimatesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As GSPE_DensityEstimatesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As GSPE_DensityEstimatesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As GSPE_DensityEstimatesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class GSPE_PopulationEstimatesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As GSPE_PopulationEstimatesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As GSPE_PopulationEstimatesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As GSPE_PopulationEstimatesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class GSPE_ResultsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As GSPE_ResultsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As GSPE_ResultsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As GSPE_ResultsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class GSPE_SurveysRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As GSPE_SurveysRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As GSPE_SurveysRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As GSPE_SurveysRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace MooseDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class GSPETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "GSPE"
            tableMapping.ColumnMappings.Add("Park", "Park")
            tableMapping.ColumnMappings.Add("SurveyName", "SurveyName")
            tableMapping.ColumnMappings.Add("SurveyYear", "SurveyYear")
            tableMapping.ColumnMappings.Add("Season", "Season")
            tableMapping.ColumnMappings.Add("SubArea", "SubArea")
            tableMapping.ColumnMappings.Add("GMU", "GMU")
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("StartDate", "StartDate")
            tableMapping.ColumnMappings.Add("StopDate", "StopDate")
            tableMapping.ColumnMappings.Add("IntID", "IntID")
            tableMapping.ColumnMappings.Add("Rand", "Rand")
            tableMapping.ColumnMappings.Add("FiringOrder", "FiringOrder")
            tableMapping.ColumnMappings.Add("Selected", "Selected")
            tableMapping.ColumnMappings.Add("Counted", "Counted")
            tableMapping.ColumnMappings.Add("Exclude", "Exclude")
            tableMapping.ColumnMappings.Add("Strat", "Strat")
            tableMapping.ColumnMappings.Add("StratName", "StratName")
            tableMapping.ColumnMappings.Add("StratMoose", "StratMoose")
            tableMapping.ColumnMappings.Add("StratTracks", "StratTracks")
            tableMapping.ColumnMappings.Add("StratHab", "StratHab")
            tableMapping.ColumnMappings.Add("DateCounted", "DateCounted")
            tableMapping.ColumnMappings.Add("Perc_Not_Flown", "Perc_Not_Flown")
            tableMapping.ColumnMappings.Add("X_COORD", "X_COORD")
            tableMapping.ColumnMappings.Add("Y_COORD", "Y_COORD")
            tableMapping.ColumnMappings.Add("Area_SqMi", "Area_SqMi")
            tableMapping.ColumnMappings.Add("ADULT", "ADULT")
            tableMapping.ColumnMappings.Add("BULL_30_40", "BULL_30_40")
            tableMapping.ColumnMappings.Add("BULL_30_50", "BULL_30_50")
            tableMapping.ColumnMappings.Add("BULL_30_60", "BULL_30_60")
            tableMapping.ColumnMappings.Add("BULL_41_50", "BULL_41_50")
            tableMapping.ColumnMappings.Add("BULL_ALL", "BULL_ALL")
            tableMapping.ColumnMappings.Add("BULL_GT_50", "BULL_GT_50")
            tableMapping.ColumnMappings.Add("BULL_GT_60", "BULL_GT_60")
            tableMapping.ColumnMappings.Add("BULL_GTE_50", "BULL_GTE_50")
            tableMapping.ColumnMappings.Add("BULL_LT_30", "BULL_LT_30")
            tableMapping.ColumnMappings.Add("BULL_LT_50", "BULL_LT_50")
            tableMapping.ColumnMappings.Add("CALF", "CALF")
            tableMapping.ColumnMappings.Add("COW", "COW")
            tableMapping.ColumnMappings.Add("COW_W_0", "COW_W_0")
            tableMapping.ColumnMappings.Add("COW_W_1", "COW_W_1")
            tableMapping.ColumnMappings.Add("COW_W_2", "COW_W_2")
            tableMapping.ColumnMappings.Add("COW_W_3", "COW_W_3")
            tableMapping.ColumnMappings.Add("LG_BULL", "LG_BULL")
            tableMapping.ColumnMappings.Add("MED_BULL", "MED_BULL")
            tableMapping.ColumnMappings.Add("MED_L_BULL", "MED_L_BULL")
            tableMapping.ColumnMappings.Add("SM_BULL", "SM_BULL")
            tableMapping.ColumnMappings.Add("UNKNOWN", "UNKNOWN")
            tableMapping.ColumnMappings.Add("YBULL_ALL", "YBULL_ALL")
            tableMapping.ColumnMappings.Add("YBULL_GTSF", "YBULL_GTSF")
            tableMapping.ColumnMappings.Add("YBULL_SF", "YBULL_SF")
            tableMapping.ColumnMappings.Add("MOOSE", "MOOSE")
            tableMapping.ColumnMappings.Add("Pilot", "Pilot")
            tableMapping.ColumnMappings.Add("Observer", "Observer")
            tableMapping.ColumnMappings.Add("Personnel", "Personnel")
            tableMapping.ColumnMappings.Add("Density", "Density")
            tableMapping.ColumnMappings.Add("SCF_Plot", "SCF_Plot")
            tableMapping.ColumnMappings.Add("Std", "Std")
            tableMapping.ColumnMappings.Add("Int", "Int")
            tableMapping.ColumnMappings.Add("Comments", "Comments")
            tableMapping.ColumnMappings.Add("SourceFilename", "SourceFilename")
            tableMapping.ColumnMappings.Add("RecordInsertedDate", "RecordInsertedDate")
            tableMapping.ColumnMappings.Add("RecordInsertedBy", "RecordInsertedBy")
            tableMapping.ColumnMappings.Add("CertificationDate", "CertificationDate")
            tableMapping.ColumnMappings.Add("CertifiedBy", "CertifiedBy")
            tableMapping.ColumnMappings.Add("CertificationLevel", "CertificationLevel")
            tableMapping.ColumnMappings.Add("SurveyUnitSet", "SurveyUnitSet")
            tableMapping.ColumnMappings.Add("SearchMin", "SearchMin1")
            tableMapping.ColumnMappings.Add("BULL_ADULT", "BULL_ADULT")
            tableMapping.ColumnMappings.Add("CALF_LONE", "CALF_LONE")
            tableMapping.ColumnMappings.Add("SCF", "SCF")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM GSPE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE  (SurveyName = @Original_SurveyName) AND (SurveyYear = @O"& _ 
                "riginal_SurveyYear) AND (ID = @Original_ID) AND (CertificationLevel <> 'Certifie"& _ 
                "d')"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SurveyName", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "SurveyName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SurveyYear", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO GSPE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  (Park, SurveyName, SurveyYear, Season, SubAre"& _ 
                "a, GMU, ID, StartDate, StopDate, IntID, Rand, FiringOrder, Selected, Counted, Ex"& _ 
                "clude, Strat, StratName, StratMoose, StratTracks, StratHab, DateCounted, Perc_No"& _ 
                "t_Flown, X_COORD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  Y_COORD, Area_SqMi, ADULT, BULL_30_40, BUL"& _ 
                "L_30_50, BULL_30_60, BULL_41_50, BULL_ALL, BULL_GT_50, BULL_GT_60, BULL_GTE_50, "& _ 
                "BULL_LT_30, BULL_LT_50, CALF, COW, COW_W_0, COW_W_1, COW_W_2, COW_W_3, LG_BULL, "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  MED_BULL, MED_L_BULL, SM_BULL, UNKNOWN, YBULL_ALL, YBULL_GTS"& _ 
                "F, YBULL_SF, MOOSE, Pilot, Observer, Personnel, Density, SCF_Plot, Std, Int, Com"& _ 
                "ments, SourceFilename, SurveyUnitSet, SearchMin, BULL_ADULT, CALF_LONE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "            SCF)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES (@Park,@SurveyName,@SurveyYear,@Season,@SubArea,@GMU,@I"& _ 
                "D,@StartDate,@StopDate,@IntID,@Rand,@FiringOrder,@Selected,@Counted,@Exclude,@St"& _ 
                "rat,@StratName,@StratMoose,@StratTracks,@StratHab,@DateCounted,@Perc_Not_Flown,@"& _ 
                "X_COORD,@Y_COORD,@Area_SqMi,@ADULT,@BULL_30_40,@BULL_30_50,@BULL_30_60,@BULL_41_"& _ 
                "50,@BULL_ALL,@BULL_GT_50,@BULL_GT_60,@BULL_GTE_50,@BULL_LT_30,@BULL_LT_50,@CALF,"& _ 
                "@COW,@COW_W_0,@COW_W_1,@COW_W_2,@COW_W_3,@LG_BULL,@MED_BULL,@MED_L_BULL,@SM_BULL"& _ 
                ",@UNKNOWN,@YBULL_ALL,@YBULL_GTSF,@YBULL_SF,@MOOSE,@Pilot,@Observer,@Personnel,@D"& _ 
                "ensity,@SCF_Plot,@Std,@Int,@Comments,@SourceFilename,@SurveyUnitSet,@SearchMin,@"& _ 
                "BULL_ADULT,@CALF_LONE,@SCF); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Park, SurveyName, SurveyYear, Season, SubA"& _ 
                "rea, GMU, ID, StartDate, StopDate, IntID, Rand, FiringOrder, Selected, Counted, "& _ 
                "Exclude, Strat, StratName, StratMoose, StratTracks, StratHab, DateCounted, Perc_"& _ 
                "Not_Flown, X_COORD, Y_COORD, Area_SqMi, ADULT, BULL_30_40, BULL_30_50, BULL_30_6"& _ 
                "0, BULL_41_50, BULL_ALL, BULL_GT_50, BULL_GT_60, BULL_GTE_50, BULL_LT_30, BULL_L"& _ 
                "T_50, CALF, COW, COW_W_0, COW_W_1, COW_W_2, COW_W_3, LG_BULL, MED_BULL, MED_L_BU"& _ 
                "LL, SM_BULL, UNKNOWN, YBULL_ALL, YBULL_GTSF, YBULL_SF, MOOSE, Pilot, Observer, P"& _ 
                "ersonnel, Density, SCF_Plot, Std, Int, Comments, SourceFilename, RecordInsertedD"& _ 
                "ate, RecordInsertedBy, CertificationDate, CertifiedBy, CertificationLevel, Surve"& _ 
                "yUnitSet, SearchMin, BULL_ADULT, CALF_LONE, SCF FROM GSPE WHERE (ID = @ID) AND ("& _ 
                "SurveyName = @SurveyName) AND (SurveyYear = @SurveyYear)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Park", Global.System.Data.SqlDbType.VarChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Park", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SurveyName", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "SurveyName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SurveyYear", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Season", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "Season", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubArea", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SubArea", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GMU", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "GMU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StartDate", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "StartDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StopDate", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "StopDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IntID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "IntID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rand", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Rand", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FiringOrder", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FiringOrder", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Selected", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "Selected", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Counted", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "Counted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Exclude", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "Exclude", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Strat", Global.System.Data.SqlDbType.VarChar, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "Strat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StratName", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "StratName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StratMoose", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "StratMoose", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StratTracks", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "StratTracks", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StratHab", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "StratHab", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateCounted", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "DateCounted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Perc_Not_Flown", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Perc_Not_Flown", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@X_COORD", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "X_COORD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Y_COORD", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Y_COORD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area_SqMi", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Area_SqMi", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADULT", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ADULT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_30_40", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_30_40", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_30_50", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_30_50", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_30_60", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_30_60", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_41_50", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_41_50", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_ALL", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_ALL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_GT_50", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_GT_50", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_GT_60", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_GT_60", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_GTE_50", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_GTE_50", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_LT_30", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_LT_30", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_LT_50", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_LT_50", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CALF", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CALF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COW", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "COW", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COW_W_0", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "COW_W_0", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COW_W_1", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "COW_W_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COW_W_2", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "COW_W_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COW_W_3", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "COW_W_3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LG_BULL", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "LG_BULL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MED_BULL", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MED_BULL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MED_L_BULL", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MED_L_BULL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SM_BULL", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SM_BULL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UNKNOWN", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "UNKNOWN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YBULL_ALL", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "YBULL_ALL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YBULL_GTSF", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "YBULL_GTSF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YBULL_SF", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "YBULL_SF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MOOSE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MOOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pilot", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Pilot", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Observer", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Observer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Personnel", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "Personnel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Density", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCF_Plot", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SCF_Plot", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Std", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Std", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Int", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Int", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Comments", Global.System.Data.SqlDbType.VarChar, 255, Global.System.Data.ParameterDirection.Input, 0, 0, "Comments", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SourceFilename", Global.System.Data.SqlDbType.VarChar, 255, Global.System.Data.ParameterDirection.Input, 0, 0, "SourceFilename", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SurveyUnitSet", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "SurveyUnitSet", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SearchMin", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "SearchMin", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_ADULT", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_ADULT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CALF_LONE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CALF_LONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCF", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "SCF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE GSPE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET          Park = @Park, Season = @Season, SubArea = @SubArea, GMU"& _ 
                " = @GMU, StartDate = @StartDate, StopDate = @StopDate, IntID = @IntID, Rand = @R"& _ 
                "and, FiringOrder = @FiringOrder, Selected = @Selected, Counted = @Counted, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "               Exclude = @Exclude, Strat = @Strat, StratName = @StratName, Strat"& _ 
                "Moose = @StratMoose, StratTracks = @StratTracks, StratHab = @StratHab, DateCount"& _ 
                "ed = @DateCounted, Perc_Not_Flown = @Perc_Not_Flown, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  X_COORD"& _ 
                " = @X_COORD, Y_COORD = @Y_COORD, Area_SqMi = @Area_SqMi, ADULT = @ADULT, BULL_30"& _ 
                "_40 = @BULL_30_40, BULL_30_50 = @BULL_30_50, BULL_30_60 = @BULL_30_60, BULL_41_5"& _ 
                "0 = @BULL_41_50, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  BULL_ALL = @BULL_ALL, BULL_GT_50 = @BULL_GT"& _ 
                "_50, BULL_GT_60 = @BULL_GT_60, BULL_GTE_50 = @BULL_GTE_50, BULL_LT_30 = @BULL_LT"& _ 
                "_30, BULL_LT_50 = @BULL_LT_50, CALF = @CALF, COW = @COW, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  COW"& _ 
                "_W_0 = @COW_W_0, COW_W_1 = @COW_W_1, COW_W_2 = @COW_W_2, COW_W_3 = @COW_W_3, LG_"& _ 
                "BULL = @LG_BULL, MED_BULL = @MED_BULL, MED_L_BULL = @MED_L_BULL, SM_BULL = @SM_B"& _ 
                "ULL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  UNKNOWN = @UNKNOWN, YBULL_ALL = @YBULL_ALL, YBULL_GTSF "& _ 
                "= @YBULL_GTSF, YBULL_SF = @YBULL_SF, MOOSE = @MOOSE, Pilot = @Pilot, Observer = "& _ 
                "@Observer, Personnel = @Personnel, Density = @Density, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  SCF_P"& _ 
                "lot = @SCF_Plot, Std = @Std, Int = @Int, Comments = @Comments, SourceFilename = "& _ 
                "@SourceFilename, SurveyUnitSet = @SurveyUnitSet, SearchMin = @SearchMin, BULL_AD"& _ 
                "ULT = @BULL_ADULT, CALF_LONE = @CALF_LONE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  SCF = @SCF"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE"& _ 
                "  (SurveyName = @Original_SurveyName) AND (SurveyYear = @Original_SurveyYear) AN"& _ 
                "D (ID = @Original_ID) AND (CertificationLevel <> 'Certified'); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Park, Su"& _ 
                "rveyName, SurveyYear, Season, SubArea, GMU, ID, StartDate, StopDate, IntID, Rand"& _ 
                ", FiringOrder, Selected, Counted, Exclude, Strat, StratName, StratMoose, StratTr"& _ 
                "acks, StratHab, DateCounted, Perc_Not_Flown, X_COORD, Y_COORD, Area_SqMi, ADULT,"& _ 
                " BULL_30_40, BULL_30_50, BULL_30_60, BULL_41_50, BULL_ALL, BULL_GT_50, BULL_GT_6"& _ 
                "0, BULL_GTE_50, BULL_LT_30, BULL_LT_50, CALF, COW, COW_W_0, COW_W_1, COW_W_2, CO"& _ 
                "W_W_3, LG_BULL, MED_BULL, MED_L_BULL, SM_BULL, UNKNOWN, YBULL_ALL, YBULL_GTSF, Y"& _ 
                "BULL_SF, MOOSE, Pilot, Observer, Personnel, Density, SCF_Plot, Std, Int, Comment"& _ 
                "s, SourceFilename, RecordInsertedDate, RecordInsertedBy, CertificationDate, Cert"& _ 
                "ifiedBy, CertificationLevel, SurveyUnitSet, SearchMin, BULL_ADULT, CALF_LONE, SC"& _ 
                "F FROM GSPE WHERE (ID = @ID) AND (SurveyName = @SurveyName) AND (SurveyYear = @S"& _ 
                "urveyYear)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Park", Global.System.Data.SqlDbType.VarChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Park", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Season", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "Season", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubArea", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SubArea", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GMU", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "GMU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StartDate", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "StartDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StopDate", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "StopDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IntID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "IntID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rand", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Rand", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FiringOrder", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "FiringOrder", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Selected", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "Selected", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Counted", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "Counted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Exclude", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "Exclude", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Strat", Global.System.Data.SqlDbType.VarChar, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "Strat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StratName", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "StratName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StratMoose", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "StratMoose", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StratTracks", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "StratTracks", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StratHab", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "StratHab", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateCounted", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "DateCounted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Perc_Not_Flown", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Perc_Not_Flown", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@X_COORD", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "X_COORD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Y_COORD", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Y_COORD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area_SqMi", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Area_SqMi", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADULT", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ADULT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_30_40", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_30_40", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_30_50", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_30_50", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_30_60", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_30_60", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_41_50", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_41_50", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_ALL", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_ALL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_GT_50", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_GT_50", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_GT_60", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_GT_60", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_GTE_50", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_GTE_50", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_LT_30", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_LT_30", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_LT_50", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_LT_50", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CALF", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CALF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COW", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "COW", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COW_W_0", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "COW_W_0", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COW_W_1", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "COW_W_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COW_W_2", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "COW_W_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COW_W_3", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "COW_W_3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LG_BULL", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "LG_BULL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MED_BULL", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MED_BULL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MED_L_BULL", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MED_L_BULL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SM_BULL", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SM_BULL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UNKNOWN", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "UNKNOWN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YBULL_ALL", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "YBULL_ALL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YBULL_GTSF", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "YBULL_GTSF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YBULL_SF", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "YBULL_SF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MOOSE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MOOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pilot", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Pilot", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Observer", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Observer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Personnel", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "Personnel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Density", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCF_Plot", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SCF_Plot", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Std", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Std", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Int", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Int", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Comments", Global.System.Data.SqlDbType.VarChar, 255, Global.System.Data.ParameterDirection.Input, 0, 0, "Comments", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SourceFilename", Global.System.Data.SqlDbType.VarChar, 255, Global.System.Data.ParameterDirection.Input, 0, 0, "SourceFilename", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SurveyUnitSet", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "SurveyUnitSet", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SearchMin", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "SearchMin", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_ADULT", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_ADULT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CALF_LONE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CALF_LONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCF", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "SCF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SurveyName", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "SurveyName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SurveyYear", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SurveyName", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "SurveyName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SurveyYear", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Moose3.My.MySettings.Default.MooseConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Park, SurveyName, SurveyYear, Season, SubArea, GMU, ID, StartDate, StopDat"& _ 
                "e, IntID, Rand, FiringOrder, Selected, Counted, Exclude, Strat, StratName, Strat"& _ 
                "Moose, StratTracks, StratHab, DateCounted, Perc_Not_Flown, X_COORD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"          "& _ 
                "        Y_COORD, Area_SqMi, ADULT, BULL_30_40, BULL_30_50, BULL_30_60, BULL_41_5"& _ 
                "0, BULL_ALL, BULL_GT_50, BULL_GT_60, BULL_GTE_50, BULL_LT_30, BULL_LT_50, CALF, "& _ 
                "COW, COW_W_0, COW_W_1, COW_W_2, COW_W_3, LG_BULL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  MED_BULL, "& _ 
                "MED_L_BULL, SM_BULL, UNKNOWN, YBULL_ALL, YBULL_GTSF, YBULL_SF, MOOSE, Pilot, Obs"& _ 
                "erver, Personnel, Density, SCF_Plot, Std, Int, Comments, SourceFilename, RecordI"& _ 
                "nsertedDate, RecordInsertedBy, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  CertificationDate, CertifiedB"& _ 
                "y, CertificationLevel, SurveyUnitSet, SearchMin, BULL_ADULT, CALF_LONE, SCF"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FRO"& _ 
                "M     GSPE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As MooseDataSet.GSPEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As MooseDataSet.GSPEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As MooseDataSet.GSPEDataTable = New MooseDataSet.GSPEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As MooseDataSet.GSPEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As MooseDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "GSPE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_SurveyName As String, ByVal Original_SurveyYear As Integer, ByVal Original_ID As String) As Integer
            If (Original_SurveyName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SurveyName")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_SurveyName,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_SurveyYear,Integer)
            If (Original_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ID")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ID,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Park As String,  _
                    ByVal SurveyName As String,  _
                    ByVal SurveyYear As Integer,  _
                    ByVal Season As String,  _
                    ByVal SubArea As String,  _
                    ByVal GMU As String,  _
                    ByVal ID As String,  _
                    ByVal StartDate As Global.System.Nullable(Of Date),  _
                    ByVal StopDate As Global.System.Nullable(Of Date),  _
                    ByVal IntID As Global.System.Nullable(Of Integer),  _
                    ByVal Rand As Global.System.Nullable(Of Double),  _
                    ByVal FiringOrder As Global.System.Nullable(Of Integer),  _
                    ByVal Selected As Global.System.Nullable(Of Boolean),  _
                    ByVal Counted As Global.System.Nullable(Of Boolean),  _
                    ByVal Exclude As Global.System.Nullable(Of Boolean),  _
                    ByVal Strat As String,  _
                    ByVal StratName As String,  _
                    ByVal StratMoose As Global.System.Nullable(Of Integer),  _
                    ByVal StratTracks As Global.System.Nullable(Of Integer),  _
                    ByVal StratHab As String,  _
                    ByVal DateCounted As String,  _
                    ByVal Perc_Not_Flown As Global.System.Nullable(Of Integer),  _
                    ByVal X_COORD As Global.System.Nullable(Of Double),  _
                    ByVal Y_COORD As Global.System.Nullable(Of Double),  _
                    ByVal Area_SqMi As Global.System.Nullable(Of Double),  _
                    ByVal ADULT As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_30_40 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_30_50 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_30_60 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_41_50 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_ALL As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_GT_50 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_GT_60 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_GTE_50 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_LT_30 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_LT_50 As Global.System.Nullable(Of Integer),  _
                    ByVal CALF As Global.System.Nullable(Of Integer),  _
                    ByVal COW As Global.System.Nullable(Of Integer),  _
                    ByVal COW_W_0 As Global.System.Nullable(Of Integer),  _
                    ByVal COW_W_1 As Global.System.Nullable(Of Integer),  _
                    ByVal COW_W_2 As Global.System.Nullable(Of Integer),  _
                    ByVal COW_W_3 As Global.System.Nullable(Of Integer),  _
                    ByVal LG_BULL As Global.System.Nullable(Of Integer),  _
                    ByVal MED_BULL As Global.System.Nullable(Of Integer),  _
                    ByVal MED_L_BULL As Global.System.Nullable(Of Integer),  _
                    ByVal SM_BULL As Global.System.Nullable(Of Integer),  _
                    ByVal UNKNOWN As Global.System.Nullable(Of Integer),  _
                    ByVal YBULL_ALL As Global.System.Nullable(Of Integer),  _
                    ByVal YBULL_GTSF As Global.System.Nullable(Of Integer),  _
                    ByVal YBULL_SF As Global.System.Nullable(Of Integer),  _
                    ByVal MOOSE As Global.System.Nullable(Of Integer),  _
                    ByVal Pilot As String,  _
                    ByVal Observer As String,  _
                    ByVal Personnel As String,  _
                    ByVal Density As Global.System.Nullable(Of Double),  _
                    ByVal SCF_Plot As Global.System.Nullable(Of Boolean),  _
                    ByVal Std As Global.System.Nullable(Of Integer),  _
                    ByVal Int As Global.System.Nullable(Of Integer),  _
                    ByVal Comments As String,  _
                    ByVal SourceFilename As String,  _
                    ByVal SurveyUnitSet As String,  _
                    ByVal SearchMin As Global.System.Nullable(Of Double),  _
                    ByVal BULL_ADULT As Global.System.Nullable(Of Integer),  _
                    ByVal CALF_LONE As Global.System.Nullable(Of Integer),  _
                    ByVal SCF As Global.System.Nullable(Of Double)) As Integer
            If (Park Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Park")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Park,String)
            End If
            If (SurveyName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SurveyName")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(SurveyName,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(SurveyYear,Integer)
            If (Season Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Season,String)
            End If
            If (SubArea Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(SubArea,String)
            End If
            If (GMU Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(GMU,String)
            End If
            If (ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ID")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(ID,String)
            End If
            If (StartDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(StartDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (StopDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(StopDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (IntID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(IntID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Rand.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Rand.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (FiringOrder.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(FiringOrder.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Selected.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Selected.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Counted.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(Counted.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Exclude.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(Exclude.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Strat Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(Strat,String)
            End If
            If (StratName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(StratName,String)
            End If
            If (StratMoose.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(StratMoose.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (StratTracks.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(StratTracks.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (StratHab Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(StratHab,String)
            End If
            If (DateCounted Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(DateCounted,String)
            End If
            If (Perc_Not_Flown.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(Perc_Not_Flown.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (X_COORD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(X_COORD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Y_COORD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(Y_COORD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Area_SqMi.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(Area_SqMi.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (ADULT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(ADULT.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (BULL_30_40.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(BULL_30_40.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (BULL_30_50.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(BULL_30_50.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (BULL_30_60.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(BULL_30_60.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (BULL_41_50.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(BULL_41_50.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (BULL_ALL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(BULL_ALL.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (BULL_GT_50.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(BULL_GT_50.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (BULL_GT_60.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(BULL_GT_60.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (BULL_GTE_50.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(BULL_GTE_50.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (BULL_LT_30.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(BULL_LT_30.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (BULL_LT_50.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(BULL_LT_50.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (CALF.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(CALF.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (COW.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(COW.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (COW_W_0.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(COW_W_0.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (COW_W_1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(COW_W_1.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (COW_W_2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(COW_W_2.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (COW_W_3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(COW_W_3.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (LG_BULL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(LG_BULL.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (MED_BULL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(MED_BULL.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (MED_L_BULL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(MED_L_BULL.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (SM_BULL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(SM_BULL.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (UNKNOWN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(UNKNOWN.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (YBULL_ALL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(YBULL_ALL.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (YBULL_GTSF.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(YBULL_GTSF.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (YBULL_SF.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(YBULL_SF.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (MOOSE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(MOOSE.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Pilot Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(Pilot,String)
            End If
            If (Observer Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(Observer,String)
            End If
            If (Personnel Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(Personnel,String)
            End If
            If (Density.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(Density.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (SCF_Plot.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(SCF_Plot.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Std.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(Std.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Int.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(Int.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Comments Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(Comments,String)
            End If
            If (SourceFilename Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(SourceFilename,String)
            End If
            If (SurveyUnitSet Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(SurveyUnitSet,String)
            End If
            If (SearchMin.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(SearchMin.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (BULL_ADULT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(BULL_ADULT.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (CALF_LONE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(CALF_LONE.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (SCF.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(SCF.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Park As String,  _
                    ByVal Season As String,  _
                    ByVal SubArea As String,  _
                    ByVal GMU As String,  _
                    ByVal StartDate As Global.System.Nullable(Of Date),  _
                    ByVal StopDate As Global.System.Nullable(Of Date),  _
                    ByVal IntID As Global.System.Nullable(Of Integer),  _
                    ByVal Rand As Global.System.Nullable(Of Double),  _
                    ByVal FiringOrder As Global.System.Nullable(Of Integer),  _
                    ByVal Selected As Global.System.Nullable(Of Boolean),  _
                    ByVal Counted As Global.System.Nullable(Of Boolean),  _
                    ByVal Exclude As Global.System.Nullable(Of Boolean),  _
                    ByVal Strat As String,  _
                    ByVal StratName As String,  _
                    ByVal StratMoose As Global.System.Nullable(Of Integer),  _
                    ByVal StratTracks As Global.System.Nullable(Of Integer),  _
                    ByVal StratHab As String,  _
                    ByVal DateCounted As String,  _
                    ByVal Perc_Not_Flown As Global.System.Nullable(Of Integer),  _
                    ByVal X_COORD As Global.System.Nullable(Of Double),  _
                    ByVal Y_COORD As Global.System.Nullable(Of Double),  _
                    ByVal Area_SqMi As Global.System.Nullable(Of Double),  _
                    ByVal ADULT As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_30_40 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_30_50 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_30_60 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_41_50 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_ALL As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_GT_50 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_GT_60 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_GTE_50 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_LT_30 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_LT_50 As Global.System.Nullable(Of Integer),  _
                    ByVal CALF As Global.System.Nullable(Of Integer),  _
                    ByVal COW As Global.System.Nullable(Of Integer),  _
                    ByVal COW_W_0 As Global.System.Nullable(Of Integer),  _
                    ByVal COW_W_1 As Global.System.Nullable(Of Integer),  _
                    ByVal COW_W_2 As Global.System.Nullable(Of Integer),  _
                    ByVal COW_W_3 As Global.System.Nullable(Of Integer),  _
                    ByVal LG_BULL As Global.System.Nullable(Of Integer),  _
                    ByVal MED_BULL As Global.System.Nullable(Of Integer),  _
                    ByVal MED_L_BULL As Global.System.Nullable(Of Integer),  _
                    ByVal SM_BULL As Global.System.Nullable(Of Integer),  _
                    ByVal UNKNOWN As Global.System.Nullable(Of Integer),  _
                    ByVal YBULL_ALL As Global.System.Nullable(Of Integer),  _
                    ByVal YBULL_GTSF As Global.System.Nullable(Of Integer),  _
                    ByVal YBULL_SF As Global.System.Nullable(Of Integer),  _
                    ByVal MOOSE As Global.System.Nullable(Of Integer),  _
                    ByVal Pilot As String,  _
                    ByVal Observer As String,  _
                    ByVal Personnel As String,  _
                    ByVal Density As Global.System.Nullable(Of Double),  _
                    ByVal SCF_Plot As Global.System.Nullable(Of Boolean),  _
                    ByVal Std As Global.System.Nullable(Of Integer),  _
                    ByVal Int As Global.System.Nullable(Of Integer),  _
                    ByVal Comments As String,  _
                    ByVal SourceFilename As String,  _
                    ByVal SurveyUnitSet As String,  _
                    ByVal SearchMin As Global.System.Nullable(Of Double),  _
                    ByVal BULL_ADULT As Global.System.Nullable(Of Integer),  _
                    ByVal CALF_LONE As Global.System.Nullable(Of Integer),  _
                    ByVal SCF As Global.System.Nullable(Of Double),  _
                    ByVal Original_SurveyName As String,  _
                    ByVal Original_SurveyYear As Integer,  _
                    ByVal Original_ID As String,  _
                    ByVal ID As String,  _
                    ByVal SurveyName As String,  _
                    ByVal SurveyYear As Integer) As Integer
            If (Park Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Park")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Park,String)
            End If
            If (Season Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Season,String)
            End If
            If (SubArea Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(SubArea,String)
            End If
            If (GMU Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(GMU,String)
            End If
            If (StartDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(StartDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (StopDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(StopDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (IntID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(IntID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Rand.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Rand.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (FiringOrder.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(FiringOrder.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Selected.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Selected.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Counted.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Counted.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Exclude.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Exclude.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Strat Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Strat,String)
            End If
            If (StratName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(StratName,String)
            End If
            If (StratMoose.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(StratMoose.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (StratTracks.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(StratTracks.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (StratHab Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(StratHab,String)
            End If
            If (DateCounted Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(DateCounted,String)
            End If
            If (Perc_Not_Flown.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Perc_Not_Flown.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (X_COORD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(X_COORD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Y_COORD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Y_COORD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Area_SqMi.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Area_SqMi.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (ADULT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(ADULT.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (BULL_30_40.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(BULL_30_40.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (BULL_30_50.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(BULL_30_50.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (BULL_30_60.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(BULL_30_60.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (BULL_41_50.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(BULL_41_50.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (BULL_ALL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(BULL_ALL.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (BULL_GT_50.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(BULL_GT_50.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (BULL_GT_60.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(BULL_GT_60.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (BULL_GTE_50.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(BULL_GTE_50.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (BULL_LT_30.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(BULL_LT_30.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (BULL_LT_50.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(BULL_LT_50.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (CALF.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(CALF.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (COW.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(COW.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (COW_W_0.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(COW_W_0.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (COW_W_1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(COW_W_1.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (COW_W_2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(COW_W_2.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (COW_W_3.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(COW_W_3.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (LG_BULL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(LG_BULL.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (MED_BULL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(MED_BULL.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (MED_L_BULL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(MED_L_BULL.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (SM_BULL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(SM_BULL.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (UNKNOWN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(UNKNOWN.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (YBULL_ALL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(YBULL_ALL.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (YBULL_GTSF.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(YBULL_GTSF.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (YBULL_SF.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(YBULL_SF.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (MOOSE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(MOOSE.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Pilot Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Pilot,String)
            End If
            If (Observer Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Observer,String)
            End If
            If (Personnel Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Personnel,String)
            End If
            If (Density.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Density.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (SCF_Plot.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(SCF_Plot.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Std.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Std.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (Int.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Int.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Comments Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Comments,String)
            End If
            If (SourceFilename Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(SourceFilename,String)
            End If
            If (SurveyUnitSet Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(SurveyUnitSet,String)
            End If
            If (SearchMin.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(SearchMin.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (BULL_ADULT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(BULL_ADULT.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (CALF_LONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(CALF_LONE.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (SCF.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(SCF.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_SurveyName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SurveyName")
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_SurveyName,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_SurveyYear,Integer)
            If (Original_ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ID")
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_ID,String)
            End If
            If (ID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ID")
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(ID,String)
            End If
            If (SurveyName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SurveyName")
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(SurveyName,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(67).Value = CType(SurveyYear,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class GSPE_DensityEstimatesTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "GSPE_DensityEstimates"
            tableMapping.ColumnMappings.Add("SurveyName", "SurveyName")
            tableMapping.ColumnMappings.Add("ParkSubArea", "ParkSubArea")
            tableMapping.ColumnMappings.Add("Stratum", "Stratum")
            tableMapping.ColumnMappings.Add("Density_Estimate", "Density_Estimate")
            tableMapping.ColumnMappings.Add("Density_AreaSurveyed_SqMi", "Density_AreaSurveyed_SqMi")
            tableMapping.ColumnMappings.Add("Density_AverageSearchEffort", "Density_AverageSearchEffort")
            tableMapping.ColumnMappings.Add("DensityEstimateMethodology", "DensityEstimateMethodology")
            tableMapping.ColumnMappings.Add("DensityEstimateSource", "DensityEstimateSource")
            tableMapping.ColumnMappings.Add("ReportDate", "ReportDate")
            tableMapping.ColumnMappings.Add("Comments", "Comments")
            tableMapping.ColumnMappings.Add("RecordInsertedDate", "RecordInsertedDate")
            tableMapping.ColumnMappings.Add("RecordInsertedBy", "RecordInsertedBy")
            tableMapping.ColumnMappings.Add("ValidatedDate", "ValidatedDate")
            tableMapping.ColumnMappings.Add("ValidatedBy", "ValidatedBy")
            tableMapping.ColumnMappings.Add("Analysis_Column", "Analysis_Column")
            tableMapping.ColumnMappings.Add("DensityEstimateSourceLink", "DensityEstimateSourceLink")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM GSPE_DensityEstimates"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (SurveyName = @Original_SurveyNam"& _ 
                "e) AND (ParkSubArea = @Original_ParkSubArea) AND (Stratum = @Original_Stratum) A"& _ 
                "ND (Analysis_Column = @Original_Analysis_Column)"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SurveyName", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "SurveyName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ParkSubArea", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ParkSubArea", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stratum", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Stratum", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Analysis_Column", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, "Analysis_Column", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [GSPE_DensityEstimates] ([SurveyName], [ParkSubArea], [Stratum], [Ana"& _ 
                "lysis_Column], [Density_Estimate], [Density_AreaSurveyed_SqMi], [Density_Average"& _ 
                "SearchEffort], [DensityEstimateMethodology], [DensityEstimateSource], [ReportDat"& _ 
                "e], [Comments], [RecordInsertedDate], [RecordInsertedBy], [ValidatedDate], [Vali"& _ 
                "datedBy], [DensityEstimateSourceLink]) VALUES (@SurveyName, @ParkSubArea, @Strat"& _ 
                "um, @Analysis_Column, @Density_Estimate, @Density_AreaSurveyed_SqMi, @Density_Av"& _ 
                "erageSearchEffort, @DensityEstimateMethodology, @DensityEstimateSource, @ReportD"& _ 
                "ate, @Comments, @RecordInsertedDate, @RecordInsertedBy, @ValidatedDate, @Validat"& _ 
                "edBy, @DensityEstimateSourceLink);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SurveyName, ParkSubArea, Stratum, Ana"& _ 
                "lysis_Column, Density_Estimate, Density_AreaSurveyed_SqMi, Density_AverageSearch"& _ 
                "Effort, DensityEstimateMethodology, DensityEstimateSource, ReportDate, Comments,"& _ 
                " RecordInsertedDate, RecordInsertedBy, ValidatedDate, ValidatedBy, DensityEstima"& _ 
                "teSourceLink FROM GSPE_DensityEstimates WHERE (Analysis_Column = @Analysis_Colum"& _ 
                "n) AND (ParkSubArea = @ParkSubArea) AND (Stratum = @Stratum) AND (SurveyName = @"& _ 
                "SurveyName)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SurveyName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SurveyName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ParkSubArea", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ParkSubArea", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stratum", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Stratum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Analysis_Column", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Analysis_Column", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density_Estimate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density_Estimate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density_AreaSurveyed_SqMi", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density_AreaSurveyed_SqMi", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density_AverageSearchEffort", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density_AverageSearchEffort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DensityEstimateMethodology", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DensityEstimateMethodology", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DensityEstimateSource", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DensityEstimateSource", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReportDate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReportDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Comments", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Comments", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RecordInsertedDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RecordInsertedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RecordInsertedBy", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RecordInsertedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ValidatedDate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ValidatedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ValidatedBy", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ValidatedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DensityEstimateSourceLink", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DensityEstimateSourceLink", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE       GSPE_DensityEstimates"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                SurveyName = @SurveyName, "& _ 
                "ParkSubArea = @ParkSubArea, Stratum = @Stratum, Analysis_Column = @Analysis_Colu"& _ 
                "mn, Density_Estimate = @Density_Estimate, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Density_Are"& _ 
                "aSurveyed_SqMi = @Density_AreaSurveyed_SqMi, Density_AverageSearchEffort = @Dens"& _ 
                "ity_AverageSearchEffort, DensityEstimateMethodology = @DensityEstimateMethodolog"& _ 
                "y, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         DensityEstimateSource = @DensityEstimateSource, Re"& _ 
                "portDate = @ReportDate, Comments = @Comments, RecordInsertedDate = @RecordInsert"& _ 
                "edDate, RecordInsertedBy = @RecordInsertedBy, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Validat"& _ 
                "edDate = @ValidatedDate, ValidatedBy = @ValidatedBy, DensityEstimateSourceLink ="& _ 
                " @DensityEstimateSourceLink"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (SurveyName = @Original_SurveyName) AN"& _ 
                "D (ParkSubArea = @Original_ParkSubArea) AND (Stratum = @Original_Stratum) AND (A"& _ 
                "nalysis_Column = @Original_Analysis_Column); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SurveyName, ParkSubArea, S"& _ 
                "tratum, Analysis_Column, Density_Estimate, Density_AreaSurveyed_SqMi, Density_Av"& _ 
                "erageSearchEffort, DensityEstimateMethodology, DensityEstimateSource, ReportDate"& _ 
                ", Comments, RecordInsertedDate, RecordInsertedBy, ValidatedDate, ValidatedBy, De"& _ 
                "nsityEstimateSourceLink FROM GSPE_DensityEstimates WHERE (Analysis_Column = @Ana"& _ 
                "lysis_Column) AND (ParkSubArea = @ParkSubArea) AND (Stratum = @Stratum) AND (Sur"& _ 
                "veyName = @SurveyName)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SurveyName", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "SurveyName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ParkSubArea", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ParkSubArea", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stratum", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Stratum", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Analysis_Column", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, "Analysis_Column", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density_Estimate", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Density_Estimate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density_AreaSurveyed_SqMi", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Density_AreaSurveyed_SqMi", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density_AverageSearchEffort", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Density_AverageSearchEffort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DensityEstimateMethodology", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DensityEstimateMethodology", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DensityEstimateSource", Global.System.Data.SqlDbType.VarChar, 1000, Global.System.Data.ParameterDirection.Input, 0, 0, "DensityEstimateSource", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReportDate", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ReportDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Comments", Global.System.Data.SqlDbType.VarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "Comments", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RecordInsertedDate", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "RecordInsertedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RecordInsertedBy", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "RecordInsertedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ValidatedDate", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ValidatedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ValidatedBy", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ValidatedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DensityEstimateSourceLink", Global.System.Data.SqlDbType.VarChar, 4000, Global.System.Data.ParameterDirection.Input, 0, 0, "DensityEstimateSourceLink", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SurveyName", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "SurveyName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ParkSubArea", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ParkSubArea", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Stratum", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Stratum", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Analysis_Column", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, "Analysis_Column", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Moose3.My.MySettings.Default.MooseConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SurveyName, ParkSubArea, Stratum, Analysis_Column, Density_Estimate"& _ 
                ", Density_AreaSurveyed_SqMi, Density_AverageSearchEffort, DensityEstimateMethodo"& _ 
                "logy, DensityEstimateSource, ReportDate, Comments, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Re"& _ 
                "cordInsertedDate, RecordInsertedBy, ValidatedDate, ValidatedBy, DensityEstimateS"& _ 
                "ourceLink"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            GSPE_DensityEstimates"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As MooseDataSet.GSPE_DensityEstimatesDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As MooseDataSet.GSPE_DensityEstimatesDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As MooseDataSet.GSPE_DensityEstimatesDataTable = New MooseDataSet.GSPE_DensityEstimatesDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As MooseDataSet.GSPE_DensityEstimatesDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As MooseDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "GSPE_DensityEstimates")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_SurveyName As String, ByVal Original_ParkSubArea As String, ByVal Original_Stratum As String, ByVal Original_Analysis_Column As String) As Integer
            If (Original_SurveyName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SurveyName")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_SurveyName,String)
            End If
            If (Original_ParkSubArea Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ParkSubArea")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ParkSubArea,String)
            End If
            If (Original_Stratum Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Stratum")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Stratum,String)
            End If
            If (Original_Analysis_Column Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Analysis_Column")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_Analysis_Column,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal SurveyName As String,  _
                    ByVal ParkSubArea As String,  _
                    ByVal Stratum As String,  _
                    ByVal Analysis_Column As String,  _
                    ByVal Density_Estimate As Double,  _
                    ByVal Density_AreaSurveyed_SqMi As Global.System.Nullable(Of Double),  _
                    ByVal Density_AverageSearchEffort As Global.System.Nullable(Of Double),  _
                    ByVal DensityEstimateMethodology As String,  _
                    ByVal DensityEstimateSource As String,  _
                    ByVal ReportDate As Global.System.Nullable(Of Date),  _
                    ByVal Comments As String,  _
                    ByVal RecordInsertedDate As Date,  _
                    ByVal RecordInsertedBy As String,  _
                    ByVal ValidatedDate As Global.System.Nullable(Of Date),  _
                    ByVal ValidatedBy As String,  _
                    ByVal DensityEstimateSourceLink As String) As Integer
            If (SurveyName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SurveyName")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(SurveyName,String)
            End If
            If (ParkSubArea Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ParkSubArea")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ParkSubArea,String)
            End If
            If (Stratum Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Stratum")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Stratum,String)
            End If
            If (Analysis_Column Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Analysis_Column")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Analysis_Column,String)
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(Density_Estimate,Double)
            If (Density_AreaSurveyed_SqMi.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Density_AreaSurveyed_SqMi.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Density_AverageSearchEffort.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Density_AverageSearchEffort.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (DensityEstimateMethodology Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(DensityEstimateMethodology,String)
            End If
            If (DensityEstimateSource Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DensityEstimateSource")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(DensityEstimateSource,String)
            End If
            If (ReportDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(ReportDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Comments Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Comments,String)
            End If
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(RecordInsertedDate,Date)
            If (RecordInsertedBy Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RecordInsertedBy")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(RecordInsertedBy,String)
            End If
            If (ValidatedDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(ValidatedDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (ValidatedBy Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(ValidatedBy,String)
            End If
            If (DensityEstimateSourceLink Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(DensityEstimateSourceLink,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal SurveyName As String,  _
                    ByVal ParkSubArea As String,  _
                    ByVal Stratum As String,  _
                    ByVal Analysis_Column As String,  _
                    ByVal Density_Estimate As Double,  _
                    ByVal Density_AreaSurveyed_SqMi As Global.System.Nullable(Of Double),  _
                    ByVal Density_AverageSearchEffort As Global.System.Nullable(Of Double),  _
                    ByVal DensityEstimateMethodology As String,  _
                    ByVal DensityEstimateSource As String,  _
                    ByVal ReportDate As String,  _
                    ByVal Comments As String,  _
                    ByVal RecordInsertedDate As Date,  _
                    ByVal RecordInsertedBy As String,  _
                    ByVal ValidatedDate As String,  _
                    ByVal ValidatedBy As String,  _
                    ByVal DensityEstimateSourceLink As String,  _
                    ByVal Original_SurveyName As String,  _
                    ByVal Original_ParkSubArea As String,  _
                    ByVal Original_Stratum As String,  _
                    ByVal Original_Analysis_Column As String) As Integer
            If (SurveyName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SurveyName")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(SurveyName,String)
            End If
            If (ParkSubArea Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ParkSubArea")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ParkSubArea,String)
            End If
            If (Stratum Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Stratum")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Stratum,String)
            End If
            If (Analysis_Column Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Analysis_Column")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Analysis_Column,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Density_Estimate,Double)
            If (Density_AreaSurveyed_SqMi.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Density_AreaSurveyed_SqMi.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Density_AverageSearchEffort.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Density_AverageSearchEffort.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (DensityEstimateMethodology Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(DensityEstimateMethodology,String)
            End If
            If (DensityEstimateSource Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DensityEstimateSource")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(DensityEstimateSource,String)
            End If
            If (ReportDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(ReportDate,String)
            End If
            If (Comments Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Comments,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(RecordInsertedDate,Date)
            If (RecordInsertedBy Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RecordInsertedBy")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(RecordInsertedBy,String)
            End If
            If (ValidatedDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(ValidatedDate,String)
            End If
            If (ValidatedBy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(ValidatedBy,String)
            End If
            If (DensityEstimateSourceLink Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(DensityEstimateSourceLink,String)
            End If
            If (Original_SurveyName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SurveyName")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_SurveyName,String)
            End If
            If (Original_ParkSubArea Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ParkSubArea")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_ParkSubArea,String)
            End If
            If (Original_Stratum Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Stratum")
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_Stratum,String)
            End If
            If (Original_Analysis_Column Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Analysis_Column")
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_Analysis_Column,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Density_Estimate As Double,  _
                    ByVal Density_AreaSurveyed_SqMi As Global.System.Nullable(Of Double),  _
                    ByVal Density_AverageSearchEffort As Global.System.Nullable(Of Double),  _
                    ByVal DensityEstimateMethodology As String,  _
                    ByVal DensityEstimateSource As String,  _
                    ByVal ReportDate As String,  _
                    ByVal Comments As String,  _
                    ByVal RecordInsertedDate As Date,  _
                    ByVal RecordInsertedBy As String,  _
                    ByVal ValidatedDate As String,  _
                    ByVal ValidatedBy As String,  _
                    ByVal DensityEstimateSourceLink As String,  _
                    ByVal Original_SurveyName As String,  _
                    ByVal Original_ParkSubArea As String,  _
                    ByVal Original_Stratum As String,  _
                    ByVal Original_Analysis_Column As String) As Integer
            Return Me.Update(Original_SurveyName, Original_ParkSubArea, Original_Stratum, Original_Analysis_Column, Density_Estimate, Density_AreaSurveyed_SqMi, Density_AverageSearchEffort, DensityEstimateMethodology, DensityEstimateSource, ReportDate, Comments, RecordInsertedDate, RecordInsertedBy, ValidatedDate, ValidatedBy, DensityEstimateSourceLink, Original_SurveyName, Original_ParkSubArea, Original_Stratum, Original_Analysis_Column)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class GSPE_PopulationEstimatesTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "GSPE_PopulationEstimates"
            tableMapping.ColumnMappings.Add("SurveyName", "SurveyName")
            tableMapping.ColumnMappings.Add("ParkSubArea", "ParkSubArea")
            tableMapping.ColumnMappings.Add("Analysis_Column", "Analysis_Column")
            tableMapping.ColumnMappings.Add("Strata", "Strata")
            tableMapping.ColumnMappings.Add("Confidence", "Confidence")
            tableMapping.ColumnMappings.Add("Population_Estimate", "Population_Estimate")
            tableMapping.ColumnMappings.Add("Standard_Error", "Standard_Error")
            tableMapping.ColumnMappings.Add("Lower_Limit", "Lower_Limit")
            tableMapping.ColumnMappings.Add("Upper_Limit", "Upper_Limit")
            tableMapping.ColumnMappings.Add("Proportion_of_Mean", "Proportion_of_Mean")
            tableMapping.ColumnMappings.Add("Strata_Column", "Strata_Column")
            tableMapping.ColumnMappings.Add("Analysis_Area", "Analysis_Area")
            tableMapping.ColumnMappings.Add("Counted_Column", "Counted_Column")
            tableMapping.ColumnMappings.Add("Unit_Area_Column", "Unit_Area_Column")
            tableMapping.ColumnMappings.Add("SurveyArea", "SurveyArea")
            tableMapping.ColumnMappings.Add("SampledArea", "SampledArea")
            tableMapping.ColumnMappings.Add("Intensity", "Intensity")
            tableMapping.ColumnMappings.Add("RelativePrecision", "RelativePrecision")
            tableMapping.ColumnMappings.Add("SightabilityCorrectionFactor", "SightabilityCorrectionFactor")
            tableMapping.ColumnMappings.Add("Density", "Density")
            tableMapping.ColumnMappings.Add("Comments", "Comments")
            tableMapping.ColumnMappings.Add("ReportDate", "ReportDate")
            tableMapping.ColumnMappings.Add("AnalysisPerformedBy", "AnalysisPerformedBy")
            tableMapping.ColumnMappings.Add("PopulationEstimateSource", "PopulationEstimateSource")
            tableMapping.ColumnMappings.Add("RecordInsertedDate", "RecordInsertedDate")
            tableMapping.ColumnMappings.Add("RecordInsertedBy", "RecordInsertedBy")
            tableMapping.ColumnMappings.Add("ValidatedDate", "ValidatedDate")
            tableMapping.ColumnMappings.Add("ValidatedBy", "ValidatedBy")
            tableMapping.ColumnMappings.Add("PopulationSourceLink", "PopulationSourceLink")
            tableMapping.ColumnMappings.Add("PopulationEstimateSourceReferenceCode", "PopulationEstimateSourceReferenceCode")
            tableMapping.ColumnMappings.Add("PopulationEstimateID", "PopulationEstimateID")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM GSPE_PopulationEstimates"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (PopulationEstimateID = @Origi"& _ 
                "nal_PopulationEstimateID)"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PopulationEstimateID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "PopulationEstimateID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [GSPE_PopulationEstimates] ([SurveyName], [ParkSubArea], [PopulationE"& _ 
                "stimateSourceReferenceCode], [Analysis_Column], [Strata], [Confidence], [Populat"& _ 
                "ion_Estimate], [Lower_Limit], [Upper_Limit], [Standard_Error], [Proportion_of_Me"& _ 
                "an], [Strata_Column], [Analysis_Area], [Counted_Column], [Unit_Area_Column], [Su"& _ 
                "rveyArea], [SampledArea], [Intensity], [RelativePrecision], [SightabilityCorrect"& _ 
                "ionFactor], [Density], [Comments], [ReportDate], [AnalysisPerformedBy], [Populat"& _ 
                "ionEstimateSource], [RecordInsertedDate], [RecordInsertedBy], [ValidatedDate], ["& _ 
                "ValidatedBy], [PopulationSourceLink]) VALUES (@SurveyName, @ParkSubArea, @Popula"& _ 
                "tionEstimateSourceReferenceCode, @Analysis_Column, @Strata, @Confidence, @Popula"& _ 
                "tion_Estimate, @Lower_Limit, @Upper_Limit, @Standard_Error, @Proportion_of_Mean,"& _ 
                " @Strata_Column, @Analysis_Area, @Counted_Column, @Unit_Area_Column, @SurveyArea"& _ 
                ", @SampledArea, @Intensity, @RelativePrecision, @SightabilityCorrectionFactor, @"& _ 
                "Density, @Comments, @ReportDate, @AnalysisPerformedBy, @PopulationEstimateSource"& _ 
                ", @RecordInsertedDate, @RecordInsertedBy, @ValidatedDate, @ValidatedBy, @Populat"& _ 
                "ionSourceLink);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SurveyName, ParkSubArea, PopulationEstimateSourceReferen"& _ 
                "ceCode, Analysis_Column, Strata, Confidence, Population_Estimate, Lower_Limit, U"& _ 
                "pper_Limit, Standard_Error, Proportion_of_Mean, Strata_Column, Analysis_Area, Co"& _ 
                "unted_Column, Unit_Area_Column, SurveyArea, SampledArea, Intensity, RelativePrec"& _ 
                "ision, SightabilityCorrectionFactor, Density, Comments, ReportDate, AnalysisPerf"& _ 
                "ormedBy, PopulationEstimateSource, RecordInsertedDate, RecordInsertedBy, Validat"& _ 
                "edDate, ValidatedBy, PopulationSourceLink, PopulationEstimateID FROM GSPE_Popula"& _ 
                "tionEstimates WHERE (PopulationEstimateID = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SurveyName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SurveyName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ParkSubArea", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ParkSubArea", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PopulationEstimateSourceReferenceCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PopulationEstimateSourceReferenceCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Analysis_Column", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Analysis_Column", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Strata", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Strata", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Confidence", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Confidence", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Population_Estimate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Population_Estimate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Lower_Limit", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Lower_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upper_Limit", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Upper_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Standard_Error", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Standard_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Proportion_of_Mean", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Proportion_of_Mean", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Strata_Column", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Strata_Column", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Analysis_Area", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Analysis_Area", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Counted_Column", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counted_Column", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Unit_Area_Column", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Unit_Area_Column", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SurveyArea", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SurveyArea", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SampledArea", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SampledArea", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Intensity", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Intensity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RelativePrecision", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RelativePrecision", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SightabilityCorrectionFactor", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SightabilityCorrectionFactor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Density", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Density", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Comments", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Comments", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReportDate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReportDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AnalysisPerformedBy", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AnalysisPerformedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PopulationEstimateSource", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PopulationEstimateSource", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RecordInsertedDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RecordInsertedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RecordInsertedBy", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RecordInsertedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ValidatedDate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ValidatedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ValidatedBy", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ValidatedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PopulationSourceLink", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PopulationSourceLink", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE       GSPE_PopulationEstimates"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                ParkSubArea = @ParkSubA"& _ 
                "rea, PopulationEstimateSourceReferenceCode = @PopulationEstimateSourceReferenceC"& _ 
                "ode, Analysis_Column = @Analysis_Column, Strata = @Strata, Confidence = @Confide"& _ 
                "nce, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Population_Estimate = @Population_Estimate, Lowe"& _ 
                "r_Limit = @Lower_Limit, Upper_Limit = @Upper_Limit, Standard_Error = @Standard_E"& _ 
                "rror, Proportion_of_Mean = @Proportion_of_Mean, Strata_Column = @Strata_Column, "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Analysis_Area = @Analysis_Area, Counted_Column = @Cou"& _ 
                "nted_Column, Unit_Area_Column = @Unit_Area_Column, SurveyArea = @SurveyArea, Sam"& _ 
                "pledArea = @SampledArea, Intensity = @Intensity, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Rela"& _ 
                "tivePrecision = @RelativePrecision, SightabilityCorrectionFactor = @Sightability"& _ 
                "CorrectionFactor, Comments = @Comments, ReportDate = @ReportDate, AnalysisPerfor"& _ 
                "medBy = @AnalysisPerformedBy, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PopulationEstimateSourc"& _ 
                "e = @PopulationEstimateSource, ValidatedDate = @ValidatedDate, ValidatedBy = @Va"& _ 
                "lidatedBy, PopulationSourceLink = @PopulationSourceLink"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (Populatio"& _ 
                "nEstimateID = @Original_PopulationEstimateID); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SurveyName, ParkSubArea,"& _ 
                " PopulationEstimateSourceReferenceCode, Analysis_Column, Strata, Confidence, Pop"& _ 
                "ulation_Estimate, Lower_Limit, Upper_Limit, Standard_Error, Proportion_of_Mean, "& _ 
                "Strata_Column, Analysis_Area, Counted_Column, Unit_Area_Column, SurveyArea, Samp"& _ 
                "ledArea, Intensity, RelativePrecision, SightabilityCorrectionFactor, Density, Co"& _ 
                "mments, ReportDate, AnalysisPerformedBy, PopulationEstimateSource, RecordInserte"& _ 
                "dDate, RecordInsertedBy, ValidatedDate, ValidatedBy, PopulationSourceLink, Popul"& _ 
                "ationEstimateID FROM GSPE_PopulationEstimates WHERE (PopulationEstimateID = @Pop"& _ 
                "ulationEstimateID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ParkSubArea", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ParkSubArea", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PopulationEstimateSourceReferenceCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "PopulationEstimateSourceReferenceCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Analysis_Column", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, "Analysis_Column", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Strata", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Strata", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Confidence", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Confidence", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Population_Estimate", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Population_Estimate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Lower_Limit", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Lower_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Upper_Limit", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Upper_Limit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Standard_Error", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Standard_Error", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Proportion_of_Mean", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Proportion_of_Mean", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Strata_Column", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, "Strata_Column", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Analysis_Area", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, "Analysis_Area", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Counted_Column", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, "Counted_Column", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Unit_Area_Column", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, "Unit_Area_Column", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SurveyArea", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "SurveyArea", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SampledArea", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "SampledArea", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Intensity", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Intensity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RelativePrecision", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "RelativePrecision", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SightabilityCorrectionFactor", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "SightabilityCorrectionFactor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Comments", Global.System.Data.SqlDbType.VarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "Comments", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReportDate", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ReportDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AnalysisPerformedBy", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "AnalysisPerformedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PopulationEstimateSource", Global.System.Data.SqlDbType.VarChar, 1000, Global.System.Data.ParameterDirection.Input, 0, 0, "PopulationEstimateSource", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ValidatedDate", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ValidatedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ValidatedBy", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ValidatedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PopulationSourceLink", Global.System.Data.SqlDbType.VarChar, 4000, Global.System.Data.ParameterDirection.Input, 0, 0, "PopulationSourceLink", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PopulationEstimateID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "PopulationEstimateID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PopulationEstimateID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "PopulationEstimateID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Moose3.My.MySettings.Default.MooseConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SurveyName, ParkSubArea, PopulationEstimateSourceReferenceCode, Ana"& _ 
                "lysis_Column, Strata, Confidence, Population_Estimate, Lower_Limit, Upper_Limit,"& _ 
                " Standard_Error, Proportion_of_Mean, Strata_Column, Analysis_Area, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "              Counted_Column, Unit_Area_Column, SurveyArea, SampledArea, Intensi"& _ 
                "ty, RelativePrecision, SightabilityCorrectionFactor, Density, Comments, ReportDa"& _ 
                "te, AnalysisPerformedBy, PopulationEstimateSource, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Re"& _ 
                "cordInsertedDate, RecordInsertedBy, ValidatedDate, ValidatedBy, PopulationSource"& _ 
                "Link, PopulationEstimateID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            GSPE_PopulationEstimates"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As MooseDataSet.GSPE_PopulationEstimatesDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As MooseDataSet.GSPE_PopulationEstimatesDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As MooseDataSet.GSPE_PopulationEstimatesDataTable = New MooseDataSet.GSPE_PopulationEstimatesDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As MooseDataSet.GSPE_PopulationEstimatesDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As MooseDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "GSPE_PopulationEstimates")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_PopulationEstimateID As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_PopulationEstimateID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal SurveyName As String,  _
                    ByVal ParkSubArea As String,  _
                    ByVal PopulationEstimateSourceReferenceCode As Integer,  _
                    ByVal Analysis_Column As String,  _
                    ByVal Strata As String,  _
                    ByVal Confidence As Global.System.Nullable(Of Integer),  _
                    ByVal Population_Estimate As Double,  _
                    ByVal Lower_Limit As Global.System.Nullable(Of Double),  _
                    ByVal Upper_Limit As Global.System.Nullable(Of Double),  _
                    ByVal Standard_Error As Global.System.Nullable(Of Double),  _
                    ByVal Proportion_of_Mean As Global.System.Nullable(Of Double),  _
                    ByVal Strata_Column As String,  _
                    ByVal Analysis_Area As String,  _
                    ByVal Counted_Column As String,  _
                    ByVal Unit_Area_Column As String,  _
                    ByVal SurveyArea As Global.System.Nullable(Of Double),  _
                    ByVal SampledArea As Global.System.Nullable(Of Double),  _
                    ByVal Intensity As Global.System.Nullable(Of Double),  _
                    ByVal RelativePrecision As Global.System.Nullable(Of Double),  _
                    ByVal SightabilityCorrectionFactor As Global.System.Nullable(Of Double),  _
                    ByVal Density As Global.System.Nullable(Of Double),  _
                    ByVal Comments As String,  _
                    ByVal ReportDate As Global.System.Nullable(Of Date),  _
                    ByVal AnalysisPerformedBy As String,  _
                    ByVal PopulationEstimateSource As String,  _
                    ByVal RecordInsertedDate As Date,  _
                    ByVal RecordInsertedBy As String,  _
                    ByVal ValidatedDate As Global.System.Nullable(Of Date),  _
                    ByVal ValidatedBy As String,  _
                    ByVal PopulationSourceLink As String) As Integer
            If (SurveyName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SurveyName")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(SurveyName,String)
            End If
            If (ParkSubArea Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ParkSubArea")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ParkSubArea,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(PopulationEstimateSourceReferenceCode,Integer)
            If (Analysis_Column Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Analysis_Column")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Analysis_Column,String)
            End If
            If (Strata Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Strata")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Strata,String)
            End If
            If (Confidence.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Confidence.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(Population_Estimate,Double)
            If (Lower_Limit.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Lower_Limit.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Upper_Limit.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Upper_Limit.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Standard_Error.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Standard_Error.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Proportion_of_Mean.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Proportion_of_Mean.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Strata_Column Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Strata_Column,String)
            End If
            If (Analysis_Area Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Analysis_Area,String)
            End If
            If (Counted_Column Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(Counted_Column,String)
            End If
            If (Unit_Area_Column Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(Unit_Area_Column,String)
            End If
            If (SurveyArea.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(SurveyArea.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (SampledArea.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(SampledArea.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Intensity.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(Intensity.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (RelativePrecision.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(RelativePrecision.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (SightabilityCorrectionFactor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(SightabilityCorrectionFactor.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Density.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(Density.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Comments Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(Comments,String)
            End If
            If (ReportDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(ReportDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (AnalysisPerformedBy Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(AnalysisPerformedBy,String)
            End If
            If (PopulationEstimateSource Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PopulationEstimateSource")
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(PopulationEstimateSource,String)
            End If
            Me.Adapter.InsertCommand.Parameters(25).Value = CType(RecordInsertedDate,Date)
            If (RecordInsertedBy Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RecordInsertedBy")
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(RecordInsertedBy,String)
            End If
            If (ValidatedDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(ValidatedDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (ValidatedBy Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(ValidatedBy,String)
            End If
            If (PopulationSourceLink Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(PopulationSourceLink,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ParkSubArea As String,  _
                    ByVal PopulationEstimateSourceReferenceCode As Integer,  _
                    ByVal Analysis_Column As String,  _
                    ByVal Strata As String,  _
                    ByVal Confidence As Global.System.Nullable(Of Integer),  _
                    ByVal Population_Estimate As Double,  _
                    ByVal Lower_Limit As Global.System.Nullable(Of Double),  _
                    ByVal Upper_Limit As Global.System.Nullable(Of Double),  _
                    ByVal Standard_Error As Global.System.Nullable(Of Double),  _
                    ByVal Proportion_of_Mean As Global.System.Nullable(Of Double),  _
                    ByVal Strata_Column As String,  _
                    ByVal Analysis_Area As String,  _
                    ByVal Counted_Column As String,  _
                    ByVal Unit_Area_Column As String,  _
                    ByVal SurveyArea As Global.System.Nullable(Of Double),  _
                    ByVal SampledArea As Global.System.Nullable(Of Double),  _
                    ByVal Intensity As Global.System.Nullable(Of Double),  _
                    ByVal RelativePrecision As Global.System.Nullable(Of Double),  _
                    ByVal SightabilityCorrectionFactor As Global.System.Nullable(Of Double),  _
                    ByVal Comments As String,  _
                    ByVal ReportDate As String,  _
                    ByVal AnalysisPerformedBy As String,  _
                    ByVal PopulationEstimateSource As String,  _
                    ByVal ValidatedDate As String,  _
                    ByVal ValidatedBy As String,  _
                    ByVal PopulationSourceLink As String,  _
                    ByVal Original_PopulationEstimateID As Integer,  _
                    ByVal PopulationEstimateID As Integer) As Integer
            If (ParkSubArea Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ParkSubArea")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ParkSubArea,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(PopulationEstimateSourceReferenceCode,Integer)
            If (Analysis_Column Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Analysis_Column")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Analysis_Column,String)
            End If
            If (Strata Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Strata")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Strata,String)
            End If
            If (Confidence.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Confidence.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Population_Estimate,Double)
            If (Lower_Limit.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Lower_Limit.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Upper_Limit.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Upper_Limit.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Standard_Error.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Standard_Error.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Proportion_of_Mean.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Proportion_of_Mean.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Strata_Column Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Strata_Column,String)
            End If
            If (Analysis_Area Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Analysis_Area,String)
            End If
            If (Counted_Column Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Counted_Column,String)
            End If
            If (Unit_Area_Column Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Unit_Area_Column,String)
            End If
            If (SurveyArea.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(SurveyArea.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (SampledArea.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(SampledArea.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Intensity.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Intensity.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (RelativePrecision.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(RelativePrecision.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (SightabilityCorrectionFactor.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(SightabilityCorrectionFactor.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Comments Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Comments,String)
            End If
            If (ReportDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(ReportDate,String)
            End If
            If (AnalysisPerformedBy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(AnalysisPerformedBy,String)
            End If
            If (PopulationEstimateSource Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PopulationEstimateSource")
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(PopulationEstimateSource,String)
            End If
            If (ValidatedDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(ValidatedDate,String)
            End If
            If (ValidatedBy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(ValidatedBy,String)
            End If
            If (PopulationSourceLink Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(PopulationSourceLink,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_PopulationEstimateID,Integer)
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(PopulationEstimateID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class GSPE_ResultsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "GSPE_Results"
            tableMapping.ColumnMappings.Add("SurveyName", "SurveyName")
            tableMapping.ColumnMappings.Add("ParkSubArea", "ParkSubArea")
            tableMapping.ColumnMappings.Add("BullCowRatio", "BullCowRatio")
            tableMapping.ColumnMappings.Add("CalfCowRatio", "CalfCowRatio")
            tableMapping.ColumnMappings.Add("CalfAdultRatio", "CalfAdultRatio")
            tableMapping.ColumnMappings.Add("ADULT", "ADULT")
            tableMapping.ColumnMappings.Add("BULL_30_40", "BULL_30_40")
            tableMapping.ColumnMappings.Add("BULL_30_50", "BULL_30_50")
            tableMapping.ColumnMappings.Add("BULL_30_60", "BULL_30_60")
            tableMapping.ColumnMappings.Add("BULL_41_50", "BULL_41_50")
            tableMapping.ColumnMappings.Add("BULL_ALL", "BULL_ALL")
            tableMapping.ColumnMappings.Add("BULL_GT_50", "BULL_GT_50")
            tableMapping.ColumnMappings.Add("BULL_GT_60", "BULL_GT_60")
            tableMapping.ColumnMappings.Add("BULL_GTE_50", "BULL_GTE_50")
            tableMapping.ColumnMappings.Add("BULL_LT_30", "BULL_LT_30")
            tableMapping.ColumnMappings.Add("BULL_LT_50", "BULL_LT_50")
            tableMapping.ColumnMappings.Add("CALF", "CALF")
            tableMapping.ColumnMappings.Add("COW", "COW")
            tableMapping.ColumnMappings.Add("COW_W_0", "COW_W_0")
            tableMapping.ColumnMappings.Add("COW_W_1", "COW_W_1")
            tableMapping.ColumnMappings.Add("COW_W_2", "COW_W_2")
            tableMapping.ColumnMappings.Add("COW_W_3", "COW_W_3")
            tableMapping.ColumnMappings.Add("LG_BULL", "LG_BULL")
            tableMapping.ColumnMappings.Add("MED_BULL", "MED_BULL")
            tableMapping.ColumnMappings.Add("MED_L_BULL", "MED_L_BULL")
            tableMapping.ColumnMappings.Add("SM_BULL", "SM_BULL")
            tableMapping.ColumnMappings.Add("UNKNOWN", "UNKNOWN")
            tableMapping.ColumnMappings.Add("YBULL_ALL", "YBULL_ALL")
            tableMapping.ColumnMappings.Add("YBULL_GTSF", "YBULL_GTSF")
            tableMapping.ColumnMappings.Add("YBULL_SF", "YBULL_SF")
            tableMapping.ColumnMappings.Add("MOOSE", "MOOSE")
            tableMapping.ColumnMappings.Add("SubAreaSurveyed_SqMi", "SubAreaSurveyed_SqMi")
            tableMapping.ColumnMappings.Add("SubAreaAverageSearchEffort", "SubAreaAverageSearchEffort")
            tableMapping.ColumnMappings.Add("MethodologyUsed", "MethodologyUsed")
            tableMapping.ColumnMappings.Add("ResultsSource", "ResultsSource")
            tableMapping.ColumnMappings.Add("Comments", "Comments")
            tableMapping.ColumnMappings.Add("RecordInsertedDate", "RecordInsertedDate")
            tableMapping.ColumnMappings.Add("RecordInsertedBy", "RecordInsertedBy")
            tableMapping.ColumnMappings.Add("ValidatedDate", "ValidatedDate")
            tableMapping.ColumnMappings.Add("ValidatedBy", "ValidatedBy")
            tableMapping.ColumnMappings.Add("ResultsSourceLink", "ResultsSourceLink")
            tableMapping.ColumnMappings.Add("ResultID", "ResultID")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM GSPE_Results"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (SurveyName = @Original_SurveyName) AND (P"& _ 
                "arkSubArea = @Original_ParkSubArea) AND (ResultID = @Original_ResultID)"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SurveyName", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "SurveyName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ParkSubArea", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ParkSubArea", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultID", Global.System.Data.SqlDbType.VarChar, 40, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO GSPE_Results"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (SurveyName, ParkSubArea, Bull"& _ 
                "CowRatio, CalfCowRatio, CalfAdultRatio, ADULT, BULL_30_40, BULL_30_50, BULL_30_6"& _ 
                "0, BULL_41_50, BULL_ALL, BULL_GT_50, BULL_GT_60, BULL_GTE_50, BULL_LT_30, BULL_L"& _ 
                "T_50, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CALF, COW, COW_W_0, COW_W_1, COW_W_2, COW_W_3, "& _ 
                "LG_BULL, MED_BULL, MED_L_BULL, SM_BULL, UNKNOWN, YBULL_ALL, YBULL_GTSF, YBULL_SF"& _ 
                ", MOOSE, SubAreaSurveyed_SqMi, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SubAreaAverageSearchEf"& _ 
                "fort, MethodologyUsed, ResultsSource, Comments, RecordInsertedDate, RecordInsert"& _ 
                "edBy, ValidatedDate, ValidatedBy, ResultsSourceLink, ResultID)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (@"& _ 
                "SurveyName,@ParkSubArea,@BullCowRatio,@CalfCowRatio,@CalfAdultRatio,@ADULT,@BULL"& _ 
                "_30_40,@BULL_30_50,@BULL_30_60,@BULL_41_50,@BULL_ALL,@BULL_GT_50,@BULL_GT_60,@BU"& _ 
                "LL_GTE_50,@BULL_LT_30,@BULL_LT_50,@CALF,@COW,@COW_W_0,@COW_W_1,@COW_W_2,@COW_W_3"& _ 
                ",@LG_BULL,@MED_BULL,@MED_L_BULL,@SM_BULL,@UNKNOWN,@YBULL_ALL,@YBULL_GTSF,@YBULL_"& _ 
                "SF,@MOOSE,@SubAreaSurveyed_SqMi,@SubAreaAverageSearchEffort,@MethodologyUsed,@Re"& _ 
                "sultsSource,@Comments,@RecordInsertedDate,@RecordInsertedBy,@ValidatedDate,@Vali"& _ 
                "datedBy,@ResultsSourceLink,@ResultID); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SurveyName, ParkSubArea, BullCow"& _ 
                "Ratio, CalfCowRatio, CalfAdultRatio, ADULT, BULL_30_40, BULL_30_50, BULL_30_60, "& _ 
                "BULL_41_50, BULL_ALL, BULL_GT_50, BULL_GT_60, BULL_GTE_50, BULL_LT_30, BULL_LT_5"& _ 
                "0, CALF, COW, COW_W_0, COW_W_1, COW_W_2, COW_W_3, LG_BULL, MED_BULL, MED_L_BULL,"& _ 
                " SM_BULL, UNKNOWN, YBULL_ALL, YBULL_GTSF, YBULL_SF, MOOSE, SubAreaSurveyed_SqMi,"& _ 
                " SubAreaAverageSearchEffort, MethodologyUsed, ResultsSource, Comments, RecordIns"& _ 
                "ertedDate, RecordInsertedBy, ValidatedDate, ValidatedBy, ResultsSourceLink, Resu"& _ 
                "ltID FROM GSPE_Results WHERE (ParkSubArea = @ParkSubArea) AND (ResultID = @Resul"& _ 
                "tID) AND (SurveyName = @SurveyName)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SurveyName", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "SurveyName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ParkSubArea", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ParkSubArea", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BullCowRatio", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "BullCowRatio", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CalfCowRatio", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CalfCowRatio", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CalfAdultRatio", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CalfAdultRatio", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADULT", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ADULT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_30_40", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_30_40", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_30_50", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_30_50", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_30_60", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_30_60", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_41_50", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_41_50", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_ALL", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_ALL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_GT_50", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_GT_50", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_GT_60", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_GT_60", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_GTE_50", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_GTE_50", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_LT_30", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_LT_30", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_LT_50", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_LT_50", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CALF", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CALF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COW", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "COW", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COW_W_0", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "COW_W_0", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COW_W_1", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "COW_W_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COW_W_2", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "COW_W_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COW_W_3", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "COW_W_3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LG_BULL", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "LG_BULL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MED_BULL", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MED_BULL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MED_L_BULL", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MED_L_BULL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SM_BULL", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SM_BULL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UNKNOWN", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "UNKNOWN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YBULL_ALL", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "YBULL_ALL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YBULL_GTSF", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "YBULL_GTSF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YBULL_SF", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "YBULL_SF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MOOSE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MOOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubAreaSurveyed_SqMi", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "SubAreaSurveyed_SqMi", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubAreaAverageSearchEffort", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "SubAreaAverageSearchEffort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MethodologyUsed", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "MethodologyUsed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultsSource", Global.System.Data.SqlDbType.VarChar, 2000, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultsSource", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Comments", Global.System.Data.SqlDbType.VarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "Comments", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RecordInsertedDate", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "RecordInsertedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RecordInsertedBy", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "RecordInsertedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ValidatedDate", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ValidatedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ValidatedBy", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ValidatedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultsSourceLink", Global.System.Data.SqlDbType.VarChar, 4000, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultsSourceLink", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultID", Global.System.Data.SqlDbType.VarChar, 40, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE       GSPE_Results"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                SurveyName = @SurveyName, ParkSubAr"& _ 
                "ea = @ParkSubArea, BullCowRatio = @BullCowRatio, CalfCowRatio = @CalfCowRatio, C"& _ 
                "alfAdultRatio = @CalfAdultRatio, ADULT = @ADULT, BULL_30_40 = @BULL_30_40, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                      BULL_30_50 = @BULL_30_50, BULL_30_60 = @BULL_30_60, BULL_4"& _ 
                "1_50 = @BULL_41_50, BULL_ALL = @BULL_ALL, BULL_GT_50 = @BULL_GT_50, BULL_GT_60 ="& _ 
                " @BULL_GT_60, BULL_GTE_50 = @BULL_GTE_50, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         BULL_LT_30 "& _ 
                "= @BULL_LT_30, BULL_LT_50 = @BULL_LT_50, CALF = @CALF, COW = @COW, COW_W_0 = @CO"& _ 
                "W_W_0, COW_W_1 = @COW_W_1, COW_W_2 = @COW_W_2, COW_W_3 = @COW_W_3, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "              LG_BULL = @LG_BULL, MED_BULL = @MED_BULL, MED_L_BULL = @MED_L_BULL"& _ 
                ", SM_BULL = @SM_BULL, UNKNOWN = @UNKNOWN, YBULL_ALL = @YBULL_ALL, YBULL_GTSF = @"& _ 
                "YBULL_GTSF, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         YBULL_SF = @YBULL_SF, MOOSE = @MOOSE, Sub"& _ 
                "AreaSurveyed_SqMi = @SubAreaSurveyed_SqMi, SubAreaAverageSearchEffort = @SubArea"& _ 
                "AverageSearchEffort, MethodologyUsed = @MethodologyUsed, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    ResultsSource = @ResultsSource, Comments = @Comments, RecordInsertedDate = @"& _ 
                "RecordInsertedDate, RecordInsertedBy = @RecordInsertedBy, ValidatedDate = @Valid"& _ 
                "atedDate, ValidatedBy = @ValidatedBy, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         ResultsSourceLi"& _ 
                "nk = @ResultsSourceLink, ResultID = @ResultID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (SurveyName = @Origi"& _ 
                "nal_SurveyName) AND (ParkSubArea = @Original_ParkSubArea) AND (ResultID = @Origi"& _ 
                "nal_ResultID); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SurveyName, ParkSubArea, BullCowRatio, CalfCowRatio, Cal"& _ 
                "fAdultRatio, ADULT, BULL_30_40, BULL_30_50, BULL_30_60, BULL_41_50, BULL_ALL, BU"& _ 
                "LL_GT_50, BULL_GT_60, BULL_GTE_50, BULL_LT_30, BULL_LT_50, CALF, COW, COW_W_0, C"& _ 
                "OW_W_1, COW_W_2, COW_W_3, LG_BULL, MED_BULL, MED_L_BULL, SM_BULL, UNKNOWN, YBULL"& _ 
                "_ALL, YBULL_GTSF, YBULL_SF, MOOSE, SubAreaSurveyed_SqMi, SubAreaAverageSearchEff"& _ 
                "ort, MethodologyUsed, ResultsSource, Comments, RecordInsertedDate, RecordInserte"& _ 
                "dBy, ValidatedDate, ValidatedBy, ResultsSourceLink FROM GSPE_Results WHERE (Park"& _ 
                "SubArea = @ParkSubArea) AND (SurveyName = @SurveyName)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SurveyName", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "SurveyName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ParkSubArea", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ParkSubArea", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BullCowRatio", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "BullCowRatio", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CalfCowRatio", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CalfCowRatio", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CalfAdultRatio", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CalfAdultRatio", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADULT", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ADULT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_30_40", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_30_40", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_30_50", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_30_50", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_30_60", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_30_60", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_41_50", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_41_50", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_ALL", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_ALL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_GT_50", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_GT_50", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_GT_60", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_GT_60", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_GTE_50", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_GTE_50", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_LT_30", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_LT_30", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BULL_LT_50", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "BULL_LT_50", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CALF", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CALF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COW", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "COW", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COW_W_0", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "COW_W_0", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COW_W_1", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "COW_W_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COW_W_2", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "COW_W_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COW_W_3", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "COW_W_3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LG_BULL", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "LG_BULL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MED_BULL", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MED_BULL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MED_L_BULL", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MED_L_BULL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SM_BULL", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SM_BULL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UNKNOWN", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "UNKNOWN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YBULL_ALL", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "YBULL_ALL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YBULL_GTSF", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "YBULL_GTSF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YBULL_SF", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "YBULL_SF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MOOSE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "MOOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubAreaSurveyed_SqMi", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "SubAreaSurveyed_SqMi", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubAreaAverageSearchEffort", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "SubAreaAverageSearchEffort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MethodologyUsed", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "MethodologyUsed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultsSource", Global.System.Data.SqlDbType.VarChar, 2000, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultsSource", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Comments", Global.System.Data.SqlDbType.VarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "Comments", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RecordInsertedDate", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "RecordInsertedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RecordInsertedBy", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "RecordInsertedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ValidatedDate", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ValidatedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ValidatedBy", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ValidatedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultsSourceLink", Global.System.Data.SqlDbType.VarChar, 4000, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultsSourceLink", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultID", Global.System.Data.SqlDbType.VarChar, 40, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SurveyName", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "SurveyName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ParkSubArea", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ParkSubArea", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ResultID", Global.System.Data.SqlDbType.VarChar, 40, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Moose3.My.MySettings.Default.MooseConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SurveyName, ParkSubArea, BullCowRatio, CalfCowRatio, CalfAdultRatio"& _ 
                ", ADULT, BULL_30_40, BULL_30_50, BULL_30_60, BULL_41_50, BULL_ALL, BULL_GT_50, B"& _ 
                "ULL_GT_60, BULL_GTE_50, BULL_LT_30, BULL_LT_50, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CALF,"& _ 
                " COW, COW_W_0, COW_W_1, COW_W_2, COW_W_3, LG_BULL, MED_BULL, MED_L_BULL, SM_BULL"& _ 
                ", UNKNOWN, YBULL_ALL, YBULL_GTSF, YBULL_SF, MOOSE, SubAreaSurveyed_SqMi, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                    SubAreaAverageSearchEffort, MethodologyUsed, ResultsSource, "& _ 
                "Comments, RecordInsertedDate, RecordInsertedBy, ValidatedDate, ValidatedBy, Resu"& _ 
                "ltsSourceLink, ResultID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            GSPE_Results"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As MooseDataSet.GSPE_ResultsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As MooseDataSet.GSPE_ResultsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As MooseDataSet.GSPE_ResultsDataTable = New MooseDataSet.GSPE_ResultsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As MooseDataSet.GSPE_ResultsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As MooseDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "GSPE_Results")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_SurveyName As String, ByVal Original_ParkSubArea As String, ByVal Original_ResultID As String) As Integer
            If (Original_SurveyName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SurveyName")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_SurveyName,String)
            End If
            If (Original_ParkSubArea Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ParkSubArea")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ParkSubArea,String)
            End If
            If (Original_ResultID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ResultID")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ResultID,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal SurveyName As String,  _
                    ByVal ParkSubArea As String,  _
                    ByVal BullCowRatio As Global.System.Nullable(Of Double),  _
                    ByVal CalfCowRatio As Global.System.Nullable(Of Double),  _
                    ByVal CalfAdultRatio As Global.System.Nullable(Of Double),  _
                    ByVal ADULT As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_30_40 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_30_50 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_30_60 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_41_50 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_ALL As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_GT_50 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_GT_60 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_GTE_50 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_LT_30 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_LT_50 As Global.System.Nullable(Of Integer),  _
                    ByVal CALF As Global.System.Nullable(Of Integer),  _
                    ByVal COW As Global.System.Nullable(Of Integer),  _
                    ByVal COW_W_0 As Global.System.Nullable(Of Integer),  _
                    ByVal COW_W_1 As Global.System.Nullable(Of Integer),  _
                    ByVal COW_W_2 As Global.System.Nullable(Of Integer),  _
                    ByVal COW_W_3 As Global.System.Nullable(Of Integer),  _
                    ByVal LG_BULL As Global.System.Nullable(Of Integer),  _
                    ByVal MED_BULL As Global.System.Nullable(Of Integer),  _
                    ByVal MED_L_BULL As Global.System.Nullable(Of Integer),  _
                    ByVal SM_BULL As Global.System.Nullable(Of Integer),  _
                    ByVal UNKNOWN As Global.System.Nullable(Of Integer),  _
                    ByVal YBULL_ALL As Global.System.Nullable(Of Integer),  _
                    ByVal YBULL_GTSF As Global.System.Nullable(Of Integer),  _
                    ByVal YBULL_SF As Global.System.Nullable(Of Integer),  _
                    ByVal MOOSE As Global.System.Nullable(Of Integer),  _
                    ByVal SubAreaSurveyed_SqMi As Global.System.Nullable(Of Double),  _
                    ByVal SubAreaAverageSearchEffort As Global.System.Nullable(Of Double),  _
                    ByVal MethodologyUsed As String,  _
                    ByVal ResultsSource As String,  _
                    ByVal Comments As String,  _
                    ByVal RecordInsertedDate As Date,  _
                    ByVal RecordInsertedBy As String,  _
                    ByVal ValidatedDate As String,  _
                    ByVal ValidatedBy As String,  _
                    ByVal ResultsSourceLink As String,  _
                    ByVal ResultID As String) As Integer
            If (SurveyName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SurveyName")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(SurveyName,String)
            End If
            If (ParkSubArea Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ParkSubArea")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ParkSubArea,String)
            End If
            If (BullCowRatio.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(BullCowRatio.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CalfCowRatio.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CalfCowRatio.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CalfAdultRatio.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CalfAdultRatio.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (ADULT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ADULT.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (BULL_30_40.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(BULL_30_40.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (BULL_30_50.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(BULL_30_50.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (BULL_30_60.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(BULL_30_60.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (BULL_41_50.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(BULL_41_50.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (BULL_ALL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(BULL_ALL.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (BULL_GT_50.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(BULL_GT_50.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (BULL_GT_60.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(BULL_GT_60.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (BULL_GTE_50.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(BULL_GTE_50.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (BULL_LT_30.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(BULL_LT_30.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (BULL_LT_50.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(BULL_LT_50.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (CALF.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(CALF.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (COW.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(COW.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (COW_W_0.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(COW_W_0.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (COW_W_1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(COW_W_1.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (COW_W_2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(COW_W_2.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (COW_W_3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(COW_W_3.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (LG_BULL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(LG_BULL.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (MED_BULL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(MED_BULL.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (MED_L_BULL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(MED_L_BULL.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (SM_BULL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(SM_BULL.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (UNKNOWN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(UNKNOWN.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (YBULL_ALL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(YBULL_ALL.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (YBULL_GTSF.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(YBULL_GTSF.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (YBULL_SF.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(YBULL_SF.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (MOOSE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(MOOSE.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (SubAreaSurveyed_SqMi.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(SubAreaSurveyed_SqMi.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (SubAreaAverageSearchEffort.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(SubAreaAverageSearchEffort.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (MethodologyUsed Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(MethodologyUsed,String)
            End If
            If (ResultsSource Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ResultsSource")
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(ResultsSource,String)
            End If
            If (Comments Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(Comments,String)
            End If
            Me.Adapter.InsertCommand.Parameters(36).Value = CType(RecordInsertedDate,Date)
            If (RecordInsertedBy Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RecordInsertedBy")
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(RecordInsertedBy,String)
            End If
            If (ValidatedDate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(ValidatedDate,String)
            End If
            If (ValidatedBy Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(ValidatedBy,String)
            End If
            If (ResultsSourceLink Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(ResultsSourceLink,String)
            End If
            If (ResultID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ResultID")
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(ResultID,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal SurveyName As String,  _
                    ByVal ParkSubArea As String,  _
                    ByVal BullCowRatio As Global.System.Nullable(Of Double),  _
                    ByVal CalfCowRatio As Global.System.Nullable(Of Double),  _
                    ByVal CalfAdultRatio As Global.System.Nullable(Of Double),  _
                    ByVal ADULT As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_30_40 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_30_50 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_30_60 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_41_50 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_ALL As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_GT_50 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_GT_60 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_GTE_50 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_LT_30 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_LT_50 As Global.System.Nullable(Of Integer),  _
                    ByVal CALF As Global.System.Nullable(Of Integer),  _
                    ByVal COW As Global.System.Nullable(Of Integer),  _
                    ByVal COW_W_0 As Global.System.Nullable(Of Integer),  _
                    ByVal COW_W_1 As Global.System.Nullable(Of Integer),  _
                    ByVal COW_W_2 As Global.System.Nullable(Of Integer),  _
                    ByVal COW_W_3 As Global.System.Nullable(Of Integer),  _
                    ByVal LG_BULL As Global.System.Nullable(Of Integer),  _
                    ByVal MED_BULL As Global.System.Nullable(Of Integer),  _
                    ByVal MED_L_BULL As Global.System.Nullable(Of Integer),  _
                    ByVal SM_BULL As Global.System.Nullable(Of Integer),  _
                    ByVal UNKNOWN As Global.System.Nullable(Of Integer),  _
                    ByVal YBULL_ALL As Global.System.Nullable(Of Integer),  _
                    ByVal YBULL_GTSF As Global.System.Nullable(Of Integer),  _
                    ByVal YBULL_SF As Global.System.Nullable(Of Integer),  _
                    ByVal MOOSE As Global.System.Nullable(Of Integer),  _
                    ByVal SubAreaSurveyed_SqMi As Global.System.Nullable(Of Double),  _
                    ByVal SubAreaAverageSearchEffort As Global.System.Nullable(Of Double),  _
                    ByVal MethodologyUsed As String,  _
                    ByVal ResultsSource As String,  _
                    ByVal Comments As String,  _
                    ByVal RecordInsertedDate As Date,  _
                    ByVal RecordInsertedBy As String,  _
                    ByVal ValidatedDate As String,  _
                    ByVal ValidatedBy As String,  _
                    ByVal ResultsSourceLink As String,  _
                    ByVal ResultID As String,  _
                    ByVal Original_SurveyName As String,  _
                    ByVal Original_ParkSubArea As String,  _
                    ByVal Original_ResultID As String) As Integer
            If (SurveyName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SurveyName")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(SurveyName,String)
            End If
            If (ParkSubArea Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ParkSubArea")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ParkSubArea,String)
            End If
            If (BullCowRatio.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(BullCowRatio.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CalfCowRatio.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CalfCowRatio.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CalfAdultRatio.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CalfAdultRatio.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (ADULT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ADULT.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (BULL_30_40.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(BULL_30_40.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (BULL_30_50.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(BULL_30_50.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (BULL_30_60.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(BULL_30_60.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (BULL_41_50.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(BULL_41_50.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (BULL_ALL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(BULL_ALL.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (BULL_GT_50.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(BULL_GT_50.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (BULL_GT_60.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(BULL_GT_60.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (BULL_GTE_50.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(BULL_GTE_50.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (BULL_LT_30.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(BULL_LT_30.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (BULL_LT_50.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(BULL_LT_50.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (CALF.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(CALF.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (COW.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(COW.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (COW_W_0.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(COW_W_0.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (COW_W_1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(COW_W_1.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (COW_W_2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(COW_W_2.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (COW_W_3.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(COW_W_3.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (LG_BULL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(LG_BULL.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (MED_BULL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(MED_BULL.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (MED_L_BULL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(MED_L_BULL.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (SM_BULL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(SM_BULL.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (UNKNOWN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(UNKNOWN.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (YBULL_ALL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(YBULL_ALL.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (YBULL_GTSF.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(YBULL_GTSF.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (YBULL_SF.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(YBULL_SF.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (MOOSE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(MOOSE.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (SubAreaSurveyed_SqMi.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(SubAreaSurveyed_SqMi.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (SubAreaAverageSearchEffort.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(SubAreaAverageSearchEffort.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (MethodologyUsed Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(MethodologyUsed,String)
            End If
            If (ResultsSource Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ResultsSource")
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(ResultsSource,String)
            End If
            If (Comments Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Comments,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(36).Value = CType(RecordInsertedDate,Date)
            If (RecordInsertedBy Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RecordInsertedBy")
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(RecordInsertedBy,String)
            End If
            If (ValidatedDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(ValidatedDate,String)
            End If
            If (ValidatedBy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(ValidatedBy,String)
            End If
            If (ResultsSourceLink Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(ResultsSourceLink,String)
            End If
            If (ResultID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ResultID")
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(ResultID,String)
            End If
            If (Original_SurveyName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SurveyName")
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_SurveyName,String)
            End If
            If (Original_ParkSubArea Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ParkSubArea")
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_ParkSubArea,String)
            End If
            If (Original_ResultID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ResultID")
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_ResultID,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal BullCowRatio As Global.System.Nullable(Of Double),  _
                    ByVal CalfCowRatio As Global.System.Nullable(Of Double),  _
                    ByVal CalfAdultRatio As Global.System.Nullable(Of Double),  _
                    ByVal ADULT As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_30_40 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_30_50 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_30_60 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_41_50 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_ALL As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_GT_50 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_GT_60 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_GTE_50 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_LT_30 As Global.System.Nullable(Of Integer),  _
                    ByVal BULL_LT_50 As Global.System.Nullable(Of Integer),  _
                    ByVal CALF As Global.System.Nullable(Of Integer),  _
                    ByVal COW As Global.System.Nullable(Of Integer),  _
                    ByVal COW_W_0 As Global.System.Nullable(Of Integer),  _
                    ByVal COW_W_1 As Global.System.Nullable(Of Integer),  _
                    ByVal COW_W_2 As Global.System.Nullable(Of Integer),  _
                    ByVal COW_W_3 As Global.System.Nullable(Of Integer),  _
                    ByVal LG_BULL As Global.System.Nullable(Of Integer),  _
                    ByVal MED_BULL As Global.System.Nullable(Of Integer),  _
                    ByVal MED_L_BULL As Global.System.Nullable(Of Integer),  _
                    ByVal SM_BULL As Global.System.Nullable(Of Integer),  _
                    ByVal UNKNOWN As Global.System.Nullable(Of Integer),  _
                    ByVal YBULL_ALL As Global.System.Nullable(Of Integer),  _
                    ByVal YBULL_GTSF As Global.System.Nullable(Of Integer),  _
                    ByVal YBULL_SF As Global.System.Nullable(Of Integer),  _
                    ByVal MOOSE As Global.System.Nullable(Of Integer),  _
                    ByVal SubAreaSurveyed_SqMi As Global.System.Nullable(Of Double),  _
                    ByVal SubAreaAverageSearchEffort As Global.System.Nullable(Of Double),  _
                    ByVal MethodologyUsed As String,  _
                    ByVal ResultsSource As String,  _
                    ByVal Comments As String,  _
                    ByVal RecordInsertedDate As Date,  _
                    ByVal RecordInsertedBy As String,  _
                    ByVal ValidatedDate As String,  _
                    ByVal ValidatedBy As String,  _
                    ByVal ResultsSourceLink As String,  _
                    ByVal Original_SurveyName As String,  _
                    ByVal Original_ParkSubArea As String,  _
                    ByVal Original_ResultID As String) As Integer
            Return Me.Update(Original_SurveyName, Original_ParkSubArea, BullCowRatio, CalfCowRatio, CalfAdultRatio, ADULT, BULL_30_40, BULL_30_50, BULL_30_60, BULL_41_50, BULL_ALL, BULL_GT_50, BULL_GT_60, BULL_GTE_50, BULL_LT_30, BULL_LT_50, CALF, COW, COW_W_0, COW_W_1, COW_W_2, COW_W_3, LG_BULL, MED_BULL, MED_L_BULL, SM_BULL, UNKNOWN, YBULL_ALL, YBULL_GTSF, YBULL_SF, MOOSE, SubAreaSurveyed_SqMi, SubAreaAverageSearchEffort, MethodologyUsed, ResultsSource, Comments, RecordInsertedDate, RecordInsertedBy, ValidatedDate, ValidatedBy, ResultsSourceLink, Original_ResultID, Original_SurveyName, Original_ParkSubArea, Original_ResultID)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class GSPE_SurveysTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "GSPE_Surveys"
            tableMapping.ColumnMappings.Add("SurveyName", "SurveyName")
            tableMapping.ColumnMappings.Add("Year", "Year")
            tableMapping.ColumnMappings.Add("Network", "Network")
            tableMapping.ColumnMappings.Add("Park", "Park")
            tableMapping.ColumnMappings.Add("Season", "Season")
            tableMapping.ColumnMappings.Add("StartDate", "StartDate")
            tableMapping.ColumnMappings.Add("EndDate", "EndDate")
            tableMapping.ColumnMappings.Add("AreaSurveyed_mi", "AreaSurveyed_mi")
            tableMapping.ColumnMappings.Add("AverageSearchEffort", "AverageSearchEffort")
            tableMapping.ColumnMappings.Add("Methodology", "Methodology")
            tableMapping.ColumnMappings.Add("ProtocolVersion", "ProtocolVersion")
            tableMapping.ColumnMappings.Add("ProtocolReferenceCode", "ProtocolReferenceCode")
            tableMapping.ColumnMappings.Add("Personnel", "Personnel")
            tableMapping.ColumnMappings.Add("ReportReferenceCode", "ReportReferenceCode")
            tableMapping.ColumnMappings.Add("ReportLink", "ReportLink")
            tableMapping.ColumnMappings.Add("DeliverablesDatasetReferenceCode", "DeliverablesDatasetReferenceCode")
            tableMapping.ColumnMappings.Add("DataSource", "DataSource")
            tableMapping.ColumnMappings.Add("DataResourcesDirectory", "DataResourcesDirectory")
            tableMapping.ColumnMappings.Add("Abstract", "Abstract")
            tableMapping.ColumnMappings.Add("Summary", "Summary")
            tableMapping.ColumnMappings.Add("DatasetProcessingSteps", "DatasetProcessingSteps")
            tableMapping.ColumnMappings.Add("Comments", "Comments")
            tableMapping.ColumnMappings.Add("RecordInsertedDate", "RecordInsertedDate")
            tableMapping.ColumnMappings.Add("RecordInsertedBy", "RecordInsertedBy")
            tableMapping.ColumnMappings.Add("ValidatedDate", "ValidatedDate")
            tableMapping.ColumnMappings.Add("ValidatedBy", "ValidatedBy")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[GSPE_Surveys] WHERE (([SurveyName] = @Original_SurveyName) AND"& _ 
                " ([Year] = @Original_Year) AND ((@IsNull_Network = 1 AND [Network] IS NULL) OR ("& _ 
                "[Network] = @Original_Network)) AND ((@IsNull_Park = 1 AND [Park] IS NULL) OR (["& _ 
                "Park] = @Original_Park)) AND ((@IsNull_Season = 1 AND [Season] IS NULL) OR ([Sea"& _ 
                "son] = @Original_Season)) AND ((@IsNull_StartDate = 1 AND [StartDate] IS NULL) O"& _ 
                "R ([StartDate] = @Original_StartDate)) AND ((@IsNull_EndDate = 1 AND [EndDate] I"& _ 
                "S NULL) OR ([EndDate] = @Original_EndDate)) AND ((@IsNull_AreaSurveyed_mi = 1 AN"& _ 
                "D [AreaSurveyed_mi] IS NULL) OR ([AreaSurveyed_mi] = @Original_AreaSurveyed_mi))"& _ 
                " AND ((@IsNull_AverageSearchEffort = 1 AND [AverageSearchEffort] IS NULL) OR ([A"& _ 
                "verageSearchEffort] = @Original_AverageSearchEffort)) AND ((@IsNull_Methodology "& _ 
                "= 1 AND [Methodology] IS NULL) OR ([Methodology] = @Original_Methodology)) AND ("& _ 
                "(@IsNull_ProtocolVersion = 1 AND [ProtocolVersion] IS NULL) OR ([ProtocolVersion"& _ 
                "] = @Original_ProtocolVersion)) AND ((@IsNull_ProtocolReferenceCode = 1 AND [Pro"& _ 
                "tocolReferenceCode] IS NULL) OR ([ProtocolReferenceCode] = @Original_ProtocolRef"& _ 
                "erenceCode)) AND ((@IsNull_Personnel = 1 AND [Personnel] IS NULL) OR ([Personnel"& _ 
                "] = @Original_Personnel)) AND ((@IsNull_ReportReferenceCode = 1 AND [ReportRefer"& _ 
                "enceCode] IS NULL) OR ([ReportReferenceCode] = @Original_ReportReferenceCode)) A"& _ 
                "ND ((@IsNull_ReportLink = 1 AND [ReportLink] IS NULL) OR ([ReportLink] = @Origin"& _ 
                "al_ReportLink)) AND ((@IsNull_DeliverablesDatasetReferenceCode = 1 AND [Delivera"& _ 
                "blesDatasetReferenceCode] IS NULL) OR ([DeliverablesDatasetReferenceCode] = @Ori"& _ 
                "ginal_DeliverablesDatasetReferenceCode)) AND ((@IsNull_DataSource = 1 AND [DataS"& _ 
                "ource] IS NULL) OR ([DataSource] = @Original_DataSource)) AND ((@IsNull_DataReso"& _ 
                "urcesDirectory = 1 AND [DataResourcesDirectory] IS NULL) OR ([DataResourcesDirec"& _ 
                "tory] = @Original_DataResourcesDirectory)) AND ([RecordInsertedDate] = @Original"& _ 
                "_RecordInsertedDate) AND ([RecordInsertedBy] = @Original_RecordInsertedBy) AND ("& _ 
                "(@IsNull_ValidatedDate = 1 AND [ValidatedDate] IS NULL) OR ([ValidatedDate] = @O"& _ 
                "riginal_ValidatedDate)) AND ((@IsNull_ValidatedBy = 1 AND [ValidatedBy] IS NULL)"& _ 
                " OR ([ValidatedBy] = @Original_ValidatedBy)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SurveyName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SurveyName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Year", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Year", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Network", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Network", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Network", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Network", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Park", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Park", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Park", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Park", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Season", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Season", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Season", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Season", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_StartDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StartDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_StartDate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StartDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EndDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EndDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EndDate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EndDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AreaSurveyed_mi", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AreaSurveyed_mi", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AreaSurveyed_mi", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AreaSurveyed_mi", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AverageSearchEffort", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AverageSearchEffort", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AverageSearchEffort", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AverageSearchEffort", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Methodology", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Methodology", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Methodology", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Methodology", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProtocolVersion", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProtocolVersion", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProtocolVersion", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProtocolVersion", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ProtocolReferenceCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProtocolReferenceCode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ProtocolReferenceCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProtocolReferenceCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Personnel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Personnel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Personnel", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Personnel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReportReferenceCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReportReferenceCode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReportReferenceCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReportReferenceCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReportLink", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReportLink", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReportLink", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReportLink", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DeliverablesDatasetReferenceCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DeliverablesDatasetReferenceCode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DeliverablesDatasetReferenceCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DeliverablesDatasetReferenceCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DataSource", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DataSource", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DataSource", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DataSource", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DataResourcesDirectory", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DataResourcesDirectory", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DataResourcesDirectory", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DataResourcesDirectory", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RecordInsertedDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RecordInsertedDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RecordInsertedBy", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RecordInsertedBy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ValidatedDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ValidatedDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ValidatedDate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ValidatedDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ValidatedBy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ValidatedBy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ValidatedBy", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ValidatedBy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[GSPE_Surveys] ([SurveyName], [Year], [Network], [Park], [Seaso"& _ 
                "n], [StartDate], [EndDate], [AreaSurveyed_mi], [AverageSearchEffort], [Methodolo"& _ 
                "gy], [ProtocolVersion], [ProtocolReferenceCode], [Personnel], [ReportReferenceCo"& _ 
                "de], [ReportLink], [DeliverablesDatasetReferenceCode], [DataSource], [DataResour"& _ 
                "cesDirectory], [Abstract], [Summary], [DatasetProcessingSteps], [Comments], [Rec"& _ 
                "ordInsertedDate], [RecordInsertedBy], [ValidatedDate], [ValidatedBy]) VALUES (@S"& _ 
                "urveyName, @Year, @Network, @Park, @Season, @StartDate, @EndDate, @AreaSurveyed_"& _ 
                "mi, @AverageSearchEffort, @Methodology, @ProtocolVersion, @ProtocolReferenceCode"& _ 
                ", @Personnel, @ReportReferenceCode, @ReportLink, @DeliverablesDatasetReferenceCo"& _ 
                "de, @DataSource, @DataResourcesDirectory, @Abstract, @Summary, @DatasetProcessin"& _ 
                "gSteps, @Comments, @RecordInsertedDate, @RecordInsertedBy, @ValidatedDate, @Vali"& _ 
                "datedBy);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SurveyName, Year, Network, Park, Season, StartDate, EndDate, A"& _ 
                "reaSurveyed_mi, AverageSearchEffort, Methodology, ProtocolVersion, ProtocolRefer"& _ 
                "enceCode, Personnel, ReportReferenceCode, ReportLink, DeliverablesDatasetReferen"& _ 
                "ceCode, DataSource, DataResourcesDirectory, Abstract, Summary, DatasetProcessing"& _ 
                "Steps, Comments, RecordInsertedDate, RecordInsertedBy, ValidatedDate, ValidatedB"& _ 
                "y FROM GSPE_Surveys WHERE (SurveyName = @SurveyName)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SurveyName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SurveyName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Year", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Year", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Network", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Network", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Park", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Park", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Season", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Season", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StartDate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "StartDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndDate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EndDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AreaSurveyed_mi", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AreaSurveyed_mi", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AverageSearchEffort", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AverageSearchEffort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Methodology", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Methodology", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProtocolVersion", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProtocolVersion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProtocolReferenceCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProtocolReferenceCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Personnel", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Personnel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReportReferenceCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReportReferenceCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReportLink", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReportLink", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DeliverablesDatasetReferenceCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DeliverablesDatasetReferenceCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DataSource", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DataSource", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DataResourcesDirectory", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DataResourcesDirectory", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Abstract", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Abstract", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Summary", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Summary", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DatasetProcessingSteps", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DatasetProcessingSteps", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Comments", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Comments", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RecordInsertedDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RecordInsertedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RecordInsertedBy", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RecordInsertedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ValidatedDate", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ValidatedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ValidatedBy", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ValidatedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE       GSPE_Surveys"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                SurveyName = @SurveyName, Year = @Y"& _ 
                "ear, Network = @Network, Park = @Park, Season = @Season, StartDate = @StartDate,"& _ 
                " EndDate = @EndDate, AreaSurveyed_mi = @AreaSurveyed_mi, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    AverageSearchEffort = @AverageSearchEffort, Methodology = @Methodology, Prot"& _ 
                "ocolVersion = @ProtocolVersion, ProtocolReferenceCode = @ProtocolReferenceCode, "& _ 
                "Personnel = @Personnel, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         ReportReferenceCode = @Report"& _ 
                "ReferenceCode, ReportLink = @ReportLink, DeliverablesDatasetReferenceCode = @Del"& _ 
                "iverablesDatasetReferenceCode, DataSource = @DataSource, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    DataResourcesDirectory = @DataResourcesDirectory, Abstract = @Abstract, Summ"& _ 
                "ary = @Summary, DatasetProcessingSteps = @DatasetProcessingSteps, Comments = @Co"& _ 
                "mments, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RecordInsertedDate = @RecordInsertedDate, Rec"& _ 
                "ordInsertedBy = @RecordInsertedBy, ValidatedDate = @ValidatedDate, ValidatedBy ="& _ 
                " @ValidatedBy"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (SurveyName = @Original_SurveyName); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Survey"& _ 
                "Name, Year, Network, Park, Season, StartDate, EndDate, AreaSurveyed_mi, AverageS"& _ 
                "earchEffort, Methodology, ProtocolVersion, ProtocolReferenceCode, Personnel, Rep"& _ 
                "ortReferenceCode, ReportLink, DeliverablesDatasetReferenceCode, DataSource, Data"& _ 
                "ResourcesDirectory, Abstract, Summary, DatasetProcessingSteps, Comments, RecordI"& _ 
                "nsertedDate, RecordInsertedBy, ValidatedDate, ValidatedBy FROM GSPE_Surveys WHER"& _ 
                "E (SurveyName = @SurveyName)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SurveyName", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "SurveyName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Year", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Year", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Network", Global.System.Data.SqlDbType.[Char], 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Network", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Park", Global.System.Data.SqlDbType.VarChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Park", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Season", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "Season", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StartDate", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "StartDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndDate", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "EndDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AreaSurveyed_mi", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "AreaSurveyed_mi", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AverageSearchEffort", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "AverageSearchEffort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Methodology", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "Methodology", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProtocolVersion", Global.System.Data.SqlDbType.Float, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "ProtocolVersion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProtocolReferenceCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ProtocolReferenceCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Personnel", Global.System.Data.SqlDbType.VarChar, 200, Global.System.Data.ParameterDirection.Input, 0, 0, "Personnel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReportReferenceCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "ReportReferenceCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReportLink", Global.System.Data.SqlDbType.VarChar, 2000, Global.System.Data.ParameterDirection.Input, 0, 0, "ReportLink", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DeliverablesDatasetReferenceCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "DeliverablesDatasetReferenceCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DataSource", Global.System.Data.SqlDbType.VarChar, 2000, Global.System.Data.ParameterDirection.Input, 0, 0, "DataSource", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DataResourcesDirectory", Global.System.Data.SqlDbType.VarChar, 1000, Global.System.Data.ParameterDirection.Input, 0, 0, "DataResourcesDirectory", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Abstract", Global.System.Data.SqlDbType.VarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "Abstract", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Summary", Global.System.Data.SqlDbType.VarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "Summary", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DatasetProcessingSteps", Global.System.Data.SqlDbType.VarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "DatasetProcessingSteps", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Comments", Global.System.Data.SqlDbType.VarChar, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "Comments", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RecordInsertedDate", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "RecordInsertedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RecordInsertedBy", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "RecordInsertedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ValidatedDate", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "ValidatedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ValidatedBy", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ValidatedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SurveyName", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "SurveyName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Moose3.My.MySettings.Default.MooseConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SurveyName, Year, Network, Park, Season, StartDate, EndDate, AreaSurveyed_"& _ 
                "mi, AverageSearchEffort, Methodology, ProtocolVersion, ProtocolReferenceCode, Pe"& _ 
                "rsonnel, ReportReferenceCode, ReportLink, DeliverablesDatasetReferenceCode, Data"& _ 
                "Source, DataResourcesDirectory, Abstract, Summary, DatasetProcessingSteps, Comme"& _ 
                "nts, RecordInsertedDate, RecordInsertedBy, ValidatedDate, ValidatedBy FROM dbo.G"& _ 
                "SPE_Surveys"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As MooseDataSet.GSPE_SurveysDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As MooseDataSet.GSPE_SurveysDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As MooseDataSet.GSPE_SurveysDataTable = New MooseDataSet.GSPE_SurveysDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As MooseDataSet.GSPE_SurveysDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As MooseDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "GSPE_Surveys")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_SurveyName As String,  _
                    ByVal Original_Year As Integer,  _
                    ByVal Original_Network As String,  _
                    ByVal Original_Park As String,  _
                    ByVal Original_Season As String,  _
                    ByVal Original_StartDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_EndDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_AreaSurveyed_mi As Global.System.Nullable(Of Double),  _
                    ByVal Original_AverageSearchEffort As Global.System.Nullable(Of Double),  _
                    ByVal Original_Methodology As String,  _
                    ByVal Original_ProtocolVersion As Global.System.Nullable(Of Double),  _
                    ByVal Original_ProtocolReferenceCode As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Personnel As String,  _
                    ByVal Original_ReportReferenceCode As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ReportLink As String,  _
                    ByVal Original_DeliverablesDatasetReferenceCode As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DataSource As String,  _
                    ByVal Original_DataResourcesDirectory As String,  _
                    ByVal Original_RecordInsertedDate As Date,  _
                    ByVal Original_RecordInsertedBy As String,  _
                    ByVal Original_ValidatedDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ValidatedBy As String) As Integer
            If (Original_SurveyName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SurveyName")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_SurveyName,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Year,Integer)
            If (Original_Network Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_Network,String)
            End If
            If (Original_Park Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_Park,String)
            End If
            If (Original_Season Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_Season,String)
            End If
            If (Original_StartDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_StartDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_EndDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_EndDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_AreaSurveyed_mi.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_AreaSurveyed_mi.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_AverageSearchEffort.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_AverageSearchEffort.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_Methodology Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_Methodology,String)
            End If
            If (Original_ProtocolVersion.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_ProtocolVersion.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_ProtocolReferenceCode.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_ProtocolReferenceCode.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_Personnel Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_Personnel,String)
            End If
            If (Original_ReportReferenceCode.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_ReportReferenceCode.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_ReportLink Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_ReportLink,String)
            End If
            If (Original_DeliverablesDatasetReferenceCode.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_DeliverablesDatasetReferenceCode.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_DataSource Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_DataSource,String)
            End If
            If (Original_DataResourcesDirectory Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_DataResourcesDirectory,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_RecordInsertedDate,Date)
            If (Original_RecordInsertedBy Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RecordInsertedBy")
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_RecordInsertedBy,String)
            End If
            If (Original_ValidatedDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_ValidatedDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_ValidatedBy Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_ValidatedBy,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal SurveyName As String,  _
                    ByVal Year As Integer,  _
                    ByVal Network As String,  _
                    ByVal Park As String,  _
                    ByVal Season As String,  _
                    ByVal StartDate As Global.System.Nullable(Of Date),  _
                    ByVal EndDate As Global.System.Nullable(Of Date),  _
                    ByVal AreaSurveyed_mi As Global.System.Nullable(Of Double),  _
                    ByVal AverageSearchEffort As Global.System.Nullable(Of Double),  _
                    ByVal Methodology As String,  _
                    ByVal ProtocolVersion As Global.System.Nullable(Of Double),  _
                    ByVal ProtocolReferenceCode As Global.System.Nullable(Of Integer),  _
                    ByVal Personnel As String,  _
                    ByVal ReportReferenceCode As Global.System.Nullable(Of Integer),  _
                    ByVal ReportLink As String,  _
                    ByVal DeliverablesDatasetReferenceCode As Global.System.Nullable(Of Integer),  _
                    ByVal DataSource As String,  _
                    ByVal DataResourcesDirectory As String,  _
                    ByVal Abstract As String,  _
                    ByVal Summary As String,  _
                    ByVal DatasetProcessingSteps As String,  _
                    ByVal Comments As String,  _
                    ByVal RecordInsertedDate As Date,  _
                    ByVal RecordInsertedBy As String,  _
                    ByVal ValidatedDate As Global.System.Nullable(Of Date),  _
                    ByVal ValidatedBy As String) As Integer
            If (SurveyName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SurveyName")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(SurveyName,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(Year,Integer)
            If (Network Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Network,String)
            End If
            If (Park Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Park,String)
            End If
            If (Season Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Season,String)
            End If
            If (StartDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(StartDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (EndDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(EndDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (AreaSurveyed_mi.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(AreaSurveyed_mi.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (AverageSearchEffort.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(AverageSearchEffort.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Methodology Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Methodology,String)
            End If
            If (ProtocolVersion.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(ProtocolVersion.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (ProtocolReferenceCode.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(ProtocolReferenceCode.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Personnel Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Personnel,String)
            End If
            If (ReportReferenceCode.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(ReportReferenceCode.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (ReportLink Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(ReportLink,String)
            End If
            If (DeliverablesDatasetReferenceCode.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(DeliverablesDatasetReferenceCode.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (DataSource Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(DataSource,String)
            End If
            If (DataResourcesDirectory Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(DataResourcesDirectory,String)
            End If
            If (Abstract Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(Abstract,String)
            End If
            If (Summary Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(Summary,String)
            End If
            If (DatasetProcessingSteps Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(DatasetProcessingSteps,String)
            End If
            If (Comments Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(Comments,String)
            End If
            Me.Adapter.InsertCommand.Parameters(22).Value = CType(RecordInsertedDate,Date)
            If (RecordInsertedBy Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RecordInsertedBy")
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(RecordInsertedBy,String)
            End If
            If (ValidatedDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(ValidatedDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (ValidatedBy Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(ValidatedBy,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal SurveyName As String,  _
                    ByVal Year As Integer,  _
                    ByVal Network As String,  _
                    ByVal Park As String,  _
                    ByVal Season As String,  _
                    ByVal StartDate As String,  _
                    ByVal EndDate As String,  _
                    ByVal AreaSurveyed_mi As Global.System.Nullable(Of Double),  _
                    ByVal AverageSearchEffort As Global.System.Nullable(Of Double),  _
                    ByVal Methodology As String,  _
                    ByVal ProtocolVersion As Global.System.Nullable(Of Double),  _
                    ByVal ProtocolReferenceCode As Global.System.Nullable(Of Integer),  _
                    ByVal Personnel As String,  _
                    ByVal ReportReferenceCode As Global.System.Nullable(Of Integer),  _
                    ByVal ReportLink As String,  _
                    ByVal DeliverablesDatasetReferenceCode As Global.System.Nullable(Of Integer),  _
                    ByVal DataSource As String,  _
                    ByVal DataResourcesDirectory As String,  _
                    ByVal Abstract As String,  _
                    ByVal Summary As String,  _
                    ByVal DatasetProcessingSteps As String,  _
                    ByVal Comments As String,  _
                    ByVal RecordInsertedDate As Date,  _
                    ByVal RecordInsertedBy As String,  _
                    ByVal ValidatedDate As String,  _
                    ByVal ValidatedBy As String,  _
                    ByVal Original_SurveyName As String) As Integer
            If (SurveyName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SurveyName")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(SurveyName,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Year,Integer)
            If (Network Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Network,String)
            End If
            If (Park Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Park,String)
            End If
            If (Season Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Season,String)
            End If
            If (StartDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(StartDate,String)
            End If
            If (EndDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(EndDate,String)
            End If
            If (AreaSurveyed_mi.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(AreaSurveyed_mi.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (AverageSearchEffort.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(AverageSearchEffort.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Methodology Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Methodology,String)
            End If
            If (ProtocolVersion.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(ProtocolVersion.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (ProtocolReferenceCode.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(ProtocolReferenceCode.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Personnel Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Personnel,String)
            End If
            If (ReportReferenceCode.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(ReportReferenceCode.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (ReportLink Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(ReportLink,String)
            End If
            If (DeliverablesDatasetReferenceCode.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(DeliverablesDatasetReferenceCode.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (DataSource Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(DataSource,String)
            End If
            If (DataResourcesDirectory Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(DataResourcesDirectory,String)
            End If
            If (Abstract Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Abstract,String)
            End If
            If (Summary Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Summary,String)
            End If
            If (DatasetProcessingSteps Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(DatasetProcessingSteps,String)
            End If
            If (Comments Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Comments,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(RecordInsertedDate,Date)
            If (RecordInsertedBy Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RecordInsertedBy")
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(RecordInsertedBy,String)
            End If
            If (ValidatedDate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(ValidatedDate,String)
            End If
            If (ValidatedBy Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(ValidatedBy,String)
            End If
            If (Original_SurveyName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SurveyName")
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_SurveyName,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Year As Integer,  _
                    ByVal Network As String,  _
                    ByVal Park As String,  _
                    ByVal Season As String,  _
                    ByVal StartDate As String,  _
                    ByVal EndDate As String,  _
                    ByVal AreaSurveyed_mi As Global.System.Nullable(Of Double),  _
                    ByVal AverageSearchEffort As Global.System.Nullable(Of Double),  _
                    ByVal Methodology As String,  _
                    ByVal ProtocolVersion As Global.System.Nullable(Of Double),  _
                    ByVal ProtocolReferenceCode As Global.System.Nullable(Of Integer),  _
                    ByVal Personnel As String,  _
                    ByVal ReportReferenceCode As Global.System.Nullable(Of Integer),  _
                    ByVal ReportLink As String,  _
                    ByVal DeliverablesDatasetReferenceCode As Global.System.Nullable(Of Integer),  _
                    ByVal DataSource As String,  _
                    ByVal DataResourcesDirectory As String,  _
                    ByVal Abstract As String,  _
                    ByVal Summary As String,  _
                    ByVal DatasetProcessingSteps As String,  _
                    ByVal Comments As String,  _
                    ByVal RecordInsertedDate As Date,  _
                    ByVal RecordInsertedBy As String,  _
                    ByVal ValidatedDate As String,  _
                    ByVal ValidatedBy As String,  _
                    ByVal Original_SurveyName As String) As Integer
            Return Me.Update(Original_SurveyName, Year, Network, Park, Season, StartDate, EndDate, AreaSurveyed_mi, AverageSearchEffort, Methodology, ProtocolVersion, ProtocolReferenceCode, Personnel, ReportReferenceCode, ReportLink, DeliverablesDatasetReferenceCode, DataSource, DataResourcesDirectory, Abstract, Summary, DatasetProcessingSteps, Comments, RecordInsertedDate, RecordInsertedBy, ValidatedDate, ValidatedBy, Original_SurveyName)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _gSPETableAdapter As GSPETableAdapter
        
        Private _gSPE_DensityEstimatesTableAdapter As GSPE_DensityEstimatesTableAdapter
        
        Private _gSPE_PopulationEstimatesTableAdapter As GSPE_PopulationEstimatesTableAdapter
        
        Private _gSPE_ResultsTableAdapter As GSPE_ResultsTableAdapter
        
        Private _gSPE_SurveysTableAdapter As GSPE_SurveysTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property GSPETableAdapter() As GSPETableAdapter
            Get
                Return Me._gSPETableAdapter
            End Get
            Set
                Me._gSPETableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property GSPE_DensityEstimatesTableAdapter() As GSPE_DensityEstimatesTableAdapter
            Get
                Return Me._gSPE_DensityEstimatesTableAdapter
            End Get
            Set
                Me._gSPE_DensityEstimatesTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property GSPE_PopulationEstimatesTableAdapter() As GSPE_PopulationEstimatesTableAdapter
            Get
                Return Me._gSPE_PopulationEstimatesTableAdapter
            End Get
            Set
                Me._gSPE_PopulationEstimatesTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property GSPE_ResultsTableAdapter() As GSPE_ResultsTableAdapter
            Get
                Return Me._gSPE_ResultsTableAdapter
            End Get
            Set
                Me._gSPE_ResultsTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property GSPE_SurveysTableAdapter() As GSPE_SurveysTableAdapter
            Get
                Return Me._gSPE_SurveysTableAdapter
            End Get
            Set
                Me._gSPE_SurveysTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._gSPETableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._gSPETableAdapter.Connection) Is Nothing)) Then
                    Return Me._gSPETableAdapter.Connection
                End If
                If ((Not (Me._gSPE_DensityEstimatesTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._gSPE_DensityEstimatesTableAdapter.Connection) Is Nothing)) Then
                    Return Me._gSPE_DensityEstimatesTableAdapter.Connection
                End If
                If ((Not (Me._gSPE_PopulationEstimatesTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._gSPE_PopulationEstimatesTableAdapter.Connection) Is Nothing)) Then
                    Return Me._gSPE_PopulationEstimatesTableAdapter.Connection
                End If
                If ((Not (Me._gSPE_ResultsTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._gSPE_ResultsTableAdapter.Connection) Is Nothing)) Then
                    Return Me._gSPE_ResultsTableAdapter.Connection
                End If
                If ((Not (Me._gSPE_SurveysTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._gSPE_SurveysTableAdapter.Connection) Is Nothing)) Then
                    Return Me._gSPE_SurveysTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._gSPETableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._gSPE_DensityEstimatesTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._gSPE_PopulationEstimatesTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._gSPE_ResultsTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._gSPE_SurveysTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As MooseDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._gSPE_SurveysTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.GSPE_Surveys.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._gSPE_SurveysTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._gSPETableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.GSPE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._gSPETableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._gSPE_DensityEstimatesTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.GSPE_DensityEstimates.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._gSPE_DensityEstimatesTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._gSPE_PopulationEstimatesTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.GSPE_PopulationEstimates.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._gSPE_PopulationEstimatesTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._gSPE_ResultsTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.GSPE_Results.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._gSPE_ResultsTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As MooseDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._gSPE_SurveysTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.GSPE_Surveys.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._gSPE_SurveysTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._gSPETableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.GSPE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._gSPETableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._gSPE_DensityEstimatesTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.GSPE_DensityEstimates.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._gSPE_DensityEstimatesTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._gSPE_PopulationEstimatesTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.GSPE_PopulationEstimates.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._gSPE_PopulationEstimatesTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._gSPE_ResultsTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.GSPE_Results.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._gSPE_ResultsTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As MooseDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._gSPE_ResultsTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.GSPE_Results.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._gSPE_ResultsTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._gSPE_PopulationEstimatesTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.GSPE_PopulationEstimates.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._gSPE_PopulationEstimatesTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._gSPE_DensityEstimatesTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.GSPE_DensityEstimates.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._gSPE_DensityEstimatesTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._gSPETableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.GSPE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._gSPETableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._gSPE_SurveysTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.GSPE_Surveys.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._gSPE_SurveysTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As MooseDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._gSPETableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._gSPETableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._gSPE_DensityEstimatesTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._gSPE_DensityEstimatesTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._gSPE_PopulationEstimatesTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._gSPE_PopulationEstimatesTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._gSPE_ResultsTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._gSPE_ResultsTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._gSPE_SurveysTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._gSPE_SurveysTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._gSPETableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._gSPETableAdapter, Me._gSPETableAdapter.Connection)
                    Me._gSPETableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._gSPETableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._gSPETableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._gSPETableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._gSPETableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._gSPE_DensityEstimatesTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._gSPE_DensityEstimatesTableAdapter, Me._gSPE_DensityEstimatesTableAdapter.Connection)
                    Me._gSPE_DensityEstimatesTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._gSPE_DensityEstimatesTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._gSPE_DensityEstimatesTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._gSPE_DensityEstimatesTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._gSPE_DensityEstimatesTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._gSPE_PopulationEstimatesTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._gSPE_PopulationEstimatesTableAdapter, Me._gSPE_PopulationEstimatesTableAdapter.Connection)
                    Me._gSPE_PopulationEstimatesTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._gSPE_PopulationEstimatesTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._gSPE_PopulationEstimatesTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._gSPE_PopulationEstimatesTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._gSPE_PopulationEstimatesTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._gSPE_ResultsTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._gSPE_ResultsTableAdapter, Me._gSPE_ResultsTableAdapter.Connection)
                    Me._gSPE_ResultsTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._gSPE_ResultsTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._gSPE_ResultsTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._gSPE_ResultsTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._gSPE_ResultsTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._gSPE_SurveysTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._gSPE_SurveysTableAdapter, Me._gSPE_SurveysTableAdapter.Connection)
                    Me._gSPE_SurveysTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._gSPE_SurveysTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._gSPE_SurveysTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._gSPE_SurveysTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._gSPE_SurveysTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._gSPETableAdapter) Is Nothing) Then
                    Me._gSPETableAdapter.Connection = CType(revertConnections(Me._gSPETableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._gSPETableAdapter.Transaction = Nothing
                End If
                If (Not (Me._gSPE_DensityEstimatesTableAdapter) Is Nothing) Then
                    Me._gSPE_DensityEstimatesTableAdapter.Connection = CType(revertConnections(Me._gSPE_DensityEstimatesTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._gSPE_DensityEstimatesTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._gSPE_PopulationEstimatesTableAdapter) Is Nothing) Then
                    Me._gSPE_PopulationEstimatesTableAdapter.Connection = CType(revertConnections(Me._gSPE_PopulationEstimatesTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._gSPE_PopulationEstimatesTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._gSPE_ResultsTableAdapter) Is Nothing) Then
                    Me._gSPE_ResultsTableAdapter.Connection = CType(revertConnections(Me._gSPE_ResultsTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._gSPE_ResultsTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._gSPE_SurveysTableAdapter) Is Nothing) Then
                    Me._gSPE_SurveysTableAdapter.Connection = CType(revertConnections(Me._gSPE_SurveysTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._gSPE_SurveysTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
